{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/validator.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/abci/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/params.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/evidence.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/vesting.js","webpack:///./src/store/generated/ylgr/nifl-star/ethermint.evm.v1alpha1/module/types/ethermint/evm/v1alpha1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/channel.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/staking.js","webpack:///./src/App.vue","webpack:///./src/components/Sidebar.vue","webpack:///./src/components/Sidebar.vue?d966","webpack:///./src/App.vue?889f","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/types/cosmos/crisis/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/bank.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/index.js","webpack:///./src/store/generated/ylgr/nifl-star/ethermint.evm.v1alpha1/module/rest.js","webpack:///./src/store/generated/ylgr/nifl-star/ethermint.evm.v1alpha1/module/index.js","webpack:///./src/store/generated/ylgr/nifl-star/ethermint.evm.v1alpha1/module/types/ethermint/evm/v1alpha1/genesis.js","webpack:///./src/store/generated/ylgr/nifl-star/ethermint.evm.v1alpha1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/index.js","webpack:///./src/store/generated/index.js","webpack:///./src/store/config.js","webpack:///./src/store/index.js","webpack:///./src/views/Index.vue","webpack:///./src/views/Index.vue?fadd","webpack:///./src/views/Types.vue","webpack:///./src/views/Types.vue?0fc0","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./src/App.vue?d490","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/proof.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/connection.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/crypto/proof.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/version/types.js","webpack:///./src/store/generated/ylgr/nifl-star/ethermint.evm.v1alpha1/module/types/ethermint/evm/v1alpha1/evm.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/distribution.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/slashing.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/auth/v1beta1/auth.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/gov.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/transfer.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/version/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/commitment/v1/commitment.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/confio/proofs.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/keys.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/cosmos/base/abci/v1beta1/abci.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/validator.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/crypto/keys.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/google/protobuf/any.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","baseTimestamp","seconds","nanos","Timestamp","encode","message","writer","Writer","uint32","int64","int32","decode","input","reader","Uint8Array","Reader","end","undefined","len","pos","tag","longToNumber","skipType","fromJSON","Number","toJSON","obj","fromPartial","globalThis","self","global","long","gt","MAX_SAFE_INTEGER","Error","toNumber","util","Long","configure","baseValidatorSet","totalVotingPower","ValidatorSet","validators","v","Validator","fork","ldelim","proposer","e","map","baseValidator","votingPower","proposerPriority","address","bytes","pubKey","PublicKey","bytesFromBase64","base64FromBytes","atob","b64","Buffer","from","toString","bin","arr","charCodeAt","btoa","byteLength","String","fromCharCode","join","baseMsgCreateClient","signer","MsgCreateClient","clientState","Any","consensusState","string","baseMsgUpdateClient","clientId","MsgUpdateClient","header","baseMsgUpgradeClient","MsgUpgradeClient","proofUpgradeClient","proofUpgradeConsensusState","baseMsgSubmitMisbehaviour","MsgSubmitMisbehaviour","misbehaviour","CheckTxType","EvidenceType","ResponseOfferSnapshot_Result","ResponseApplySnapshotChunk_Result","baseEvent","type","Event","attributes","EventAttribute","baseEventAttribute","index","bool","Boolean","baseHeight","revisionNumber","revisionHeight","Height","uint64","baseEvidenceParams","maxAgeNumBlocks","maxBytes","EvidenceParams","maxAgeDuration","Duration","baseValidatorParams","pubKeyTypes","ValidatorParams","baseVersionParams","appVersion","VersionParams","baseAny","typeUrl","BlockIDFlag","SignedMsgType","basePartSetHeader","total","PartSetHeader","hash","baseBlockID","BlockID","partSetHeader","baseHeader","chainId","height","Header","version","Consensus","time","toTimestamp","lastBlockId","lastCommitHash","dataHash","validatorsHash","nextValidatorsHash","consensusHash","appHash","lastResultsHash","evidenceHash","proposerAddress","fromTimestamp","fromJsonTimestamp","toISOString","date","getTime","millis","Date","baseEquivocation","power","consensusAddress","Equivocation","baseDuration","baseBaseVestingAccount","endTime","BaseVestingAccount","baseAccount","BaseAccount","originalVesting","Coin","delegatedFree","delegatedVesting","baseContinuousVestingAccount","startTime","ContinuousVestingAccount","baseVestingAccount","baseDelayedVestingAccount","DelayedVestingAccount","basePeriod","Period","amount","basePeriodicVestingAccount","PeriodicVestingAccount","vestingPeriods","baseMsgEthereumTx","size","MsgEthereumTx","TxData","double","SigCache","baseTxData","nonce","price","gas","to","Recipient","baseRecipient","baseSigCache","EIP155Signer","baseEIP155Signer","chainIdMul","State","Order","stateFromJSON","STATE_UNINITIALIZED_UNSPECIFIED","STATE_INIT","STATE_TRYOPEN","STATE_OPEN","STATE_CLOSED","UNRECOGNIZED","stateToJSON","orderFromJSON","ORDER_NONE_UNSPECIFIED","ORDER_UNORDERED","ORDER_ORDERED","orderToJSON","baseChannel","state","ordering","connectionHops","Channel","counterparty","Counterparty","baseIdentifiedChannel","portId","channelId","IdentifiedChannel","baseCounterparty","basePacket","sequence","sourcePort","sourceChannel","destinationPort","destinationChannel","timeoutTimestamp","Packet","timeoutHeight","basePacketState","PacketState","baseAcknowledgement","Acknowledgement","error","BondStatus","bondStatusFromJSON","BOND_STATUS_UNSPECIFIED","BOND_STATUS_UNBONDED","BOND_STATUS_UNBONDING","BOND_STATUS_BONDED","bondStatusToJSON","baseHistoricalInfo","HistoricalInfo","valset","baseCommissionRates","rate","maxRate","maxChangeRate","CommissionRates","baseCommission","Commission","commissionRates","updateTime","baseDescription","moniker","identity","website","securityContact","details","Description","operatorAddress","jailed","status","tokens","delegatorShares","unbondingHeight","minSelfDelegation","consensusPubkey","description","unbondingTime","commission","baseValAddresses","addresses","ValAddresses","baseDVPair","delegatorAddress","validatorAddress","DVPair","baseDVPairs","DVPairs","pairs","baseDVVTriplet","validatorSrcAddress","validatorDstAddress","DVVTriplet","baseDVVTriplets","DVVTriplets","triplets","baseDelegation","shares","Delegation","baseUnbondingDelegation","UnbondingDelegation","entries","UnbondingDelegationEntry","baseUnbondingDelegationEntry","creationHeight","initialBalance","balance","completionTime","baseRedelegationEntry","sharesDst","RedelegationEntry","baseRedelegation","Redelegation","baseParams","maxValidators","maxEntries","historicalEntries","bondDenom","Params","baseDelegationResponse","DelegationResponse","delegation","baseRedelegationEntryResponse","RedelegationEntryResponse","redelegationEntry","baseRedelegationResponse","RedelegationResponse","redelegation","basePool","notBondedTokens","bondedTokens","Pool","initialized","ref","$refs","menu","closeDropdown","sidebar","content","class","sidebarOpen","default","link","text","icon","href","target","footer","showText","computed","hasWallet","this","$store","hasModule","render","components","Sidebar","created","dispatch","errorCaptured","err","console","log","ContentType","HttpClient","apiConfig","baseUrl","securityData","securityWorker","abortControllers","Map","baseApiParams","credentials","headers","redirect","referrerPolicy","setSecurityData","contentFormatters","Json","JSON","stringify","FormData","keys","reduce","append","UrlEncoded","toQueryString","createAbortSignal","cancelToken","has","abortController","signal","AbortController","set","abortRequest","abort","delete","request","body","secure","path","query","format","params","secureParams","requestParams","mergeRequestParams","queryString","payloadFormatter","fetch","then","response","ok","catch","assign","encodeURIComponent","Array","isArray","rawQuery","filter","addQueryParam","params1","params2","Api","arguments","queryDenomTraces","method","queryDenomTrace","queryParams","types","MsgTransfer","registry","Registry","defaultFee","txClient","wallet","addr","SigningStargateClient","connectWithSigner","client","getAccounts","signAndBroadcast","msgs","fee","memo","msgTransfer","queryClient","initTxClient","vuexGetters","initQueryClient","getStructure","template","structure","fields","field","getDefaultState","DenomTrace","DenomTraces","_Structure","FungibleTokenPacketData","_Subscriptions","Set","namespaced","mutations","RESET_STATE","QUERY","SUBSCRIBE","subscription","add","UNSUBSCRIBE","getters","getDenomTrace","getDenomTraces","getParams","getTypeStructure","actions","init","rootGetters","on","resetState","commit","unsubscribe","StoreUpdate","forEach","action","payload","QueryDenomTrace","options","subscribe","all","SpVuexError","QueryDenomTraces","pagination","nextKey","next_values","prop","QueryParams","sendMsgTransfer","msg","TxResponse","ABCIMessageLog","StringEvent","Attribute","GasInfo","Result","SimulationResponse","MsgData","TxMsgData","SearchTxsResult","querySigningInfos","querySigningInfo","consAddress","baseMsgUnjail","validatorAddr","MsgUnjail","msgUnjail","SigningInfo","SigningInfos","ValidatorSigningInfo","ValidatorMissedBlocks","MissedBlock","getSigningInfo","getSigningInfos","QuerySigningInfo","cons_address","QuerySigningInfos","sendMsgUnjail","queryClientParams","queryClientStates","queryClientState","queryConsensusStates","queryConsensusState","msgUpgradeClient","msgUpdateClient","msgCreateClient","msgSubmitMisbehaviour","ClientState","ClientStates","ConsensusState","ConsensusStates","ClientParams","IdentifiedClientState","ConsensusStateWithHeight","ClientConsensusStates","ClientUpdateProposal","GenesisMetadata","IdentifiedGenesisMetadata","getClientState","getClientStates","getConsensusState","getConsensusStates","getClientParams","QueryClientState","client_id","QueryClientStates","QueryConsensusState","revision_number","revision_height","QueryConsensusStates","QueryClientParams","sendMsgUpgradeClient","sendMsgUpdateClient","sendMsgCreateClient","sendMsgSubmitMisbehaviour","baseCoin","denom","baseDecCoin","DecCoin","baseIntProto","int","IntProto","baseDecProto","dec","DecProto","queryCommunityPool","queryDelegationTotalRewards","queryDelegationRewards","queryDelegatorValidators","queryDelegatorWithdrawAddress","queryValidatorCommission","queryValidatorOutstandingRewards","queryValidatorSlashes","baseMsgSetWithdrawAddress","withdrawAddress","MsgSetWithdrawAddress","baseMsgWithdrawDelegatorReward","MsgWithdrawDelegatorReward","baseMsgWithdrawValidatorCommission","MsgWithdrawValidatorCommission","baseMsgFundCommunityPool","depositor","MsgFundCommunityPool","msgFundCommunityPool","msgWithdrawValidatorCommission","msgWithdrawDelegatorReward","msgSetWithdrawAddress","ValidatorOutstandingRewards","ValidatorCommission","ValidatorSlashes","DelegationRewards","DelegationTotalRewards","DelegatorValidators","DelegatorWithdrawAddress","CommunityPool","ValidatorHistoricalRewards","ValidatorCurrentRewards","ValidatorAccumulatedCommission","ValidatorSlashEvent","ValidatorSlashEvents","FeePool","CommunityPoolSpendProposal","DelegatorStartingInfo","DelegationDelegatorReward","CommunityPoolSpendProposalWithDeposit","DelegatorWithdrawInfo","ValidatorOutstandingRewardsRecord","ValidatorAccumulatedCommissionRecord","ValidatorHistoricalRewardsRecord","ValidatorCurrentRewardsRecord","DelegatorStartingInfoRecord","ValidatorSlashEventRecord","getValidatorOutstandingRewards","getValidatorCommission","getValidatorSlashes","getDelegationRewards","getDelegationTotalRewards","getDelegatorValidators","getDelegatorWithdrawAddress","getCommunityPool","QueryValidatorOutstandingRewards","validator_address","QueryValidatorCommission","QueryValidatorSlashes","QueryDelegationRewards","delegator_address","QueryDelegationTotalRewards","QueryDelegatorValidators","QueryDelegatorWithdrawAddress","QueryCommunityPool","sendMsgFundCommunityPool","sendMsgWithdrawValidatorCommission","sendMsgWithdrawDelegatorReward","sendMsgSetWithdrawAddress","baseMsgVerifyInvariant","sender","invariantModuleName","invariantRoute","MsgVerifyInvariant","msgVerifyInvariant","V1Beta1ProposalStatus","V1Beta1VoteOption","sendMsgVerifyInvariant","paramsType","queryProposals","queryProposal","proposalId","queryDeposits","queryDeposit","queryTallyResult","queryVotes","queryVote","voter","MsgSubmitProposal","MsgDeposit","MsgVote","msgSubmitProposal","msgDeposit","msgVote","V1Order","V1State","Proposal","Proposals","Vote","Votes","Deposit","Deposits","TallyResult","TextProposal","DepositParams","VotingParams","TallyParams","getProposal","getProposals","getVote","getVotes","getDeposit","getDeposits","getTallyResult","QueryProposal","proposal_id","QueryProposals","QueryVote","QueryVotes","params_type","QueryDeposit","QueryDeposits","QueryTallyResult","sendMsgSubmitProposal","sendMsgDeposit","sendMsgVote","queryChannels","queryChannel","queryChannelClientState","queryChannelConsensusState","queryNextSequenceReceive","queryPacketAcknowledgements","queryPacketAcknowledgement","queryPacketCommitments","queryUnreceivedAcks","packetAckSequences","queryUnreceivedPackets","packetCommitmentSequences","queryPacketCommitment","queryPacketReceipt","queryConnectionChannels","connection","MsgChannelOpenInit","MsgTimeout","MsgChannelOpenAck","MsgChannelCloseInit","MsgChannelCloseConfirm","MsgChannelOpenConfirm","MsgChannelOpenTry","MsgRecvPacket","MsgTimeoutOnClose","MsgAcknowledgement","msgChannelOpenInit","msgTimeout","msgChannelOpenAck","msgChannelCloseInit","msgChannelCloseConfirm","msgChannelOpenConfirm","msgChannelOpenTry","msgRecvPacket","msgTimeoutOnClose","msgAcknowledgement","Channels","ConnectionChannels","ChannelClientState","ChannelConsensusState","PacketCommitment","PacketCommitments","PacketReceipt","PacketAcknowledgement","PacketAcknowledgements","UnreceivedPackets","UnreceivedAcks","NextSequenceReceive","PacketSequence","getChannel","getChannels","getConnectionChannels","getChannelClientState","getChannelConsensusState","getPacketCommitment","getPacketCommitments","getPacketReceipt","getPacketAcknowledgement","getPacketAcknowledgements","getUnreceivedPackets","getUnreceivedAcks","getNextSequenceReceive","QueryChannel","channel_id","port_id","QueryChannels","QueryConnectionChannels","QueryChannelClientState","QueryChannelConsensusState","QueryPacketCommitment","QueryPacketCommitments","QueryPacketReceipt","QueryPacketAcknowledgement","QueryPacketAcknowledgements","QueryUnreceivedPackets","packet_commitment_sequences","QueryUnreceivedAcks","packet_ack_sequences","QueryNextSequenceReceive","sendMsgChannelOpenInit","sendMsgTimeout","sendMsgChannelOpenAck","sendMsgChannelCloseInit","sendMsgChannelCloseConfirm","sendMsgChannelOpenConfirm","sendMsgChannelOpenTry","sendMsgRecvPacket","sendMsgTimeoutOnClose","sendMsgAcknowledgement","queryAllBalances","queryBalance","queryDenomsMetadata","queryDenomMetadata","queryTotalSupply","querySupplyOf","defaultSendEnabled","sendEnabled","SendEnabled","baseSendEnabled","enabled","baseInput","Input","coins","baseOutput","Output","baseSupply","Supply","baseDenomUnit","exponent","aliases","DenomUnit","baseMetadata","base","display","Metadata","denomUnits","baseMsgSend","fromAddress","toAddress","MsgSend","baseMsgMultiSend","MsgMultiSend","inputs","outputs","msgMultiSend","msgSend","baseBalance","Balance","AllBalances","TotalSupply","SupplyOf","DenomMetadata","DenomsMetadata","getBalance","getAllBalances","getTotalSupply","getSupplyOf","getDenomMetadata","getDenomsMetadata","QueryBalance","QueryAllBalances","QueryTotalSupply","QuerySupplyOf","QueryDenomMetadata","QueryDenomsMetadata","sendMsgMultiSend","sendMsgSend","queryAllEvidence","queryEvidence","MsgSubmitEvidence","msgSubmitEvidence","Evidence","AllEvidence","getEvidence","getAllEvidence","QueryEvidence","evidence_hash","QueryAllEvidence","sendMsgSubmitEvidence","queryAccount","queryBlockBloom","queryBlockLogs","queryCode","queryStorage","queryTxLogs","msgEthereumTx","baseGenesisAccount","code","GenesisAccount","storage","Account","Storage","Code","TxLogs","BlockLogs","BlockBloom","ChainConfig","TransactionLogs","Log","getAccount","getStorage","getCode","getTxLogs","getBlockLogs","getBlockBloom","QueryAccount","QueryStorage","QueryCode","QueryTxLogs","QueryBlockLogs","QueryBlockBloom","sendMsgEthereumTx","MsgCreateVestingAccount","msgCreateVestingAccount","V1Beta1BondStatus","sendMsgCreateVestingAccount","queryDelegatorDelegations","delegatorAddr","queryRedelegations","queryDelegatorUnbondingDelegations","queryDelegatorValidator","queryHistoricalInfo","queryPool","queryValidators","queryValidator","queryValidatorDelegations","queryDelegation","queryUnbondingDelegation","queryValidatorUnbondingDelegations","baseMsgCreateValidator","MsgCreateValidator","pubkey","baseMsgEditValidator","commissionRate","MsgEditValidator","baseMsgDelegate","MsgDelegate","baseMsgBeginRedelegate","MsgBeginRedelegate","baseMsgUndelegate","MsgUndelegate","msgDelegate","msgEditValidator","msgCreateValidator","msgUndelegate","msgBeginRedelegate","Validators","ValidatorDelegations","ValidatorUnbondingDelegations","DelegatorDelegations","DelegatorUnbondingDelegations","Redelegations","DelegatorValidator","LastValidatorPower","getValidators","getValidator","getValidatorDelegations","getValidatorUnbondingDelegations","getDelegation","getUnbondingDelegation","getDelegatorDelegations","getDelegatorUnbondingDelegations","getRedelegations","getDelegatorValidator","getHistoricalInfo","getPool","QueryValidators","QueryValidator","validator_addr","QueryValidatorDelegations","QueryValidatorUnbondingDelegations","QueryDelegation","delegator_addr","QueryUnbondingDelegation","QueryDelegatorDelegations","QueryDelegatorUnbondingDelegations","QueryRedelegations","QueryDelegatorValidator","QueryHistoricalInfo","QueryPool","sendMsgDelegate","sendMsgEditValidator","sendMsgCreateValidator","sendMsgUndelegate","sendMsgBeginRedelegate","queryClientConnections","queryConnections","queryConnection","connectionId","queryConnectionClientState","queryConnectionConsensusState","MsgConnectionOpenAck","MsgConnectionOpenConfirm","MsgConnectionOpenInit","MsgConnectionOpenTry","msgConnectionOpenAck","msgConnectionOpenConfirm","msgConnectionOpenInit","msgConnectionOpenTry","Connection","Connections","ClientConnections","ConnectionClientState","ConnectionConsensusState","ConnectionEnd","IdentifiedConnection","ClientPaths","ConnectionPaths","Version","getConnection","getConnections","getClientConnections","getConnectionClientState","getConnectionConsensusState","QueryConnection","connection_id","QueryConnections","QueryClientConnections","QueryConnectionClientState","QueryConnectionConsensusState","sendMsgConnectionOpenAck","sendMsgConnectionOpenConfirm","sendMsgConnectionOpenInit","sendMsgConnectionOpenTry","CosmosCosmosSdkIbcApplicationsTransferV1","load","CosmosCosmosSdkCosmosBaseAbciV1Beta1","CosmosCosmosSdkCosmosSlashingV1Beta1","CosmosCosmosSdkIbcCoreClientV1","CosmosCosmosSdkCosmosBaseV1Beta1","CosmosCosmosSdkCosmosDistributionV1Beta1","CosmosCosmosSdkCosmosCrisisV1Beta1","CosmosCosmosSdkCosmosGovV1Beta1","CosmosCosmosSdkIbcCoreChannelV1","CosmosCosmosSdkCosmosBankV1Beta1","CosmosCosmosSdkCosmosEvidenceV1Beta1","YlgrNiflStarEthermintEvmV1Alpha1","CosmosCosmosSdkCosmosVestingV1Beta1","CosmosCosmosSdkCosmosStakingV1Beta1","CosmosCosmosSdkIbcCoreConnectionV1","mod","fullns","store","fullnsLevels","split","registerModule","pop","mutation","root","values","generated","moduleInit","transfers","starport","blocks","env","createStore","routerHistory","createWebHistory","routes","component","Index","Types","router","createRouter","history","app","createApp","App","config","globalProperties","_depsLoaded","use","vueLib","mount","basePacketSequence","baseProof","Proof","leafHash","aunts","baseSigningInfo","validatorSigningInfo","baseValidatorMissedBlocks","missedBlocks","baseMissedBlock","missed","baseConnectionEnd","delayPeriod","versions","baseIdentifiedConnection","id","prefix","MerklePrefix","baseClientPaths","paths","baseConnectionPaths","baseVersion","identifier","features","baseProofOp","ProofOp","baseProofOps","ProofOps","ops","baseConsensus","block","evmDenom","enableCreate","enableCall","extraEips","end2","baseChainConfig","homesteadBlock","daoForkBlock","daoForkSupport","eip150Block","eip150Hash","eip155Block","eip158Block","byzantiumBlock","constantinopleBlock","petersburgBlock","istanbulBlock","muirGlacierBlock","yoloV2Block","ewasmBlock","baseState","baseTransactionLogs","logs","baseLog","topics","blockNumber","txHash","txIndex","blockHash","removed","communityTax","baseProposerReward","bonusProposerReward","withdrawAddrEnabled","baseValidatorHistoricalRewards","referenceCount","cumulativeRewardRatio","baseValidatorCurrentRewards","period","rewards","baseValidatorAccumulatedCommission","baseValidatorOutstandingRewards","baseValidatorSlashEvent","validatorPeriod","fraction","baseValidatorSlashEvents","validatorSlashEvents","baseFeePool","communityPool","baseCommunityPoolSpendProposal","title","recipient","baseDelegatorStartingInfo","previousPeriod","stake","baseDelegationDelegatorReward","reward","baseCommunityPoolSpendProposalWithDeposit","deposit","baseValidatorSigningInfo","startHeight","indexOffset","tombstoned","missedBlocksCounter","jailedUntil","signedBlocksWindow","minSignedPerWindow","downtimeJailDuration","slashFractionDoubleSign","slashFractionDowntime","baseMsgSubmitEvidence","submitter","evidence","baseDelegatorWithdrawInfo","baseValidatorOutstandingRewardsRecord","outstandingRewards","baseValidatorAccumulatedCommissionRecord","accumulated","baseValidatorHistoricalRewardsRecord","baseValidatorCurrentRewardsRecord","baseDelegatorStartingInfoRecord","startingInfo","baseValidatorSlashEventRecord","validatorSlashEvent","baseMsgCreateVestingAccount","delayed","baseMsgChannelOpenInit","channel","baseMsgChannelOpenTry","previousChannelId","counterpartyVersion","proofInit","proofHeight","baseMsgChannelOpenAck","counterpartyChannelId","proofTry","baseMsgChannelOpenConfirm","proofAck","baseMsgChannelCloseInit","baseMsgChannelCloseConfirm","baseMsgRecvPacket","packet","proofCommitment","baseMsgTimeout","nextSequenceRecv","proofUnreceived","baseMsgTimeoutOnClose","proofClose","baseMsgAcknowledgement","acknowledgement","proofAcked","baseBaseAccount","accountNumber","VoteOption","ProposalStatus","voteOptionFromJSON","VOTE_OPTION_UNSPECIFIED","VOTE_OPTION_YES","VOTE_OPTION_ABSTAIN","VOTE_OPTION_NO","VOTE_OPTION_NO_WITH_VETO","voteOptionToJSON","proposalStatusFromJSON","PROPOSAL_STATUS_UNSPECIFIED","PROPOSAL_STATUS_DEPOSIT_PERIOD","PROPOSAL_STATUS_VOTING_PERIOD","PROPOSAL_STATUS_PASSED","PROPOSAL_STATUS_REJECTED","PROPOSAL_STATUS_FAILED","proposalStatusToJSON","baseTextProposal","baseDeposit","baseProposal","finalTallyResult","submitTime","depositEndTime","totalDeposit","votingStartTime","votingEndTime","baseTallyResult","yes","abstain","no","noWithVeto","baseVote","option","baseDepositParams","minDeposit","maxDepositPeriod","baseVotingParams","votingPeriod","baseTallyParams","quorum","threshold","vetoThreshold","baseFungibleTokenPacketData","receiver","baseDenomTrace","baseDenom","receiveEnabled","baseGenesisMetadata","baseIdentifiedGenesisMetadata","clientMetadata","baseMsgConnectionOpenInit","baseMsgConnectionOpenTry","previousConnectionId","counterpartyVersions","proofClient","proofConsensus","consensusHeight","baseMsgConnectionOpenAck","counterpartyConnectionId","baseMsgConnectionOpenConfirm","baseLastValidatorPower","baseMerklePrefix","keyPrefix","HashOp","LengthOp","hashOpFromJSON","NO_HASH","SHA256","SHA512","KECCAK","RIPEMD160","BITCOIN","hashOpToJSON","lengthOpFromJSON","NO_PREFIX","VAR_PROTO","VAR_RLP","FIXED32_BIG","FIXED32_LITTLE","FIXED64_BIG","FIXED64_LITTLE","REQUIRE_32_BYTES","REQUIRE_64_BYTES","lengthOpToJSON","baseExistenceProof","ExistenceProof","leaf","LeafOp","InnerOp","baseNonExistenceProof","NonExistenceProof","left","right","baseCommitmentProof","CommitmentProof","exist","nonexist","batch","BatchProof","compressed","CompressedBatchProof","baseLeafOp","prehashKey","prehashValue","baseInnerOp","suffix","baseBatchProof","BatchEntry","baseBatchEntry","baseCompressedBatchProof","CompressedBatchEntry","lookupInners","baseCompressedBatchEntry","CompressedExistenceProof","CompressedNonExistenceProof","baseCompressedExistenceProof","baseCompressedNonExistenceProof","basePublicKey","ed25519","secp256k1","baseTxResponse","txhash","codespace","rawLog","info","gasWanted","gasUsed","timestamp","tx","baseABCIMessageLog","msgIndex","events","baseStringEvent","baseAttribute","baseGasInfo","baseResult","baseSimulationResponse","gasInfo","baseMsgData","msgType","baseTxMsgData","baseSearchTxsResult","totalCount","count","pageNumber","pageTotal","limit","txs","baseIdentifiedClientState","baseConsensusStateWithHeight","baseClientConsensusStates","consensusStates","baseClientUpdateProposal","allowedClients","baseMsgTransfer","token","baseMsgSubmitProposal","initialDeposit","baseMsgVote","baseMsgDeposit"],"mappings":"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","file":"js/app.ade71970.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { PublicKey } from \"../../tendermint/crypto/keys\";\nexport const protobufPackage = \"tendermint.types\";\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined &&\n            (obj.proposer = message.proposer\n                ? Validator.toJSON(message.proposer)\n                : undefined);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined &&\n            (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseMsgCreateClient = { signer: \"\" };\nexport const MsgCreateClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateClient };\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateClient };\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreateClientResponse = {};\nexport const MsgCreateClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateClientResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateClientResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateClientResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgUpdateClient = { clientId: \"\", signer: \"\" };\nexport const MsgUpdateClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateClientResponse = {};\nexport const MsgUpdateClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpdateClientResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpdateClientResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpdateClientResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgUpgradeClient = { clientId: \"\", signer: \"\" };\nexport const MsgUpgradeClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.proofUpgradeClient.length !== 0) {\n            writer.uint32(34).bytes(message.proofUpgradeClient);\n        }\n        if (message.proofUpgradeConsensusState.length !== 0) {\n            writer.uint32(42).bytes(message.proofUpgradeConsensusState);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(50).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpgradeClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.proofUpgradeClient = reader.bytes();\n                    break;\n                case 5:\n                    message.proofUpgradeConsensusState = reader.bytes();\n                    break;\n                case 6:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpgradeClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.proofUpgradeClient !== undefined &&\n            object.proofUpgradeClient !== null) {\n            message.proofUpgradeClient = bytesFromBase64(object.proofUpgradeClient);\n        }\n        if (object.proofUpgradeConsensusState !== undefined &&\n            object.proofUpgradeConsensusState !== null) {\n            message.proofUpgradeConsensusState = bytesFromBase64(object.proofUpgradeConsensusState);\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        message.proofUpgradeClient !== undefined &&\n            (obj.proofUpgradeClient = base64FromBytes(message.proofUpgradeClient !== undefined\n                ? message.proofUpgradeClient\n                : new Uint8Array()));\n        message.proofUpgradeConsensusState !== undefined &&\n            (obj.proofUpgradeConsensusState = base64FromBytes(message.proofUpgradeConsensusState !== undefined\n                ? message.proofUpgradeConsensusState\n                : new Uint8Array()));\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpgradeClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.proofUpgradeClient !== undefined &&\n            object.proofUpgradeClient !== null) {\n            message.proofUpgradeClient = object.proofUpgradeClient;\n        }\n        else {\n            message.proofUpgradeClient = new Uint8Array();\n        }\n        if (object.proofUpgradeConsensusState !== undefined &&\n            object.proofUpgradeConsensusState !== null) {\n            message.proofUpgradeConsensusState = object.proofUpgradeConsensusState;\n        }\n        else {\n            message.proofUpgradeConsensusState = new Uint8Array();\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpgradeClientResponse = {};\nexport const MsgUpgradeClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpgradeClientResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpgradeClientResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpgradeClientResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgSubmitMisbehaviour = { clientId: \"\", signer: \"\" };\nexport const MsgSubmitMisbehaviour = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.misbehaviour !== undefined) {\n            Any.encode(message.misbehaviour, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitMisbehaviour };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.misbehaviour = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitMisbehaviour };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.misbehaviour !== undefined && object.misbehaviour !== null) {\n            message.misbehaviour = Any.fromJSON(object.misbehaviour);\n        }\n        else {\n            message.misbehaviour = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.misbehaviour !== undefined &&\n            (obj.misbehaviour = message.misbehaviour\n                ? Any.toJSON(message.misbehaviour)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitMisbehaviour };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.misbehaviour !== undefined && object.misbehaviour !== null) {\n            message.misbehaviour = Any.fromPartial(object.misbehaviour);\n        }\n        else {\n            message.misbehaviour = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgSubmitMisbehaviourResponse = {};\nexport const MsgSubmitMisbehaviourResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateClient(request) {\n        const data = MsgCreateClient.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"CreateClient\", data);\n        return promise.then((data) => MsgCreateClientResponse.decode(new Reader(data)));\n    }\n    UpdateClient(request) {\n        const data = MsgUpdateClient.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"UpdateClient\", data);\n        return promise.then((data) => MsgUpdateClientResponse.decode(new Reader(data)));\n    }\n    UpgradeClient(request) {\n        const data = MsgUpgradeClient.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"UpgradeClient\", data);\n        return promise.then((data) => MsgUpgradeClientResponse.decode(new Reader(data)));\n    }\n    SubmitMisbehaviour(request) {\n        const data = MsgSubmitMisbehaviour.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"SubmitMisbehaviour\", data);\n        return promise.then((data) => MsgSubmitMisbehaviourResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport { Timestamp } from \"../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { Header } from \"../../tendermint/types/types\";\nimport { ProofOps } from \"../../tendermint/crypto/proof\";\nimport { EvidenceParams, ValidatorParams, VersionParams, } from \"../../tendermint/types/params\";\nimport { PublicKey } from \"../../tendermint/crypto/keys\";\nexport const protobufPackage = \"tendermint.abci\";\nexport var CheckTxType;\n(function (CheckTxType) {\n    CheckTxType[CheckTxType[\"NEW\"] = 0] = \"NEW\";\n    CheckTxType[CheckTxType[\"RECHECK\"] = 1] = \"RECHECK\";\n    CheckTxType[CheckTxType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(CheckTxType || (CheckTxType = {}));\nexport function checkTxTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"NEW\":\n            return CheckTxType.NEW;\n        case 1:\n        case \"RECHECK\":\n            return CheckTxType.RECHECK;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return CheckTxType.UNRECOGNIZED;\n    }\n}\nexport function checkTxTypeToJSON(object) {\n    switch (object) {\n        case CheckTxType.NEW:\n            return \"NEW\";\n        case CheckTxType.RECHECK:\n            return \"RECHECK\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport var EvidenceType;\n(function (EvidenceType) {\n    EvidenceType[EvidenceType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    EvidenceType[EvidenceType[\"DUPLICATE_VOTE\"] = 1] = \"DUPLICATE_VOTE\";\n    EvidenceType[EvidenceType[\"LIGHT_CLIENT_ATTACK\"] = 2] = \"LIGHT_CLIENT_ATTACK\";\n    EvidenceType[EvidenceType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(EvidenceType || (EvidenceType = {}));\nexport function evidenceTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"UNKNOWN\":\n            return EvidenceType.UNKNOWN;\n        case 1:\n        case \"DUPLICATE_VOTE\":\n            return EvidenceType.DUPLICATE_VOTE;\n        case 2:\n        case \"LIGHT_CLIENT_ATTACK\":\n            return EvidenceType.LIGHT_CLIENT_ATTACK;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return EvidenceType.UNRECOGNIZED;\n    }\n}\nexport function evidenceTypeToJSON(object) {\n    switch (object) {\n        case EvidenceType.UNKNOWN:\n            return \"UNKNOWN\";\n        case EvidenceType.DUPLICATE_VOTE:\n            return \"DUPLICATE_VOTE\";\n        case EvidenceType.LIGHT_CLIENT_ATTACK:\n            return \"LIGHT_CLIENT_ATTACK\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport var ResponseOfferSnapshot_Result;\n(function (ResponseOfferSnapshot_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Snapshot accepted, apply chunks */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** REJECT - Reject this specific snapshot, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT\"] = 3] = \"REJECT\";\n    /** REJECT_FORMAT - Reject all snapshots of this format, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_FORMAT\"] = 4] = \"REJECT_FORMAT\";\n    /** REJECT_SENDER - Reject all snapshots from the sender(s), try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_SENDER\"] = 5] = \"REJECT_SENDER\";\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseOfferSnapshot_Result || (ResponseOfferSnapshot_Result = {}));\nexport function responseOfferSnapshot_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"UNKNOWN\":\n            return ResponseOfferSnapshot_Result.UNKNOWN;\n        case 1:\n        case \"ACCEPT\":\n            return ResponseOfferSnapshot_Result.ACCEPT;\n        case 2:\n        case \"ABORT\":\n            return ResponseOfferSnapshot_Result.ABORT;\n        case 3:\n        case \"REJECT\":\n            return ResponseOfferSnapshot_Result.REJECT;\n        case 4:\n        case \"REJECT_FORMAT\":\n            return ResponseOfferSnapshot_Result.REJECT_FORMAT;\n        case 5:\n        case \"REJECT_SENDER\":\n            return ResponseOfferSnapshot_Result.REJECT_SENDER;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ResponseOfferSnapshot_Result.UNRECOGNIZED;\n    }\n}\nexport function responseOfferSnapshot_ResultToJSON(object) {\n    switch (object) {\n        case ResponseOfferSnapshot_Result.UNKNOWN:\n            return \"UNKNOWN\";\n        case ResponseOfferSnapshot_Result.ACCEPT:\n            return \"ACCEPT\";\n        case ResponseOfferSnapshot_Result.ABORT:\n            return \"ABORT\";\n        case ResponseOfferSnapshot_Result.REJECT:\n            return \"REJECT\";\n        case ResponseOfferSnapshot_Result.REJECT_FORMAT:\n            return \"REJECT_FORMAT\";\n        case ResponseOfferSnapshot_Result.REJECT_SENDER:\n            return \"REJECT_SENDER\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport var ResponseApplySnapshotChunk_Result;\n(function (ResponseApplySnapshotChunk_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Chunk successfully accepted */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** RETRY - Retry chunk (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY\"] = 3] = \"RETRY\";\n    /** RETRY_SNAPSHOT - Retry snapshot (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY_SNAPSHOT\"] = 4] = \"RETRY_SNAPSHOT\";\n    /** REJECT_SNAPSHOT - Reject this snapshot, try others */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"REJECT_SNAPSHOT\"] = 5] = \"REJECT_SNAPSHOT\";\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseApplySnapshotChunk_Result || (ResponseApplySnapshotChunk_Result = {}));\nexport function responseApplySnapshotChunk_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"UNKNOWN\":\n            return ResponseApplySnapshotChunk_Result.UNKNOWN;\n        case 1:\n        case \"ACCEPT\":\n            return ResponseApplySnapshotChunk_Result.ACCEPT;\n        case 2:\n        case \"ABORT\":\n            return ResponseApplySnapshotChunk_Result.ABORT;\n        case 3:\n        case \"RETRY\":\n            return ResponseApplySnapshotChunk_Result.RETRY;\n        case 4:\n        case \"RETRY_SNAPSHOT\":\n            return ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT;\n        case 5:\n        case \"REJECT_SNAPSHOT\":\n            return ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ResponseApplySnapshotChunk_Result.UNRECOGNIZED;\n    }\n}\nexport function responseApplySnapshotChunk_ResultToJSON(object) {\n    switch (object) {\n        case ResponseApplySnapshotChunk_Result.UNKNOWN:\n            return \"UNKNOWN\";\n        case ResponseApplySnapshotChunk_Result.ACCEPT:\n            return \"ACCEPT\";\n        case ResponseApplySnapshotChunk_Result.ABORT:\n            return \"ABORT\";\n        case ResponseApplySnapshotChunk_Result.RETRY:\n            return \"RETRY\";\n        case ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT:\n            return \"RETRY_SNAPSHOT\";\n        case ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT:\n            return \"REJECT_SNAPSHOT\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseRequest = {};\nexport const Request = {\n    encode(message, writer = Writer.create()) {\n        if (message.echo !== undefined) {\n            RequestEcho.encode(message.echo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            RequestFlush.encode(message.flush, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            RequestInfo.encode(message.info, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.setOption !== undefined) {\n            RequestSetOption.encode(message.setOption, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            RequestInitChain.encode(message.initChain, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            RequestQuery.encode(message.query, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            RequestBeginBlock.encode(message.beginBlock, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            RequestCheckTx.encode(message.checkTx, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            RequestDeliverTx.encode(message.deliverTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            RequestEndBlock.encode(message.endBlock, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            RequestCommit.encode(message.commit, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            RequestListSnapshots.encode(message.listSnapshots, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            RequestOfferSnapshot.encode(message.offerSnapshot, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            RequestLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            RequestApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.echo = RequestEcho.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.flush = RequestFlush.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.info = RequestInfo.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.setOption = RequestSetOption.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.initChain = RequestInitChain.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.query = RequestQuery.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.beginBlock = RequestBeginBlock.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.checkTx = RequestCheckTx.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.deliverTx = RequestDeliverTx.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.endBlock = RequestEndBlock.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.commit = RequestCommit.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.listSnapshots = RequestListSnapshots.decode(reader, reader.uint32());\n                    break;\n                case 13:\n                    message.offerSnapshot = RequestOfferSnapshot.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    message.loadSnapshotChunk = RequestLoadSnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 15:\n                    message.applySnapshotChunk = RequestApplySnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequest };\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = RequestEcho.fromJSON(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = RequestFlush.fromJSON(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = RequestInfo.fromJSON(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = RequestSetOption.fromJSON(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = RequestInitChain.fromJSON(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = RequestQuery.fromJSON(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = RequestBeginBlock.fromJSON(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = RequestCheckTx.fromJSON(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = RequestDeliverTx.fromJSON(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = RequestEndBlock.fromJSON(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = RequestCommit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = RequestListSnapshots.fromJSON(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = RequestOfferSnapshot.fromJSON(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = RequestLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = RequestApplySnapshotChunk.fromJSON(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.echo !== undefined &&\n            (obj.echo = message.echo ? RequestEcho.toJSON(message.echo) : undefined);\n        message.flush !== undefined &&\n            (obj.flush = message.flush\n                ? RequestFlush.toJSON(message.flush)\n                : undefined);\n        message.info !== undefined &&\n            (obj.info = message.info ? RequestInfo.toJSON(message.info) : undefined);\n        message.setOption !== undefined &&\n            (obj.setOption = message.setOption\n                ? RequestSetOption.toJSON(message.setOption)\n                : undefined);\n        message.initChain !== undefined &&\n            (obj.initChain = message.initChain\n                ? RequestInitChain.toJSON(message.initChain)\n                : undefined);\n        message.query !== undefined &&\n            (obj.query = message.query\n                ? RequestQuery.toJSON(message.query)\n                : undefined);\n        message.beginBlock !== undefined &&\n            (obj.beginBlock = message.beginBlock\n                ? RequestBeginBlock.toJSON(message.beginBlock)\n                : undefined);\n        message.checkTx !== undefined &&\n            (obj.checkTx = message.checkTx\n                ? RequestCheckTx.toJSON(message.checkTx)\n                : undefined);\n        message.deliverTx !== undefined &&\n            (obj.deliverTx = message.deliverTx\n                ? RequestDeliverTx.toJSON(message.deliverTx)\n                : undefined);\n        message.endBlock !== undefined &&\n            (obj.endBlock = message.endBlock\n                ? RequestEndBlock.toJSON(message.endBlock)\n                : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit\n                ? RequestCommit.toJSON(message.commit)\n                : undefined);\n        message.listSnapshots !== undefined &&\n            (obj.listSnapshots = message.listSnapshots\n                ? RequestListSnapshots.toJSON(message.listSnapshots)\n                : undefined);\n        message.offerSnapshot !== undefined &&\n            (obj.offerSnapshot = message.offerSnapshot\n                ? RequestOfferSnapshot.toJSON(message.offerSnapshot)\n                : undefined);\n        message.loadSnapshotChunk !== undefined &&\n            (obj.loadSnapshotChunk = message.loadSnapshotChunk\n                ? RequestLoadSnapshotChunk.toJSON(message.loadSnapshotChunk)\n                : undefined);\n        message.applySnapshotChunk !== undefined &&\n            (obj.applySnapshotChunk = message.applySnapshotChunk\n                ? RequestApplySnapshotChunk.toJSON(message.applySnapshotChunk)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequest };\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = RequestEcho.fromPartial(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = RequestFlush.fromPartial(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = RequestInfo.fromPartial(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = RequestSetOption.fromPartial(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = RequestInitChain.fromPartial(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = RequestQuery.fromPartial(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = RequestBeginBlock.fromPartial(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = RequestCheckTx.fromPartial(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = RequestDeliverTx.fromPartial(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = RequestEndBlock.fromPartial(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = RequestCommit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = RequestListSnapshots.fromPartial(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = RequestOfferSnapshot.fromPartial(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = RequestLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = RequestApplySnapshotChunk.fromPartial(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n};\nconst baseRequestEcho = { message: \"\" };\nexport const RequestEcho = {\n    encode(message, writer = Writer.create()) {\n        if (message.message !== \"\") {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestEcho };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = String(object.message);\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.message !== undefined && (obj.message = message.message);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = object.message;\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n};\nconst baseRequestFlush = {};\nexport const RequestFlush = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestFlush };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestFlush };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestFlush };\n        return message;\n    },\n};\nconst baseRequestInfo = { version: \"\", blockVersion: 0, p2pVersion: 0 };\nexport const RequestInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== \"\") {\n            writer.uint32(10).string(message.version);\n        }\n        if (message.blockVersion !== 0) {\n            writer.uint32(16).uint64(message.blockVersion);\n        }\n        if (message.p2pVersion !== 0) {\n            writer.uint32(24).uint64(message.p2pVersion);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = reader.string();\n                    break;\n                case 2:\n                    message.blockVersion = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.p2pVersion = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestInfo };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.blockVersion !== undefined && object.blockVersion !== null) {\n            message.blockVersion = Number(object.blockVersion);\n        }\n        else {\n            message.blockVersion = 0;\n        }\n        if (object.p2pVersion !== undefined && object.p2pVersion !== null) {\n            message.p2pVersion = Number(object.p2pVersion);\n        }\n        else {\n            message.p2pVersion = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined && (obj.version = message.version);\n        message.blockVersion !== undefined &&\n            (obj.blockVersion = message.blockVersion);\n        message.p2pVersion !== undefined && (obj.p2pVersion = message.p2pVersion);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestInfo };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.blockVersion !== undefined && object.blockVersion !== null) {\n            message.blockVersion = object.blockVersion;\n        }\n        else {\n            message.blockVersion = 0;\n        }\n        if (object.p2pVersion !== undefined && object.p2pVersion !== null) {\n            message.p2pVersion = object.p2pVersion;\n        }\n        else {\n            message.p2pVersion = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestSetOption = { key: \"\", value: \"\" };\nexport const RequestSetOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestSetOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestSetOption };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestSetOption };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n};\nconst baseRequestInitChain = { chainId: \"\", initialHeight: 0 };\nexport const RequestInitChain = {\n    encode(message, writer = Writer.create()) {\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== \"\") {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.consensusParams !== undefined) {\n            ConsensusParams.encode(message.consensusParams, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            ValidatorUpdate.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.appStateBytes.length !== 0) {\n            writer.uint32(42).bytes(message.appStateBytes);\n        }\n        if (message.initialHeight !== 0) {\n            writer.uint32(48).int64(message.initialHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.appStateBytes = reader.bytes();\n                    break;\n                case 6:\n                    message.initialHeight = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromJSON(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.appStateBytes !== undefined && object.appStateBytes !== null) {\n            message.appStateBytes = bytesFromBase64(object.appStateBytes);\n        }\n        if (object.initialHeight !== undefined && object.initialHeight !== null) {\n            message.initialHeight = Number(object.initialHeight);\n        }\n        else {\n            message.initialHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.consensusParams !== undefined &&\n            (obj.consensusParams = message.consensusParams\n                ? ConsensusParams.toJSON(message.consensusParams)\n                : undefined);\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.appStateBytes !== undefined &&\n            (obj.appStateBytes = base64FromBytes(message.appStateBytes !== undefined\n                ? message.appStateBytes\n                : new Uint8Array()));\n        message.initialHeight !== undefined &&\n            (obj.initialHeight = message.initialHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromPartial(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.appStateBytes !== undefined && object.appStateBytes !== null) {\n            message.appStateBytes = object.appStateBytes;\n        }\n        else {\n            message.appStateBytes = new Uint8Array();\n        }\n        if (object.initialHeight !== undefined && object.initialHeight !== null) {\n            message.initialHeight = object.initialHeight;\n        }\n        else {\n            message.initialHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestQuery = { path: \"\", height: 0, prove: false };\nexport const RequestQuery = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        if (message.path !== \"\") {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.prove === true) {\n            writer.uint32(32).bool(message.prove);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestQuery };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.prove = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestQuery };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.prove !== undefined && object.prove !== null) {\n            message.prove = Boolean(object.prove);\n        }\n        else {\n            message.prove = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.path !== undefined && (obj.path = message.path);\n        message.height !== undefined && (obj.height = message.height);\n        message.prove !== undefined && (obj.prove = message.prove);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestQuery };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.prove !== undefined && object.prove !== null) {\n            message.prove = object.prove;\n        }\n        else {\n            message.prove = false;\n        }\n        return message;\n    },\n};\nconst baseRequestBeginBlock = {};\nexport const RequestBeginBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.lastCommitInfo !== undefined) {\n            LastCommitInfo.encode(message.lastCommitInfo, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.byzantineValidators) {\n            Evidence.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.lastCommitInfo = LastCommitInfo.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.byzantineValidators.push(Evidence.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.lastCommitInfo !== undefined && object.lastCommitInfo !== null) {\n            message.lastCommitInfo = LastCommitInfo.fromJSON(object.lastCommitInfo);\n        }\n        else {\n            message.lastCommitInfo = undefined;\n        }\n        if (object.byzantineValidators !== undefined &&\n            object.byzantineValidators !== null) {\n            for (const e of object.byzantineValidators) {\n                message.byzantineValidators.push(Evidence.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.lastCommitInfo !== undefined &&\n            (obj.lastCommitInfo = message.lastCommitInfo\n                ? LastCommitInfo.toJSON(message.lastCommitInfo)\n                : undefined);\n        if (message.byzantineValidators) {\n            obj.byzantineValidators = message.byzantineValidators.map((e) => e ? Evidence.toJSON(e) : undefined);\n        }\n        else {\n            obj.byzantineValidators = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.lastCommitInfo !== undefined && object.lastCommitInfo !== null) {\n            message.lastCommitInfo = LastCommitInfo.fromPartial(object.lastCommitInfo);\n        }\n        else {\n            message.lastCommitInfo = undefined;\n        }\n        if (object.byzantineValidators !== undefined &&\n            object.byzantineValidators !== null) {\n            for (const e of object.byzantineValidators) {\n                message.byzantineValidators.push(Evidence.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseRequestCheckTx = { type: 0 };\nexport const RequestCheckTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        if (message.type !== 0) {\n            writer.uint32(16).int32(message.type);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestCheckTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tx = reader.bytes();\n                    break;\n                case 2:\n                    message.type = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestCheckTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = checkTxTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        message.type !== undefined && (obj.type = checkTxTypeToJSON(message.type));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestCheckTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestDeliverTx = {};\nexport const RequestDeliverTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestDeliverTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tx = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestDeliverTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestDeliverTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseRequestEndBlock = { height: 0 };\nexport const RequestEndBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestEndBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestEndBlock };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestEndBlock };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestCommit = {};\nexport const RequestCommit = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestCommit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestCommit };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestCommit };\n        return message;\n    },\n};\nconst baseRequestListSnapshots = {};\nexport const RequestListSnapshots = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestListSnapshots };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestListSnapshots };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestListSnapshots };\n        return message;\n    },\n};\nconst baseRequestOfferSnapshot = {};\nexport const RequestOfferSnapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.snapshot !== undefined) {\n            Snapshot.encode(message.snapshot, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(18).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestOfferSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapshot = Snapshot.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.appHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestOfferSnapshot };\n        if (object.snapshot !== undefined && object.snapshot !== null) {\n            message.snapshot = Snapshot.fromJSON(object.snapshot);\n        }\n        else {\n            message.snapshot = undefined;\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.snapshot !== undefined &&\n            (obj.snapshot = message.snapshot\n                ? Snapshot.toJSON(message.snapshot)\n                : undefined);\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestOfferSnapshot };\n        if (object.snapshot !== undefined && object.snapshot !== null) {\n            message.snapshot = Snapshot.fromPartial(object.snapshot);\n        }\n        else {\n            message.snapshot = undefined;\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseRequestLoadSnapshotChunk = { height: 0, format: 0, chunk: 0 };\nexport const RequestLoadSnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunk !== 0) {\n            writer.uint32(24).uint32(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRequestLoadSnapshotChunk,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.format = reader.uint32();\n                    break;\n                case 3:\n                    message.chunk = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRequestLoadSnapshotChunk,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = Number(object.format);\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = Number(object.chunk);\n        }\n        else {\n            message.chunk = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.format !== undefined && (obj.format = message.format);\n        message.chunk !== undefined && (obj.chunk = message.chunk);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRequestLoadSnapshotChunk,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = object.format;\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestApplySnapshotChunk = { index: 0, sender: \"\" };\nexport const RequestApplySnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.chunk.length !== 0) {\n            writer.uint32(18).bytes(message.chunk);\n        }\n        if (message.sender !== \"\") {\n            writer.uint32(26).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRequestApplySnapshotChunk,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.chunk = reader.bytes();\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRequestApplySnapshotChunk,\n        };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = bytesFromBase64(object.chunk);\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.chunk !== undefined &&\n            (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRequestApplySnapshotChunk,\n        };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = new Uint8Array();\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponse = {};\nexport const Response = {\n    encode(message, writer = Writer.create()) {\n        if (message.exception !== undefined) {\n            ResponseException.encode(message.exception, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.echo !== undefined) {\n            ResponseEcho.encode(message.echo, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            ResponseFlush.encode(message.flush, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            ResponseInfo.encode(message.info, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.setOption !== undefined) {\n            ResponseSetOption.encode(message.setOption, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            ResponseInitChain.encode(message.initChain, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            ResponseQuery.encode(message.query, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            ResponseBeginBlock.encode(message.beginBlock, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            ResponseCheckTx.encode(message.checkTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            ResponseDeliverTx.encode(message.deliverTx, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            ResponseEndBlock.encode(message.endBlock, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            ResponseCommit.encode(message.commit, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            ResponseListSnapshots.encode(message.listSnapshots, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            ResponseOfferSnapshot.encode(message.offerSnapshot, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            ResponseLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            ResponseApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(130).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exception = ResponseException.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.echo = ResponseEcho.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.flush = ResponseFlush.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.info = ResponseInfo.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.setOption = ResponseSetOption.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.initChain = ResponseInitChain.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.query = ResponseQuery.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.beginBlock = ResponseBeginBlock.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.checkTx = ResponseCheckTx.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.deliverTx = ResponseDeliverTx.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.endBlock = ResponseEndBlock.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.commit = ResponseCommit.decode(reader, reader.uint32());\n                    break;\n                case 13:\n                    message.listSnapshots = ResponseListSnapshots.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    message.offerSnapshot = ResponseOfferSnapshot.decode(reader, reader.uint32());\n                    break;\n                case 15:\n                    message.loadSnapshotChunk = ResponseLoadSnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 16:\n                    message.applySnapshotChunk = ResponseApplySnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponse };\n        if (object.exception !== undefined && object.exception !== null) {\n            message.exception = ResponseException.fromJSON(object.exception);\n        }\n        else {\n            message.exception = undefined;\n        }\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = ResponseEcho.fromJSON(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = ResponseFlush.fromJSON(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = ResponseInfo.fromJSON(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = ResponseSetOption.fromJSON(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = ResponseInitChain.fromJSON(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = ResponseQuery.fromJSON(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = ResponseBeginBlock.fromJSON(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = ResponseCheckTx.fromJSON(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = ResponseDeliverTx.fromJSON(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = ResponseEndBlock.fromJSON(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = ResponseCommit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = ResponseListSnapshots.fromJSON(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = ResponseOfferSnapshot.fromJSON(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = ResponseLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = ResponseApplySnapshotChunk.fromJSON(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exception !== undefined &&\n            (obj.exception = message.exception\n                ? ResponseException.toJSON(message.exception)\n                : undefined);\n        message.echo !== undefined &&\n            (obj.echo = message.echo ? ResponseEcho.toJSON(message.echo) : undefined);\n        message.flush !== undefined &&\n            (obj.flush = message.flush\n                ? ResponseFlush.toJSON(message.flush)\n                : undefined);\n        message.info !== undefined &&\n            (obj.info = message.info ? ResponseInfo.toJSON(message.info) : undefined);\n        message.setOption !== undefined &&\n            (obj.setOption = message.setOption\n                ? ResponseSetOption.toJSON(message.setOption)\n                : undefined);\n        message.initChain !== undefined &&\n            (obj.initChain = message.initChain\n                ? ResponseInitChain.toJSON(message.initChain)\n                : undefined);\n        message.query !== undefined &&\n            (obj.query = message.query\n                ? ResponseQuery.toJSON(message.query)\n                : undefined);\n        message.beginBlock !== undefined &&\n            (obj.beginBlock = message.beginBlock\n                ? ResponseBeginBlock.toJSON(message.beginBlock)\n                : undefined);\n        message.checkTx !== undefined &&\n            (obj.checkTx = message.checkTx\n                ? ResponseCheckTx.toJSON(message.checkTx)\n                : undefined);\n        message.deliverTx !== undefined &&\n            (obj.deliverTx = message.deliverTx\n                ? ResponseDeliverTx.toJSON(message.deliverTx)\n                : undefined);\n        message.endBlock !== undefined &&\n            (obj.endBlock = message.endBlock\n                ? ResponseEndBlock.toJSON(message.endBlock)\n                : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit\n                ? ResponseCommit.toJSON(message.commit)\n                : undefined);\n        message.listSnapshots !== undefined &&\n            (obj.listSnapshots = message.listSnapshots\n                ? ResponseListSnapshots.toJSON(message.listSnapshots)\n                : undefined);\n        message.offerSnapshot !== undefined &&\n            (obj.offerSnapshot = message.offerSnapshot\n                ? ResponseOfferSnapshot.toJSON(message.offerSnapshot)\n                : undefined);\n        message.loadSnapshotChunk !== undefined &&\n            (obj.loadSnapshotChunk = message.loadSnapshotChunk\n                ? ResponseLoadSnapshotChunk.toJSON(message.loadSnapshotChunk)\n                : undefined);\n        message.applySnapshotChunk !== undefined &&\n            (obj.applySnapshotChunk = message.applySnapshotChunk\n                ? ResponseApplySnapshotChunk.toJSON(message.applySnapshotChunk)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponse };\n        if (object.exception !== undefined && object.exception !== null) {\n            message.exception = ResponseException.fromPartial(object.exception);\n        }\n        else {\n            message.exception = undefined;\n        }\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = ResponseEcho.fromPartial(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = ResponseFlush.fromPartial(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = ResponseInfo.fromPartial(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = ResponseSetOption.fromPartial(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = ResponseInitChain.fromPartial(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = ResponseQuery.fromPartial(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = ResponseBeginBlock.fromPartial(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = ResponseCheckTx.fromPartial(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = ResponseDeliverTx.fromPartial(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = ResponseEndBlock.fromPartial(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = ResponseCommit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = ResponseListSnapshots.fromPartial(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = ResponseOfferSnapshot.fromPartial(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = ResponseLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = ResponseApplySnapshotChunk.fromPartial(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n};\nconst baseResponseException = { error: \"\" };\nexport const ResponseException = {\n    encode(message, writer = Writer.create()) {\n        if (message.error !== \"\") {\n            writer.uint32(10).string(message.error);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseException };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.error = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseException };\n        if (object.error !== undefined && object.error !== null) {\n            message.error = String(object.error);\n        }\n        else {\n            message.error = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.error !== undefined && (obj.error = message.error);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseException };\n        if (object.error !== undefined && object.error !== null) {\n            message.error = object.error;\n        }\n        else {\n            message.error = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseEcho = { message: \"\" };\nexport const ResponseEcho = {\n    encode(message, writer = Writer.create()) {\n        if (message.message !== \"\") {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseEcho };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = String(object.message);\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.message !== undefined && (obj.message = message.message);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = object.message;\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseFlush = {};\nexport const ResponseFlush = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseFlush };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseResponseFlush };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseResponseFlush };\n        return message;\n    },\n};\nconst baseResponseInfo = {\n    data: \"\",\n    version: \"\",\n    appVersion: 0,\n    lastBlockHeight: 0,\n};\nexport const ResponseInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.data !== \"\") {\n            writer.uint32(10).string(message.data);\n        }\n        if (message.version !== \"\") {\n            writer.uint32(18).string(message.version);\n        }\n        if (message.appVersion !== 0) {\n            writer.uint32(24).uint64(message.appVersion);\n        }\n        if (message.lastBlockHeight !== 0) {\n            writer.uint32(32).int64(message.lastBlockHeight);\n        }\n        if (message.lastBlockAppHash.length !== 0) {\n            writer.uint32(42).bytes(message.lastBlockAppHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.string();\n                    break;\n                case 2:\n                    message.version = reader.string();\n                    break;\n                case 3:\n                    message.appVersion = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.lastBlockHeight = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.lastBlockAppHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseInfo };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = Number(object.appVersion);\n        }\n        else {\n            message.appVersion = 0;\n        }\n        if (object.lastBlockHeight !== undefined &&\n            object.lastBlockHeight !== null) {\n            message.lastBlockHeight = Number(object.lastBlockHeight);\n        }\n        else {\n            message.lastBlockHeight = 0;\n        }\n        if (object.lastBlockAppHash !== undefined &&\n            object.lastBlockAppHash !== null) {\n            message.lastBlockAppHash = bytesFromBase64(object.lastBlockAppHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined && (obj.data = message.data);\n        message.version !== undefined && (obj.version = message.version);\n        message.appVersion !== undefined && (obj.appVersion = message.appVersion);\n        message.lastBlockHeight !== undefined &&\n            (obj.lastBlockHeight = message.lastBlockHeight);\n        message.lastBlockAppHash !== undefined &&\n            (obj.lastBlockAppHash = base64FromBytes(message.lastBlockAppHash !== undefined\n                ? message.lastBlockAppHash\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseInfo };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = object.appVersion;\n        }\n        else {\n            message.appVersion = 0;\n        }\n        if (object.lastBlockHeight !== undefined &&\n            object.lastBlockHeight !== null) {\n            message.lastBlockHeight = object.lastBlockHeight;\n        }\n        else {\n            message.lastBlockHeight = 0;\n        }\n        if (object.lastBlockAppHash !== undefined &&\n            object.lastBlockAppHash !== null) {\n            message.lastBlockAppHash = object.lastBlockAppHash;\n        }\n        else {\n            message.lastBlockAppHash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseResponseSetOption = { code: 0, log: \"\", info: \"\" };\nexport const ResponseSetOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseSetOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseSetOption };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseSetOption };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseInitChain = {};\nexport const ResponseInitChain = {\n    encode(message, writer = Writer.create()) {\n        if (message.consensusParams !== undefined) {\n            ConsensusParams.encode(message.consensusParams, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            ValidatorUpdate.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(26).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.appHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromJSON(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.consensusParams !== undefined &&\n            (obj.consensusParams = message.consensusParams\n                ? ConsensusParams.toJSON(message.consensusParams)\n                : undefined);\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromPartial(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseResponseQuery = {\n    code: 0,\n    log: \"\",\n    info: \"\",\n    index: 0,\n    height: 0,\n    codespace: \"\",\n};\nexport const ResponseQuery = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.index !== 0) {\n            writer.uint32(40).int64(message.index);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(50).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(58).bytes(message.value);\n        }\n        if (message.proofOps !== undefined) {\n            ProofOps.encode(message.proofOps, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(72).int64(message.height);\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(82).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseQuery };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.key = reader.bytes();\n                    break;\n                case 7:\n                    message.value = reader.bytes();\n                    break;\n                case 8:\n                    message.proofOps = ProofOps.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 10:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseQuery };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.proofOps !== undefined && object.proofOps !== null) {\n            message.proofOps = ProofOps.fromJSON(object.proofOps);\n        }\n        else {\n            message.proofOps = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.index !== undefined && (obj.index = message.index);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.proofOps !== undefined &&\n            (obj.proofOps = message.proofOps\n                ? ProofOps.toJSON(message.proofOps)\n                : undefined);\n        message.height !== undefined && (obj.height = message.height);\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseQuery };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.proofOps !== undefined && object.proofOps !== null) {\n            message.proofOps = ProofOps.fromPartial(object.proofOps);\n        }\n        else {\n            message.proofOps = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseBeginBlock = {};\nexport const ResponseBeginBlock = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseResponseCheckTx = {\n    code: 0,\n    log: \"\",\n    info: \"\",\n    gasWanted: 0,\n    gasUsed: 0,\n    codespace: \"\",\n};\nexport const ResponseCheckTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(66).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 7:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseDeliverTx = {\n    code: 0,\n    log: \"\",\n    info: \"\",\n    gasWanted: 0,\n    gasUsed: 0,\n    codespace: \"\",\n};\nexport const ResponseDeliverTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(66).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 7:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseEndBlock = {};\nexport const ResponseEndBlock = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorUpdates) {\n            ValidatorUpdate.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusParamUpdates !== undefined) {\n            ConsensusParams.encode(message.consensusParamUpdates, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorUpdates.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.consensusParamUpdates = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        if (object.validatorUpdates !== undefined &&\n            object.validatorUpdates !== null) {\n            for (const e of object.validatorUpdates) {\n                message.validatorUpdates.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.consensusParamUpdates !== undefined &&\n            object.consensusParamUpdates !== null) {\n            message.consensusParamUpdates = ConsensusParams.fromJSON(object.consensusParamUpdates);\n        }\n        else {\n            message.consensusParamUpdates = undefined;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorUpdates) {\n            obj.validatorUpdates = message.validatorUpdates.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorUpdates = [];\n        }\n        message.consensusParamUpdates !== undefined &&\n            (obj.consensusParamUpdates = message.consensusParamUpdates\n                ? ConsensusParams.toJSON(message.consensusParamUpdates)\n                : undefined);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        if (object.validatorUpdates !== undefined &&\n            object.validatorUpdates !== null) {\n            for (const e of object.validatorUpdates) {\n                message.validatorUpdates.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.consensusParamUpdates !== undefined &&\n            object.consensusParamUpdates !== null) {\n            message.consensusParamUpdates = ConsensusParams.fromPartial(object.consensusParamUpdates);\n        }\n        else {\n            message.consensusParamUpdates = undefined;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseResponseCommit = { retainHeight: 0 };\nexport const ResponseCommit = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.retainHeight !== 0) {\n            writer.uint32(24).int64(message.retainHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseCommit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.retainHeight = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseCommit };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.retainHeight !== undefined && object.retainHeight !== null) {\n            message.retainHeight = Number(object.retainHeight);\n        }\n        else {\n            message.retainHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.retainHeight !== undefined &&\n            (obj.retainHeight = message.retainHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseCommit };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.retainHeight !== undefined && object.retainHeight !== null) {\n            message.retainHeight = object.retainHeight;\n        }\n        else {\n            message.retainHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseResponseListSnapshots = {};\nexport const ResponseListSnapshots = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.snapshots) {\n            Snapshot.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapshots.push(Snapshot.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        if (object.snapshots !== undefined && object.snapshots !== null) {\n            for (const e of object.snapshots) {\n                message.snapshots.push(Snapshot.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.snapshots) {\n            obj.snapshots = message.snapshots.map((e) => e ? Snapshot.toJSON(e) : undefined);\n        }\n        else {\n            obj.snapshots = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        if (object.snapshots !== undefined && object.snapshots !== null) {\n            for (const e of object.snapshots) {\n                message.snapshots.push(Snapshot.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseResponseOfferSnapshot = { result: 0 };\nexport const ResponseOfferSnapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseOfferSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseOfferSnapshot };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = responseOfferSnapshot_ResultFromJSON(object.result);\n        }\n        else {\n            message.result = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result = responseOfferSnapshot_ResultToJSON(message.result));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseOfferSnapshot };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = 0;\n        }\n        return message;\n    },\n};\nconst baseResponseLoadSnapshotChunk = {};\nexport const ResponseLoadSnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.chunk.length !== 0) {\n            writer.uint32(10).bytes(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseResponseLoadSnapshotChunk,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.chunk = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseResponseLoadSnapshotChunk,\n        };\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = bytesFromBase64(object.chunk);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.chunk !== undefined &&\n            (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseResponseLoadSnapshotChunk,\n        };\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseResponseApplySnapshotChunk = {\n    result: 0,\n    refetchChunks: 0,\n    rejectSenders: \"\",\n};\nexport const ResponseApplySnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        writer.uint32(18).fork();\n        for (const v of message.refetchChunks) {\n            writer.uint32(v);\n        }\n        writer.ldelim();\n        for (const v of message.rejectSenders) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseResponseApplySnapshotChunk,\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                case 2:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.refetchChunks.push(reader.uint32());\n                        }\n                    }\n                    else {\n                        message.refetchChunks.push(reader.uint32());\n                    }\n                    break;\n                case 3:\n                    message.rejectSenders.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseResponseApplySnapshotChunk,\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        if (object.result !== undefined && object.result !== null) {\n            message.result = responseApplySnapshotChunk_ResultFromJSON(object.result);\n        }\n        else {\n            message.result = 0;\n        }\n        if (object.refetchChunks !== undefined && object.refetchChunks !== null) {\n            for (const e of object.refetchChunks) {\n                message.refetchChunks.push(Number(e));\n            }\n        }\n        if (object.rejectSenders !== undefined && object.rejectSenders !== null) {\n            for (const e of object.rejectSenders) {\n                message.rejectSenders.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result = responseApplySnapshotChunk_ResultToJSON(message.result));\n        if (message.refetchChunks) {\n            obj.refetchChunks = message.refetchChunks.map((e) => e);\n        }\n        else {\n            obj.refetchChunks = [];\n        }\n        if (message.rejectSenders) {\n            obj.rejectSenders = message.rejectSenders.map((e) => e);\n        }\n        else {\n            obj.rejectSenders = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseResponseApplySnapshotChunk,\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = 0;\n        }\n        if (object.refetchChunks !== undefined && object.refetchChunks !== null) {\n            for (const e of object.refetchChunks) {\n                message.refetchChunks.push(e);\n            }\n        }\n        if (object.rejectSenders !== undefined && object.rejectSenders !== null) {\n            for (const e of object.rejectSenders) {\n                message.rejectSenders.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseConsensusParams = {};\nexport const ConsensusParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== undefined) {\n            BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.validator !== undefined) {\n            ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = BlockParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.evidence = EvidenceParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.validator = ValidatorParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.version = VersionParams.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromJSON(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined &&\n            (obj.block = message.block\n                ? BlockParams.toJSON(message.block)\n                : undefined);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? EvidenceParams.toJSON(message.evidence)\n                : undefined);\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? ValidatorParams.toJSON(message.validator)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? VersionParams.toJSON(message.version)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromPartial(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockParams = { maxBytes: 0, maxGas: 0 };\nexport const BlockParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxBytes !== 0) {\n            writer.uint32(8).int64(message.maxBytes);\n        }\n        if (message.maxGas !== 0) {\n            writer.uint32(16).int64(message.maxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxGas = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = Number(object.maxGas);\n        }\n        else {\n            message.maxGas = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        message.maxGas !== undefined && (obj.maxGas = message.maxGas);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = object.maxGas;\n        }\n        else {\n            message.maxGas = 0;\n        }\n        return message;\n    },\n};\nconst baseLastCommitInfo = { round: 0 };\nexport const LastCommitInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.round !== 0) {\n            writer.uint32(8).int32(message.round);\n        }\n        for (const v of message.votes) {\n            VoteInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.round = reader.int32();\n                    break;\n                case 2:\n                    message.votes.push(VoteInfo.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.votes !== undefined && object.votes !== null) {\n            for (const e of object.votes) {\n                message.votes.push(VoteInfo.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.round !== undefined && (obj.round = message.round);\n        if (message.votes) {\n            obj.votes = message.votes.map((e) => e ? VoteInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.votes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.votes !== undefined && object.votes !== null) {\n            for (const e of object.votes) {\n                message.votes.push(VoteInfo.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseEvent = { type: \"\" };\nexport const Event = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        for (const v of message.attributes) {\n            EventAttribute.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvent };\n        message.attributes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.attributes.push(EventAttribute.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(EventAttribute.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        if (message.attributes) {\n            obj.attributes = message.attributes.map((e) => e ? EventAttribute.toJSON(e) : undefined);\n        }\n        else {\n            obj.attributes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(EventAttribute.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseEventAttribute = { index: false };\nexport const EventAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.index === true) {\n            writer.uint32(24).bool(message.index);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEventAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.index = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEventAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Boolean(object.index);\n        }\n        else {\n            message.index = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.index !== undefined && (obj.index = message.index);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEventAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = false;\n        }\n        return message;\n    },\n};\nconst baseTxResult = { height: 0, index: 0 };\nexport const TxResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).uint32(message.index);\n        }\n        if (message.tx.length !== 0) {\n            writer.uint32(26).bytes(message.tx);\n        }\n        if (message.result !== undefined) {\n            ResponseDeliverTx.encode(message.result, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = reader.uint32();\n                    break;\n                case 3:\n                    message.tx = reader.bytes();\n                    break;\n                case 4:\n                    message.result = ResponseDeliverTx.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxResult };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = ResponseDeliverTx.fromJSON(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.index !== undefined && (obj.index = message.index);\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        message.result !== undefined &&\n            (obj.result = message.result\n                ? ResponseDeliverTx.toJSON(message.result)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxResult };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = ResponseDeliverTx.fromPartial(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidator = { power: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorUpdate = { power: 0 };\nexport const ValidatorUpdate = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorUpdate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorUpdate };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorUpdate };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n};\nconst baseVoteInfo = { signedLastBlock: false };\nexport const VoteInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.validator !== undefined) {\n            Validator.encode(message.validator, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.signedLastBlock === true) {\n            writer.uint32(16).bool(message.signedLastBlock);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVoteInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validator = Validator.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signedLastBlock = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVoteInfo };\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.signedLastBlock !== undefined &&\n            object.signedLastBlock !== null) {\n            message.signedLastBlock = Boolean(object.signedLastBlock);\n        }\n        else {\n            message.signedLastBlock = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? Validator.toJSON(message.validator)\n                : undefined);\n        message.signedLastBlock !== undefined &&\n            (obj.signedLastBlock = message.signedLastBlock);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVoteInfo };\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.signedLastBlock !== undefined &&\n            object.signedLastBlock !== null) {\n            message.signedLastBlock = object.signedLastBlock;\n        }\n        else {\n            message.signedLastBlock = false;\n        }\n        return message;\n    },\n};\nconst baseEvidence = { type: 0, height: 0, totalVotingPower: 0 };\nexport const Evidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.validator !== undefined) {\n            Validator.encode(message.validator, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(40).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.validator = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvidence };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = evidenceTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = evidenceTypeToJSON(message.type));\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? Validator.toJSON(message.validator)\n                : undefined);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvidence };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n};\nconst baseSnapshot = { height: 0, format: 0, chunks: 0 };\nexport const Snapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunks !== 0) {\n            writer.uint32(24).uint32(message.chunks);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        if (message.metadata.length !== 0) {\n            writer.uint32(42).bytes(message.metadata);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.format = reader.uint32();\n                    break;\n                case 3:\n                    message.chunks = reader.uint32();\n                    break;\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                case 5:\n                    message.metadata = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSnapshot };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = Number(object.format);\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunks !== undefined && object.chunks !== null) {\n            message.chunks = Number(object.chunks);\n        }\n        else {\n            message.chunks = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = bytesFromBase64(object.metadata);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.format !== undefined && (obj.format = message.format);\n        message.chunks !== undefined && (obj.chunks = message.chunks);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.metadata !== undefined &&\n            (obj.metadata = base64FromBytes(message.metadata !== undefined ? message.metadata : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSnapshot };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = object.format;\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunks !== undefined && object.chunks !== null) {\n            message.chunks = object.chunks;\n        }\n        else {\n            message.chunks = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = new Uint8Array();\n        }\n        return message;\n    },\n};\nexport class ABCIApplicationClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Echo(request) {\n        const data = RequestEcho.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Echo\", data);\n        return promise.then((data) => ResponseEcho.decode(new Reader(data)));\n    }\n    Flush(request) {\n        const data = RequestFlush.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Flush\", data);\n        return promise.then((data) => ResponseFlush.decode(new Reader(data)));\n    }\n    Info(request) {\n        const data = RequestInfo.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Info\", data);\n        return promise.then((data) => ResponseInfo.decode(new Reader(data)));\n    }\n    SetOption(request) {\n        const data = RequestSetOption.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"SetOption\", data);\n        return promise.then((data) => ResponseSetOption.decode(new Reader(data)));\n    }\n    DeliverTx(request) {\n        const data = RequestDeliverTx.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"DeliverTx\", data);\n        return promise.then((data) => ResponseDeliverTx.decode(new Reader(data)));\n    }\n    CheckTx(request) {\n        const data = RequestCheckTx.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"CheckTx\", data);\n        return promise.then((data) => ResponseCheckTx.decode(new Reader(data)));\n    }\n    Query(request) {\n        const data = RequestQuery.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Query\", data);\n        return promise.then((data) => ResponseQuery.decode(new Reader(data)));\n    }\n    Commit(request) {\n        const data = RequestCommit.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Commit\", data);\n        return promise.then((data) => ResponseCommit.decode(new Reader(data)));\n    }\n    InitChain(request) {\n        const data = RequestInitChain.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"InitChain\", data);\n        return promise.then((data) => ResponseInitChain.decode(new Reader(data)));\n    }\n    BeginBlock(request) {\n        const data = RequestBeginBlock.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"BeginBlock\", data);\n        return promise.then((data) => ResponseBeginBlock.decode(new Reader(data)));\n    }\n    EndBlock(request) {\n        const data = RequestEndBlock.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"EndBlock\", data);\n        return promise.then((data) => ResponseEndBlock.decode(new Reader(data)));\n    }\n    ListSnapshots(request) {\n        const data = RequestListSnapshots.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"ListSnapshots\", data);\n        return promise.then((data) => ResponseListSnapshots.decode(new Reader(data)));\n    }\n    OfferSnapshot(request) {\n        const data = RequestOfferSnapshot.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"OfferSnapshot\", data);\n        return promise.then((data) => ResponseOfferSnapshot.decode(new Reader(data)));\n    }\n    LoadSnapshotChunk(request) {\n        const data = RequestLoadSnapshotChunk.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"LoadSnapshotChunk\", data);\n        return promise.then((data) => ResponseLoadSnapshotChunk.decode(new Reader(data)));\n    }\n    ApplySnapshotChunk(request) {\n        const data = RequestApplySnapshotChunk.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"ApplySnapshotChunk\", data);\n        return promise.then((data) => ResponseApplySnapshotChunk.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    clientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Duration } from \"../../google/protobuf/duration\";\nexport const protobufPackage = \"tendermint.types\";\nconst baseConsensusParams = {};\nexport const ConsensusParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== undefined) {\n            BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.validator !== undefined) {\n            ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = BlockParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.evidence = EvidenceParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.validator = ValidatorParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.version = VersionParams.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromJSON(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined &&\n            (obj.block = message.block\n                ? BlockParams.toJSON(message.block)\n                : undefined);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? EvidenceParams.toJSON(message.evidence)\n                : undefined);\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? ValidatorParams.toJSON(message.validator)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? VersionParams.toJSON(message.version)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromPartial(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockParams = { maxBytes: 0, maxGas: 0, timeIotaMs: 0 };\nexport const BlockParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxBytes !== 0) {\n            writer.uint32(8).int64(message.maxBytes);\n        }\n        if (message.maxGas !== 0) {\n            writer.uint32(16).int64(message.maxGas);\n        }\n        if (message.timeIotaMs !== 0) {\n            writer.uint32(24).int64(message.timeIotaMs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxGas = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.timeIotaMs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = Number(object.maxGas);\n        }\n        else {\n            message.maxGas = 0;\n        }\n        if (object.timeIotaMs !== undefined && object.timeIotaMs !== null) {\n            message.timeIotaMs = Number(object.timeIotaMs);\n        }\n        else {\n            message.timeIotaMs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        message.maxGas !== undefined && (obj.maxGas = message.maxGas);\n        message.timeIotaMs !== undefined && (obj.timeIotaMs = message.timeIotaMs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = object.maxGas;\n        }\n        else {\n            message.maxGas = 0;\n        }\n        if (object.timeIotaMs !== undefined && object.timeIotaMs !== null) {\n            message.timeIotaMs = object.timeIotaMs;\n        }\n        else {\n            message.timeIotaMs = 0;\n        }\n        return message;\n    },\n};\nconst baseEvidenceParams = { maxAgeNumBlocks: 0, maxBytes: 0 };\nexport const EvidenceParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxAgeNumBlocks !== 0) {\n            writer.uint32(8).int64(message.maxAgeNumBlocks);\n        }\n        if (message.maxAgeDuration !== undefined) {\n            Duration.encode(message.maxAgeDuration, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.maxBytes !== 0) {\n            writer.uint32(24).int64(message.maxBytes);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvidenceParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxAgeNumBlocks = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxAgeDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvidenceParams };\n        if (object.maxAgeNumBlocks !== undefined &&\n            object.maxAgeNumBlocks !== null) {\n            message.maxAgeNumBlocks = Number(object.maxAgeNumBlocks);\n        }\n        else {\n            message.maxAgeNumBlocks = 0;\n        }\n        if (object.maxAgeDuration !== undefined && object.maxAgeDuration !== null) {\n            message.maxAgeDuration = Duration.fromJSON(object.maxAgeDuration);\n        }\n        else {\n            message.maxAgeDuration = undefined;\n        }\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxAgeNumBlocks !== undefined &&\n            (obj.maxAgeNumBlocks = message.maxAgeNumBlocks);\n        message.maxAgeDuration !== undefined &&\n            (obj.maxAgeDuration = message.maxAgeDuration\n                ? Duration.toJSON(message.maxAgeDuration)\n                : undefined);\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvidenceParams };\n        if (object.maxAgeNumBlocks !== undefined &&\n            object.maxAgeNumBlocks !== null) {\n            message.maxAgeNumBlocks = object.maxAgeNumBlocks;\n        }\n        else {\n            message.maxAgeNumBlocks = 0;\n        }\n        if (object.maxAgeDuration !== undefined && object.maxAgeDuration !== null) {\n            message.maxAgeDuration = Duration.fromPartial(object.maxAgeDuration);\n        }\n        else {\n            message.maxAgeDuration = undefined;\n        }\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorParams = { pubKeyTypes: \"\" };\nexport const ValidatorParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pubKeyTypes) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKeyTypes.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        if (object.pubKeyTypes !== undefined && object.pubKeyTypes !== null) {\n            for (const e of object.pubKeyTypes) {\n                message.pubKeyTypes.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pubKeyTypes) {\n            obj.pubKeyTypes = message.pubKeyTypes.map((e) => e);\n        }\n        else {\n            obj.pubKeyTypes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        if (object.pubKeyTypes !== undefined && object.pubKeyTypes !== null) {\n            for (const e of object.pubKeyTypes) {\n                message.pubKeyTypes.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVersionParams = { appVersion: 0 };\nexport const VersionParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.appVersion !== 0) {\n            writer.uint32(8).uint64(message.appVersion);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVersionParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.appVersion = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVersionParams };\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = Number(object.appVersion);\n        }\n        else {\n            message.appVersion = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.appVersion !== undefined && (obj.appVersion = message.appVersion);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVersionParams };\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = object.appVersion;\n        }\n        else {\n            message.appVersion = 0;\n        }\n        return message;\n    },\n};\nconst baseHashedParams = { blockMaxBytes: 0, blockMaxGas: 0 };\nexport const HashedParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockMaxBytes !== 0) {\n            writer.uint32(8).int64(message.blockMaxBytes);\n        }\n        if (message.blockMaxGas !== 0) {\n            writer.uint32(16).int64(message.blockMaxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHashedParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockMaxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.blockMaxGas = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHashedParams };\n        if (object.blockMaxBytes !== undefined && object.blockMaxBytes !== null) {\n            message.blockMaxBytes = Number(object.blockMaxBytes);\n        }\n        else {\n            message.blockMaxBytes = 0;\n        }\n        if (object.blockMaxGas !== undefined && object.blockMaxGas !== null) {\n            message.blockMaxGas = Number(object.blockMaxGas);\n        }\n        else {\n            message.blockMaxGas = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockMaxBytes !== undefined &&\n            (obj.blockMaxBytes = message.blockMaxBytes);\n        message.blockMaxGas !== undefined &&\n            (obj.blockMaxGas = message.blockMaxGas);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHashedParams };\n        if (object.blockMaxBytes !== undefined && object.blockMaxBytes !== null) {\n            message.blockMaxBytes = object.blockMaxBytes;\n        }\n        else {\n            message.blockMaxBytes = 0;\n        }\n        if (object.blockMaxGas !== undefined && object.blockMaxGas !== null) {\n            message.blockMaxGas = object.blockMaxGas;\n        }\n        else {\n            message.blockMaxGas = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Proof } from \"../../tendermint/crypto/proof\";\nimport { Consensus } from \"../../tendermint/version/types\";\nimport { ValidatorSet } from \"../../tendermint/types/validator\";\nexport const protobufPackage = \"tendermint.types\";\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"BLOCK_ID_FLAG_UNKNOWN\":\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case \"BLOCK_ID_FLAG_ABSENT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case \"BLOCK_ID_FLAG_COMMIT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case \"BLOCK_ID_FLAG_NIL\":\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return \"BLOCK_ID_FLAG_UNKNOWN\";\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return \"BLOCK_ID_FLAG_ABSENT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return \"BLOCK_ID_FLAG_COMMIT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return \"BLOCK_ID_FLAG_NIL\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"SIGNED_MSG_TYPE_UNKNOWN\":\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case \"SIGNED_MSG_TYPE_PREVOTE\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case \"SIGNED_MSG_TYPE_PRECOMMIT\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case \"SIGNED_MSG_TYPE_PROPOSAL\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return \"SIGNED_MSG_TYPE_UNKNOWN\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return \"SIGNED_MSG_TYPE_PREVOTE\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return \"SIGNED_MSG_TYPE_PRECOMMIT\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return \"SIGNED_MSG_TYPE_PROPOSAL\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined &&\n            (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined &&\n            (obj.partSetHeader = message.partSetHeader\n                ? PartSetHeader.toJSON(message.partSetHeader)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeader = { chainId: \"\", height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== \"\") {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Consensus.toJSON(message.version)\n                : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined &&\n            (obj.lastBlockId = message.lastBlockId\n                ? BlockID.toJSON(message.lastBlockId)\n                : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined\n                ? message.lastCommitHash\n                : new Uint8Array()));\n        message.dataHash !== undefined &&\n            (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined\n                ? message.validatorsHash\n                : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined\n                ? message.nextValidatorsHash\n                : new Uint8Array()));\n        message.consensusHash !== undefined &&\n            (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined\n                ? message.consensusHash\n                : new Uint8Array()));\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined\n                ? message.lastResultsHash\n                : new Uint8Array()));\n        message.evidenceHash !== undefined &&\n            (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined\n                ? message.evidenceHash\n                : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined\n                ? message.proposerAddress\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.validatorIndex !== undefined &&\n            (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? CommitSig.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined &&\n            (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined &&\n            (obj.signedHeader = message.signedHeader\n                ? SignedHeader.toJSON(message.signedHeader)\n                : undefined);\n        message.validatorSet !== undefined &&\n            (obj.validatorSet = message.validatorSet\n                ? ValidatorSet.toJSON(message.validatorSet)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined &&\n            (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.evidence.v1beta1\";\nconst baseEquivocation = { height: 0, power: 0, consensusAddress: \"\" };\nexport const Equivocation = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        if (message.consensusAddress !== \"\") {\n            writer.uint32(34).string(message.consensusAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEquivocation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.consensusAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined &&\n            object.consensusAddress !== null) {\n            message.consensusAddress = String(object.consensusAddress);\n        }\n        else {\n            message.consensusAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.power !== undefined && (obj.power = message.power);\n        message.consensusAddress !== undefined &&\n            (obj.consensusAddress = message.consensusAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined &&\n            object.consensusAddress !== null) {\n            message.consensusAddress = object.consensusAddress;\n        }\n        else {\n            message.consensusAddress = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    clientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { BaseAccount } from \"../../../cosmos/auth/v1beta1/auth\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.vesting.v1beta1\";\nconst baseBaseVestingAccount = { endTime: 0 };\nexport const BaseVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.originalVesting) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatedFree) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.delegatedVesting) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(40).int64(message.endTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.originalVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.delegatedFree.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.delegatedVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined &&\n            object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined &&\n            object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined &&\n            (obj.baseAccount = message.baseAccount\n                ? BaseAccount.toJSON(message.baseAccount)\n                : undefined);\n        if (message.originalVesting) {\n            obj.originalVesting = message.originalVesting.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.originalVesting = [];\n        }\n        if (message.delegatedFree) {\n            obj.delegatedFree = message.delegatedFree.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatedFree = [];\n        }\n        if (message.delegatedVesting) {\n            obj.delegatedVesting = message.delegatedVesting.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatedVesting = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined &&\n            object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined &&\n            object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    },\n};\nconst baseContinuousVestingAccount = { startTime: 0 };\nexport const ContinuousVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseContinuousVestingAccount,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseContinuousVestingAccount,\n        };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseContinuousVestingAccount,\n        };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    },\n};\nconst baseDelayedVestingAccount = {};\nexport const DelayedVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelayedVestingAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    },\n};\nconst basePeriod = { length: 0 };\nexport const Period = {\n    encode(message, writer = Writer.create()) {\n        if (message.length !== 0) {\n            writer.uint32(8).int64(message.length);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriod };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.length = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = Number(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.length !== undefined && (obj.length = message.length);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst basePeriodicVestingAccount = { startTime: 0 };\nexport const PeriodicVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        for (const v of message.vestingPeriods) {\n            Period.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.vestingPeriods.push(Period.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        if (message.vestingPeriods) {\n            obj.vestingPeriods = message.vestingPeriods.map((e) => e ? Period.toJSON(e) : undefined);\n        }\n        else {\n            obj.vestingPeriods = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { TransactionLogs } from \"../../../ethermint/evm/v1alpha1/evm\";\nexport const protobufPackage = \"ethermint.evm.v1alpha1\";\nconst baseMsgEthereumTx = { size: 0 };\nexport const MsgEthereumTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.data !== undefined) {\n            TxData.encode(message.data, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.size !== 0) {\n            writer.uint32(17).double(message.size);\n        }\n        if (message.from !== undefined) {\n            SigCache.encode(message.from, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEthereumTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = TxData.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.size = reader.double();\n                    break;\n                case 3:\n                    message.from = SigCache.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEthereumTx };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = TxData.fromJSON(object.data);\n        }\n        else {\n            message.data = undefined;\n        }\n        if (object.size !== undefined && object.size !== null) {\n            message.size = Number(object.size);\n        }\n        else {\n            message.size = 0;\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = SigCache.fromJSON(object.from);\n        }\n        else {\n            message.from = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = message.data ? TxData.toJSON(message.data) : undefined);\n        message.size !== undefined && (obj.size = message.size);\n        message.from !== undefined &&\n            (obj.from = message.from ? SigCache.toJSON(message.from) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEthereumTx };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = TxData.fromPartial(object.data);\n        }\n        else {\n            message.data = undefined;\n        }\n        if (object.size !== undefined && object.size !== null) {\n            message.size = object.size;\n        }\n        else {\n            message.size = 0;\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = SigCache.fromPartial(object.from);\n        }\n        else {\n            message.from = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgEthereumTxResponse = { contractAddress: \"\" };\nexport const MsgEthereumTxResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.contractAddress !== \"\") {\n            writer.uint32(10).string(message.contractAddress);\n        }\n        if (message.bloom.length !== 0) {\n            writer.uint32(18).bytes(message.bloom);\n        }\n        if (message.txLogs !== undefined) {\n            TransactionLogs.encode(message.txLogs, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.ret.length !== 0) {\n            writer.uint32(34).bytes(message.ret);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEthereumTxResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.contractAddress = reader.string();\n                    break;\n                case 2:\n                    message.bloom = reader.bytes();\n                    break;\n                case 3:\n                    message.txLogs = TransactionLogs.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.ret = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEthereumTxResponse };\n        if (object.contractAddress !== undefined &&\n            object.contractAddress !== null) {\n            message.contractAddress = String(object.contractAddress);\n        }\n        else {\n            message.contractAddress = \"\";\n        }\n        if (object.bloom !== undefined && object.bloom !== null) {\n            message.bloom = bytesFromBase64(object.bloom);\n        }\n        if (object.txLogs !== undefined && object.txLogs !== null) {\n            message.txLogs = TransactionLogs.fromJSON(object.txLogs);\n        }\n        else {\n            message.txLogs = undefined;\n        }\n        if (object.ret !== undefined && object.ret !== null) {\n            message.ret = bytesFromBase64(object.ret);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.contractAddress !== undefined &&\n            (obj.contractAddress = message.contractAddress);\n        message.bloom !== undefined &&\n            (obj.bloom = base64FromBytes(message.bloom !== undefined ? message.bloom : new Uint8Array()));\n        message.txLogs !== undefined &&\n            (obj.txLogs = message.txLogs\n                ? TransactionLogs.toJSON(message.txLogs)\n                : undefined);\n        message.ret !== undefined &&\n            (obj.ret = base64FromBytes(message.ret !== undefined ? message.ret : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEthereumTxResponse };\n        if (object.contractAddress !== undefined &&\n            object.contractAddress !== null) {\n            message.contractAddress = object.contractAddress;\n        }\n        else {\n            message.contractAddress = \"\";\n        }\n        if (object.bloom !== undefined && object.bloom !== null) {\n            message.bloom = object.bloom;\n        }\n        else {\n            message.bloom = new Uint8Array();\n        }\n        if (object.txLogs !== undefined && object.txLogs !== null) {\n            message.txLogs = TransactionLogs.fromPartial(object.txLogs);\n        }\n        else {\n            message.txLogs = undefined;\n        }\n        if (object.ret !== undefined && object.ret !== null) {\n            message.ret = object.ret;\n        }\n        else {\n            message.ret = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseTxData = { nonce: 0, price: \"\", gas: 0, value: \"\", hash: \"\" };\nexport const TxData = {\n    encode(message, writer = Writer.create()) {\n        if (message.nonce !== 0) {\n            writer.uint32(8).uint64(message.nonce);\n        }\n        if (message.price !== \"\") {\n            writer.uint32(18).string(message.price);\n        }\n        if (message.gas !== 0) {\n            writer.uint32(24).uint64(message.gas);\n        }\n        if (message.to !== undefined) {\n            Recipient.encode(message.to, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.value !== \"\") {\n            writer.uint32(42).string(message.value);\n        }\n        if (message.input.length !== 0) {\n            writer.uint32(50).bytes(message.input);\n        }\n        if (message.v.length !== 0) {\n            writer.uint32(58).bytes(message.v);\n        }\n        if (message.r.length !== 0) {\n            writer.uint32(66).bytes(message.r);\n        }\n        if (message.s.length !== 0) {\n            writer.uint32(74).bytes(message.s);\n        }\n        if (message.hash !== \"\") {\n            writer.uint32(82).string(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxData };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.nonce = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.price = reader.string();\n                    break;\n                case 3:\n                    message.gas = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.to = Recipient.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.value = reader.string();\n                    break;\n                case 6:\n                    message.input = reader.bytes();\n                    break;\n                case 7:\n                    message.v = reader.bytes();\n                    break;\n                case 8:\n                    message.r = reader.bytes();\n                    break;\n                case 9:\n                    message.s = reader.bytes();\n                    break;\n                case 10:\n                    message.hash = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxData };\n        if (object.nonce !== undefined && object.nonce !== null) {\n            message.nonce = Number(object.nonce);\n        }\n        else {\n            message.nonce = 0;\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = String(object.price);\n        }\n        else {\n            message.price = \"\";\n        }\n        if (object.gas !== undefined && object.gas !== null) {\n            message.gas = Number(object.gas);\n        }\n        else {\n            message.gas = 0;\n        }\n        if (object.to !== undefined && object.to !== null) {\n            message.to = Recipient.fromJSON(object.to);\n        }\n        else {\n            message.to = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = bytesFromBase64(object.input);\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = bytesFromBase64(object.v);\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = bytesFromBase64(object.r);\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = bytesFromBase64(object.s);\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = String(object.hash);\n        }\n        else {\n            message.hash = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.nonce !== undefined && (obj.nonce = message.nonce);\n        message.price !== undefined && (obj.price = message.price);\n        message.gas !== undefined && (obj.gas = message.gas);\n        message.to !== undefined &&\n            (obj.to = message.to ? Recipient.toJSON(message.to) : undefined);\n        message.value !== undefined && (obj.value = message.value);\n        message.input !== undefined &&\n            (obj.input = base64FromBytes(message.input !== undefined ? message.input : new Uint8Array()));\n        message.v !== undefined &&\n            (obj.v = base64FromBytes(message.v !== undefined ? message.v : new Uint8Array()));\n        message.r !== undefined &&\n            (obj.r = base64FromBytes(message.r !== undefined ? message.r : new Uint8Array()));\n        message.s !== undefined &&\n            (obj.s = base64FromBytes(message.s !== undefined ? message.s : new Uint8Array()));\n        message.hash !== undefined && (obj.hash = message.hash);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxData };\n        if (object.nonce !== undefined && object.nonce !== null) {\n            message.nonce = object.nonce;\n        }\n        else {\n            message.nonce = 0;\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = \"\";\n        }\n        if (object.gas !== undefined && object.gas !== null) {\n            message.gas = object.gas;\n        }\n        else {\n            message.gas = 0;\n        }\n        if (object.to !== undefined && object.to !== null) {\n            message.to = Recipient.fromPartial(object.to);\n        }\n        else {\n            message.to = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = new Uint8Array();\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = object.v;\n        }\n        else {\n            message.v = new Uint8Array();\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = object.r;\n        }\n        else {\n            message.r = new Uint8Array();\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = object.s;\n        }\n        else {\n            message.s = new Uint8Array();\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = \"\";\n        }\n        return message;\n    },\n};\nconst baseRecipient = { address: \"\" };\nexport const Recipient = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRecipient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRecipient };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRecipient };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        return message;\n    },\n};\nconst baseSigCache = { address: \"\" };\nexport const SigCache = {\n    encode(message, writer = Writer.create()) {\n        if (message.signer !== undefined) {\n            EIP155Signer.encode(message.signer, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.address !== \"\") {\n            writer.uint32(18).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSigCache };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signer = EIP155Signer.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSigCache };\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = EIP155Signer.fromJSON(object.signer);\n        }\n        else {\n            message.signer = undefined;\n        }\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signer !== undefined &&\n            (obj.signer = message.signer\n                ? EIP155Signer.toJSON(message.signer)\n                : undefined);\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSigCache };\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = EIP155Signer.fromPartial(object.signer);\n        }\n        else {\n            message.signer = undefined;\n        }\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        return message;\n    },\n};\nconst baseEIP155Signer = {};\nexport const EIP155Signer = {\n    encode(message, writer = Writer.create()) {\n        if (message.chainId.length !== 0) {\n            writer.uint32(10).bytes(message.chainId);\n        }\n        if (message.chainIdMul.length !== 0) {\n            writer.uint32(18).bytes(message.chainIdMul);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEIP155Signer };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.chainId = reader.bytes();\n                    break;\n                case 2:\n                    message.chainIdMul = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEIP155Signer };\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = bytesFromBase64(object.chainId);\n        }\n        if (object.chainIdMul !== undefined && object.chainIdMul !== null) {\n            message.chainIdMul = bytesFromBase64(object.chainIdMul);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.chainId !== undefined &&\n            (obj.chainId = base64FromBytes(message.chainId !== undefined ? message.chainId : new Uint8Array()));\n        message.chainIdMul !== undefined &&\n            (obj.chainIdMul = base64FromBytes(message.chainIdMul !== undefined ? message.chainIdMul : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEIP155Signer };\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = new Uint8Array();\n        }\n        if (object.chainIdMul !== undefined && object.chainIdMul !== null) {\n            message.chainIdMul = object.chainIdMul;\n        }\n        else {\n            message.chainIdMul = new Uint8Array();\n        }\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    EthereumTx(request) {\n        const data = MsgEthereumTx.encode(request).finish();\n        const promise = this.rpc.request(\"ethermint.evm.v1alpha1.Msg\", \"EthereumTx\", data);\n        return promise.then((data) => MsgEthereumTxResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.channel.v1\";\n/**\n * State defines if a channel is in one of the following states:\n * CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nexport var State;\n(function (State) {\n    /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n    State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    /** STATE_INIT - A channel has just started the opening handshake. */\n    State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n    /** STATE_TRYOPEN - A channel has acknowledged the handshake step on the counterparty chain. */\n    State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n    /**\n     * STATE_OPEN - A channel has completed the handshake. Open channels are\n     * ready to send and receive packets.\n     */\n    State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n    /**\n     * STATE_CLOSED - A channel has been closed and can no longer be used to send or receive\n     * packets.\n     */\n    State[State[\"STATE_CLOSED\"] = 4] = \"STATE_CLOSED\";\n    State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State || (State = {}));\nexport function stateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"STATE_UNINITIALIZED_UNSPECIFIED\":\n            return State.STATE_UNINITIALIZED_UNSPECIFIED;\n        case 1:\n        case \"STATE_INIT\":\n            return State.STATE_INIT;\n        case 2:\n        case \"STATE_TRYOPEN\":\n            return State.STATE_TRYOPEN;\n        case 3:\n        case \"STATE_OPEN\":\n            return State.STATE_OPEN;\n        case 4:\n        case \"STATE_CLOSED\":\n            return State.STATE_CLOSED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return State.UNRECOGNIZED;\n    }\n}\nexport function stateToJSON(object) {\n    switch (object) {\n        case State.STATE_UNINITIALIZED_UNSPECIFIED:\n            return \"STATE_UNINITIALIZED_UNSPECIFIED\";\n        case State.STATE_INIT:\n            return \"STATE_INIT\";\n        case State.STATE_TRYOPEN:\n            return \"STATE_TRYOPEN\";\n        case State.STATE_OPEN:\n            return \"STATE_OPEN\";\n        case State.STATE_CLOSED:\n            return \"STATE_CLOSED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** Order defines if a channel is ORDERED or UNORDERED */\nexport var Order;\n(function (Order) {\n    /** ORDER_NONE_UNSPECIFIED - zero-value for channel ordering */\n    Order[Order[\"ORDER_NONE_UNSPECIFIED\"] = 0] = \"ORDER_NONE_UNSPECIFIED\";\n    /**\n     * ORDER_UNORDERED - packets can be delivered in any order, which may differ from the order in\n     * which they were sent.\n     */\n    Order[Order[\"ORDER_UNORDERED\"] = 1] = \"ORDER_UNORDERED\";\n    /** ORDER_ORDERED - packets are delivered exactly in the order which they were sent */\n    Order[Order[\"ORDER_ORDERED\"] = 2] = \"ORDER_ORDERED\";\n    Order[Order[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(Order || (Order = {}));\nexport function orderFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"ORDER_NONE_UNSPECIFIED\":\n            return Order.ORDER_NONE_UNSPECIFIED;\n        case 1:\n        case \"ORDER_UNORDERED\":\n            return Order.ORDER_UNORDERED;\n        case 2:\n        case \"ORDER_ORDERED\":\n            return Order.ORDER_ORDERED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return Order.UNRECOGNIZED;\n    }\n}\nexport function orderToJSON(object) {\n    switch (object) {\n        case Order.ORDER_NONE_UNSPECIFIED:\n            return \"ORDER_NONE_UNSPECIFIED\";\n        case Order.ORDER_UNORDERED:\n            return \"ORDER_UNORDERED\";\n        case Order.ORDER_ORDERED:\n            return \"ORDER_ORDERED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseChannel = {\n    state: 0,\n    ordering: 0,\n    connectionHops: \"\",\n    version: \"\",\n};\nexport const Channel = {\n    encode(message, writer = Writer.create()) {\n        if (message.state !== 0) {\n            writer.uint32(8).int32(message.state);\n        }\n        if (message.ordering !== 0) {\n            writer.uint32(16).int32(message.ordering);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.connectionHops) {\n            writer.uint32(34).string(v);\n        }\n        if (message.version !== \"\") {\n            writer.uint32(42).string(message.version);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.state = reader.int32();\n                    break;\n                case 2:\n                    message.ordering = reader.int32();\n                    break;\n                case 3:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.connectionHops.push(reader.string());\n                    break;\n                case 5:\n                    message.version = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = orderFromJSON(object.ordering);\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(String(e));\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.ordering !== undefined &&\n            (obj.ordering = orderToJSON(message.ordering));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        if (message.connectionHops) {\n            obj.connectionHops = message.connectionHops.map((e) => e);\n        }\n        else {\n            obj.connectionHops = [];\n        }\n        message.version !== undefined && (obj.version = message.version);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = object.ordering;\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(e);\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        return message;\n    },\n};\nconst baseIdentifiedChannel = {\n    state: 0,\n    ordering: 0,\n    connectionHops: \"\",\n    version: \"\",\n    portId: \"\",\n    channelId: \"\",\n};\nexport const IdentifiedChannel = {\n    encode(message, writer = Writer.create()) {\n        if (message.state !== 0) {\n            writer.uint32(8).int32(message.state);\n        }\n        if (message.ordering !== 0) {\n            writer.uint32(16).int32(message.ordering);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.connectionHops) {\n            writer.uint32(34).string(v);\n        }\n        if (message.version !== \"\") {\n            writer.uint32(42).string(message.version);\n        }\n        if (message.portId !== \"\") {\n            writer.uint32(50).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(58).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.state = reader.int32();\n                    break;\n                case 2:\n                    message.ordering = reader.int32();\n                    break;\n                case 3:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.connectionHops.push(reader.string());\n                    break;\n                case 5:\n                    message.version = reader.string();\n                    break;\n                case 6:\n                    message.portId = reader.string();\n                    break;\n                case 7:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = orderFromJSON(object.ordering);\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(String(e));\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.ordering !== undefined &&\n            (obj.ordering = orderToJSON(message.ordering));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        if (message.connectionHops) {\n            obj.connectionHops = message.connectionHops.map((e) => e);\n        }\n        else {\n            obj.connectionHops = [];\n        }\n        message.version !== undefined && (obj.version = message.version);\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = object.ordering;\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(e);\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n};\nconst baseCounterparty = { portId: \"\", channelId: \"\" };\nexport const Counterparty = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCounterparty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCounterparty };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCounterparty };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n};\nconst basePacket = {\n    sequence: 0,\n    sourcePort: \"\",\n    sourceChannel: \"\",\n    destinationPort: \"\",\n    destinationChannel: \"\",\n    timeoutTimestamp: 0,\n};\nexport const Packet = {\n    encode(message, writer = Writer.create()) {\n        if (message.sequence !== 0) {\n            writer.uint32(8).uint64(message.sequence);\n        }\n        if (message.sourcePort !== \"\") {\n            writer.uint32(18).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== \"\") {\n            writer.uint32(26).string(message.sourceChannel);\n        }\n        if (message.destinationPort !== \"\") {\n            writer.uint32(34).string(message.destinationPort);\n        }\n        if (message.destinationChannel !== \"\") {\n            writer.uint32(42).string(message.destinationChannel);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(50).bytes(message.data);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(64).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.sourcePort = reader.string();\n                    break;\n                case 3:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 4:\n                    message.destinationPort = reader.string();\n                    break;\n                case 5:\n                    message.destinationChannel = reader.string();\n                    break;\n                case 6:\n                    message.data = reader.bytes();\n                    break;\n                case 7:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacket };\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.destinationPort !== undefined &&\n            object.destinationPort !== null) {\n            message.destinationPort = String(object.destinationPort);\n        }\n        else {\n            message.destinationPort = \"\";\n        }\n        if (object.destinationChannel !== undefined &&\n            object.destinationChannel !== null) {\n            message.destinationChannel = String(object.destinationChannel);\n        }\n        else {\n            message.destinationChannel = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined &&\n            (obj.sourceChannel = message.sourceChannel);\n        message.destinationPort !== undefined &&\n            (obj.destinationPort = message.destinationPort);\n        message.destinationChannel !== undefined &&\n            (obj.destinationChannel = message.destinationChannel);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = message.timeoutHeight\n                ? Height.toJSON(message.timeoutHeight)\n                : undefined);\n        message.timeoutTimestamp !== undefined &&\n            (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacket };\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.destinationPort !== undefined &&\n            object.destinationPort !== null) {\n            message.destinationPort = object.destinationPort;\n        }\n        else {\n            message.destinationPort = \"\";\n        }\n        if (object.destinationChannel !== undefined &&\n            object.destinationChannel !== null) {\n            message.destinationChannel = object.destinationChannel;\n        }\n        else {\n            message.destinationChannel = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n};\nconst basePacketState = { portId: \"\", channelId: \"\", sequence: 0 };\nexport const PacketState = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(34).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacketState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacketState };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacketState };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseAcknowledgement = {};\nexport const Acknowledgement = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== undefined) {\n            writer.uint32(170).bytes(message.result);\n        }\n        if (message.error !== undefined) {\n            writer.uint32(178).string(message.error);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAcknowledgement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 21:\n                    message.result = reader.bytes();\n                    break;\n                case 22:\n                    message.error = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAcknowledgement };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = bytesFromBase64(object.result);\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = String(object.error);\n        }\n        else {\n            message.error = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result =\n                message.result !== undefined\n                    ? base64FromBytes(message.result)\n                    : undefined);\n        message.error !== undefined && (obj.error = message.error);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAcknowledgement };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = undefined;\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = object.error;\n        }\n        else {\n            message.error = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Header } from \"../../../tendermint/types/types\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Duration } from \"../../../google/protobuf/duration\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.staking.v1beta1\";\n/** BondStatus is the status of a validator. */\nexport var BondStatus;\n(function (BondStatus) {\n    /** BOND_STATUS_UNSPECIFIED - UNSPECIFIED defines an invalid validator status. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = 0] = \"BOND_STATUS_UNSPECIFIED\";\n    /** BOND_STATUS_UNBONDED - UNBONDED defines a validator that is not bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDED\"] = 1] = \"BOND_STATUS_UNBONDED\";\n    /** BOND_STATUS_UNBONDING - UNBONDING defines a validator that is unbonding. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDING\"] = 2] = \"BOND_STATUS_UNBONDING\";\n    /** BOND_STATUS_BONDED - BONDED defines a validator that is bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_BONDED\"] = 3] = \"BOND_STATUS_BONDED\";\n    BondStatus[BondStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BondStatus || (BondStatus = {}));\nexport function bondStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"BOND_STATUS_UNSPECIFIED\":\n            return BondStatus.BOND_STATUS_UNSPECIFIED;\n        case 1:\n        case \"BOND_STATUS_UNBONDED\":\n            return BondStatus.BOND_STATUS_UNBONDED;\n        case 2:\n        case \"BOND_STATUS_UNBONDING\":\n            return BondStatus.BOND_STATUS_UNBONDING;\n        case 3:\n        case \"BOND_STATUS_BONDED\":\n            return BondStatus.BOND_STATUS_BONDED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return BondStatus.UNRECOGNIZED;\n    }\n}\nexport function bondStatusToJSON(object) {\n    switch (object) {\n        case BondStatus.BOND_STATUS_UNSPECIFIED:\n            return \"BOND_STATUS_UNSPECIFIED\";\n        case BondStatus.BOND_STATUS_UNBONDED:\n            return \"BOND_STATUS_UNBONDED\";\n        case BondStatus.BOND_STATUS_UNBONDING:\n            return \"BOND_STATUS_UNBONDING\";\n        case BondStatus.BOND_STATUS_BONDED:\n            return \"BOND_STATUS_BONDED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseHistoricalInfo = {};\nexport const HistoricalInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.valset) {\n            Validator.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.valset.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        if (message.valset) {\n            obj.valset = message.valset.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.valset = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommissionRates = {\n    rate: \"\",\n    maxRate: \"\",\n    maxChangeRate: \"\",\n};\nexport const CommissionRates = {\n    encode(message, writer = Writer.create()) {\n        if (message.rate !== \"\") {\n            writer.uint32(10).string(message.rate);\n        }\n        if (message.maxRate !== \"\") {\n            writer.uint32(18).string(message.maxRate);\n        }\n        if (message.maxChangeRate !== \"\") {\n            writer.uint32(26).string(message.maxChangeRate);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommissionRates };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rate = reader.string();\n                    break;\n                case 2:\n                    message.maxRate = reader.string();\n                    break;\n                case 3:\n                    message.maxChangeRate = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = String(object.rate);\n        }\n        else {\n            message.rate = \"\";\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = String(object.maxRate);\n        }\n        else {\n            message.maxRate = \"\";\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = String(object.maxChangeRate);\n        }\n        else {\n            message.maxChangeRate = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rate !== undefined && (obj.rate = message.rate);\n        message.maxRate !== undefined && (obj.maxRate = message.maxRate);\n        message.maxChangeRate !== undefined &&\n            (obj.maxChangeRate = message.maxChangeRate);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = object.rate;\n        }\n        else {\n            message.rate = \"\";\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = object.maxRate;\n        }\n        else {\n            message.maxRate = \"\";\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = object.maxChangeRate;\n        }\n        else {\n            message.maxChangeRate = \"\";\n        }\n        return message;\n    },\n};\nconst baseCommission = {};\nexport const Commission = {\n    encode(message, writer = Writer.create()) {\n        if (message.commissionRates !== undefined) {\n            CommissionRates.encode(message.commissionRates, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.updateTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.updateTime), writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommission };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commissionRates = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.updateTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined &&\n            object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromJSON(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = fromJsonTimestamp(object.updateTime);\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.commissionRates !== undefined &&\n            (obj.commissionRates = message.commissionRates\n                ? CommissionRates.toJSON(message.commissionRates)\n                : undefined);\n        message.updateTime !== undefined &&\n            (obj.updateTime =\n                message.updateTime !== undefined\n                    ? message.updateTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined &&\n            object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromPartial(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = object.updateTime;\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    },\n};\nconst baseDescription = {\n    moniker: \"\",\n    identity: \"\",\n    website: \"\",\n    securityContact: \"\",\n    details: \"\",\n};\nexport const Description = {\n    encode(message, writer = Writer.create()) {\n        if (message.moniker !== \"\") {\n            writer.uint32(10).string(message.moniker);\n        }\n        if (message.identity !== \"\") {\n            writer.uint32(18).string(message.identity);\n        }\n        if (message.website !== \"\") {\n            writer.uint32(26).string(message.website);\n        }\n        if (message.securityContact !== \"\") {\n            writer.uint32(34).string(message.securityContact);\n        }\n        if (message.details !== \"\") {\n            writer.uint32(42).string(message.details);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDescription };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.moniker = reader.string();\n                    break;\n                case 2:\n                    message.identity = reader.string();\n                    break;\n                case 3:\n                    message.website = reader.string();\n                    break;\n                case 4:\n                    message.securityContact = reader.string();\n                    break;\n                case 5:\n                    message.details = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = String(object.moniker);\n        }\n        else {\n            message.moniker = \"\";\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = \"\";\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = String(object.website);\n        }\n        else {\n            message.website = \"\";\n        }\n        if (object.securityContact !== undefined &&\n            object.securityContact !== null) {\n            message.securityContact = String(object.securityContact);\n        }\n        else {\n            message.securityContact = \"\";\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = String(object.details);\n        }\n        else {\n            message.details = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.moniker !== undefined && (obj.moniker = message.moniker);\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.website !== undefined && (obj.website = message.website);\n        message.securityContact !== undefined &&\n            (obj.securityContact = message.securityContact);\n        message.details !== undefined && (obj.details = message.details);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = object.moniker;\n        }\n        else {\n            message.moniker = \"\";\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = \"\";\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = object.website;\n        }\n        else {\n            message.website = \"\";\n        }\n        if (object.securityContact !== undefined &&\n            object.securityContact !== null) {\n            message.securityContact = object.securityContact;\n        }\n        else {\n            message.securityContact = \"\";\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = object.details;\n        }\n        else {\n            message.details = \"\";\n        }\n        return message;\n    },\n};\nconst baseValidator = {\n    operatorAddress: \"\",\n    jailed: false,\n    status: 0,\n    tokens: \"\",\n    delegatorShares: \"\",\n    unbondingHeight: 0,\n    minSelfDelegation: \"\",\n};\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.operatorAddress !== \"\") {\n            writer.uint32(10).string(message.operatorAddress);\n        }\n        if (message.consensusPubkey !== undefined) {\n            Any.encode(message.consensusPubkey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.jailed === true) {\n            writer.uint32(24).bool(message.jailed);\n        }\n        if (message.status !== 0) {\n            writer.uint32(32).int32(message.status);\n        }\n        if (message.tokens !== \"\") {\n            writer.uint32(42).string(message.tokens);\n        }\n        if (message.delegatorShares !== \"\") {\n            writer.uint32(50).string(message.delegatorShares);\n        }\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.unbondingHeight !== 0) {\n            writer.uint32(64).int64(message.unbondingHeight);\n        }\n        if (message.unbondingTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.unbondingTime), writer.uint32(74).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            Commission.encode(message.commission, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== \"\") {\n            writer.uint32(90).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.operatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.consensusPubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.jailed = reader.bool();\n                    break;\n                case 4:\n                    message.status = reader.int32();\n                    break;\n                case 5:\n                    message.tokens = reader.string();\n                    break;\n                case 6:\n                    message.delegatorShares = reader.string();\n                    break;\n                case 7:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.unbondingHeight = longToNumber(reader.int64());\n                    break;\n                case 9:\n                    message.unbondingTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.commission = Commission.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined &&\n            object.operatorAddress !== null) {\n            message.operatorAddress = String(object.operatorAddress);\n        }\n        else {\n            message.operatorAddress = \"\";\n        }\n        if (object.consensusPubkey !== undefined &&\n            object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromJSON(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = Boolean(object.jailed);\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = bondStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = String(object.tokens);\n        }\n        else {\n            message.tokens = \"\";\n        }\n        if (object.delegatorShares !== undefined &&\n            object.delegatorShares !== null) {\n            message.delegatorShares = String(object.delegatorShares);\n        }\n        else {\n            message.delegatorShares = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined &&\n            object.unbondingHeight !== null) {\n            message.unbondingHeight = Number(object.unbondingHeight);\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = fromJsonTimestamp(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.operatorAddress !== undefined &&\n            (obj.operatorAddress = message.operatorAddress);\n        message.consensusPubkey !== undefined &&\n            (obj.consensusPubkey = message.consensusPubkey\n                ? Any.toJSON(message.consensusPubkey)\n                : undefined);\n        message.jailed !== undefined && (obj.jailed = message.jailed);\n        message.status !== undefined &&\n            (obj.status = bondStatusToJSON(message.status));\n        message.tokens !== undefined && (obj.tokens = message.tokens);\n        message.delegatorShares !== undefined &&\n            (obj.delegatorShares = message.delegatorShares);\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.unbondingHeight !== undefined &&\n            (obj.unbondingHeight = message.unbondingHeight);\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime =\n                message.unbondingTime !== undefined\n                    ? message.unbondingTime.toISOString()\n                    : null);\n        message.commission !== undefined &&\n            (obj.commission = message.commission\n                ? Commission.toJSON(message.commission)\n                : undefined);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined &&\n            object.operatorAddress !== null) {\n            message.operatorAddress = object.operatorAddress;\n        }\n        else {\n            message.operatorAddress = \"\";\n        }\n        if (object.consensusPubkey !== undefined &&\n            object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromPartial(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = object.jailed;\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = object.tokens;\n        }\n        else {\n            message.tokens = \"\";\n        }\n        if (object.delegatorShares !== undefined &&\n            object.delegatorShares !== null) {\n            message.delegatorShares = object.delegatorShares;\n        }\n        else {\n            message.delegatorShares = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined &&\n            object.unbondingHeight !== null) {\n            message.unbondingHeight = object.unbondingHeight;\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = object.unbondingTime;\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n};\nconst baseValAddresses = { addresses: \"\" };\nexport const ValAddresses = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.addresses) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.addresses.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.addresses) {\n            obj.addresses = message.addresses.map((e) => e);\n        }\n        else {\n            obj.addresses = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseDVPair = { delegatorAddress: \"\", validatorAddress: \"\" };\nexport const DVPair = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPair };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseDVPairs = {};\nexport const DVPairs = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pairs) {\n            DVPair.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pairs.push(DVPair.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pairs) {\n            obj.pairs = message.pairs.map((e) => (e ? DVPair.toJSON(e) : undefined));\n        }\n        else {\n            obj.pairs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDVVTriplet = {\n    delegatorAddress: \"\",\n    validatorSrcAddress: \"\",\n    validatorDstAddress: \"\",\n};\nexport const DVVTriplet = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== \"\") {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== \"\") {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplet };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseDVVTriplets = {};\nexport const DVVTriplets = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.triplets) {\n            DVVTriplet.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.triplets.push(DVVTriplet.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.triplets) {\n            obj.triplets = message.triplets.map((e) => e ? DVVTriplet.toJSON(e) : undefined);\n        }\n        else {\n            obj.triplets = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDelegation = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n    shares: \"\",\n};\nexport const Delegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.shares !== \"\") {\n            writer.uint32(26).string(message.shares);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.shares = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = String(object.shares);\n        }\n        else {\n            message.shares = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.shares !== undefined && (obj.shares = message.shares);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = object.shares;\n        }\n        else {\n            message.shares = \"\";\n        }\n        return message;\n    },\n};\nconst baseUnbondingDelegation = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const UnbondingDelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        for (const v of message.entries) {\n            UnbondingDelegationEntry.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.entries.push(UnbondingDelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? UnbondingDelegationEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseUnbondingDelegationEntry = {\n    creationHeight: 0,\n    initialBalance: \"\",\n    balance: \"\",\n};\nexport const UnbondingDelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== \"\") {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.balance !== \"\") {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseUnbondingDelegationEntry,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseUnbondingDelegationEntry,\n        };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        message.initialBalance !== undefined &&\n            (obj.initialBalance = message.initialBalance);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseUnbondingDelegationEntry,\n        };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n};\nconst baseRedelegationEntry = {\n    creationHeight: 0,\n    initialBalance: \"\",\n    sharesDst: \"\",\n};\nexport const RedelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== \"\") {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.sharesDst !== \"\") {\n            writer.uint32(34).string(message.sharesDst);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.sharesDst = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = String(object.sharesDst);\n        }\n        else {\n            message.sharesDst = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        message.initialBalance !== undefined &&\n            (obj.initialBalance = message.initialBalance);\n        message.sharesDst !== undefined && (obj.sharesDst = message.sharesDst);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = object.sharesDst;\n        }\n        else {\n            message.sharesDst = \"\";\n        }\n        return message;\n    },\n};\nconst baseRedelegation = {\n    delegatorAddress: \"\",\n    validatorSrcAddress: \"\",\n    validatorDstAddress: \"\",\n};\nexport const Redelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== \"\") {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== \"\") {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        for (const v of message.entries) {\n            RedelegationEntry.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.entries.push(RedelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? RedelegationEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseParams = {\n    maxValidators: 0,\n    maxEntries: 0,\n    historicalEntries: 0,\n    bondDenom: \"\",\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.unbondingTime !== undefined) {\n            Duration.encode(message.unbondingTime, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxValidators !== 0) {\n            writer.uint32(16).uint32(message.maxValidators);\n        }\n        if (message.maxEntries !== 0) {\n            writer.uint32(24).uint32(message.maxEntries);\n        }\n        if (message.historicalEntries !== 0) {\n            writer.uint32(32).uint32(message.historicalEntries);\n        }\n        if (message.bondDenom !== \"\") {\n            writer.uint32(42).string(message.bondDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.unbondingTime = Duration.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.maxValidators = reader.uint32();\n                    break;\n                case 3:\n                    message.maxEntries = reader.uint32();\n                    break;\n                case 4:\n                    message.historicalEntries = reader.uint32();\n                    break;\n                case 5:\n                    message.bondDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromJSON(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = Number(object.maxValidators);\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = Number(object.maxEntries);\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined &&\n            object.historicalEntries !== null) {\n            message.historicalEntries = Number(object.historicalEntries);\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = String(object.bondDenom);\n        }\n        else {\n            message.bondDenom = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime = message.unbondingTime\n                ? Duration.toJSON(message.unbondingTime)\n                : undefined);\n        message.maxValidators !== undefined &&\n            (obj.maxValidators = message.maxValidators);\n        message.maxEntries !== undefined && (obj.maxEntries = message.maxEntries);\n        message.historicalEntries !== undefined &&\n            (obj.historicalEntries = message.historicalEntries);\n        message.bondDenom !== undefined && (obj.bondDenom = message.bondDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromPartial(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = object.maxValidators;\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = object.maxEntries;\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined &&\n            object.historicalEntries !== null) {\n            message.historicalEntries = object.historicalEntries;\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = object.bondDenom;\n        }\n        else {\n            message.bondDenom = \"\";\n        }\n        return message;\n    },\n};\nconst baseDelegationResponse = {};\nexport const DelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegation !== undefined) {\n            Delegation.encode(message.delegation, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== undefined) {\n            Coin.encode(message.balance, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegation = Delegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balance = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromJSON(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromJSON(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegation !== undefined &&\n            (obj.delegation = message.delegation\n                ? Delegation.toJSON(message.delegation)\n                : undefined);\n        message.balance !== undefined &&\n            (obj.balance = message.balance\n                ? Coin.toJSON(message.balance)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromPartial(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromPartial(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    },\n};\nconst baseRedelegationEntryResponse = { balance: \"\" };\nexport const RedelegationEntryResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegationEntry !== undefined) {\n            RedelegationEntry.encode(message.redelegationEntry, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== \"\") {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRedelegationEntryResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegationEntry = RedelegationEntry.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRedelegationEntryResponse,\n        };\n        if (object.redelegationEntry !== undefined &&\n            object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromJSON(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegationEntry !== undefined &&\n            (obj.redelegationEntry = message.redelegationEntry\n                ? RedelegationEntry.toJSON(message.redelegationEntry)\n                : undefined);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRedelegationEntryResponse,\n        };\n        if (object.redelegationEntry !== undefined &&\n            object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromPartial(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n};\nconst baseRedelegationResponse = {};\nexport const RedelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegation !== undefined) {\n            Redelegation.encode(message.redelegation, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.entries) {\n            RedelegationEntryResponse.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegation = Redelegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.entries.push(RedelegationEntryResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromJSON(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegation !== undefined &&\n            (obj.redelegation = message.redelegation\n                ? Redelegation.toJSON(message.redelegation)\n                : undefined);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? RedelegationEntryResponse.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromPartial(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst basePool = { notBondedTokens: \"\", bondedTokens: \"\" };\nexport const Pool = {\n    encode(message, writer = Writer.create()) {\n        if (message.notBondedTokens !== \"\") {\n            writer.uint32(10).string(message.notBondedTokens);\n        }\n        if (message.bondedTokens !== \"\") {\n            writer.uint32(18).string(message.bondedTokens);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePool };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.notBondedTokens = reader.string();\n                    break;\n                case 2:\n                    message.bondedTokens = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined &&\n            object.notBondedTokens !== null) {\n            message.notBondedTokens = String(object.notBondedTokens);\n        }\n        else {\n            message.notBondedTokens = \"\";\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = String(object.bondedTokens);\n        }\n        else {\n            message.bondedTokens = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.notBondedTokens !== undefined &&\n            (obj.notBondedTokens = message.notBondedTokens);\n        message.bondedTokens !== undefined &&\n            (obj.bondedTokens = message.bondedTokens);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined &&\n            object.notBondedTokens !== null) {\n            message.notBondedTokens = object.notBondedTokens;\n        }\n        else {\n            message.notBondedTokens = \"\";\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = object.bondedTokens;\n        }\n        else {\n            message.bondedTokens = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","<template>\n\t<div v-if=\"initialized\">\n\t\t<SpWallet ref=\"wallet\" v-on:dropdown-opened=\"$refs.menu.closeDropdown()\" />\n\t\t<SpLayout>\n\t\t\t<template v-slot:sidebar>\n\t\t\t\t<Sidebar />\n\t\t\t</template>\n\t\t\t<template v-slot:content>\n\t\t\t\t<router-view />\n\t\t\t</template>\n\t\t</SpLayout>\n\t</div>\n</template>\n\n<style>\nbody {\n\tmargin: 0;\n}\n</style>\n\n<script>\nimport './scss/app.scss'\nimport '@starport/vue/lib/starport-vue.css'\nimport Sidebar from './components/Sidebar'\n\nexport default {\n\tcomponents: {\n\t\tSidebar\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tinitialized: false\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule([ 'common', 'wallet'])\n\t\t}\n\t},\n\tasync created() {\n\t\tawait this.$store.dispatch('common/env/init')\n\t\tthis.initialized = true\n\t},\n\terrorCaptured(err) {\n\t\tconsole.log(err)\n\t\treturn false\n\t}\n}\n</script>\n","<template>\n  <SpSidebar\n\t\t\t\t\tv-on:sidebar-open=\"sidebarOpen = true\"\n\t\t\t\t\tv-on:sidebar-close=\"sidebarOpen = false\"\n\t\t\t\t>\n\t\t\t\t\t<template v-slot:default>\n\t\t\t\t\t\t<SpLinkIcon link=\"/\" text=\"Dashboard\" icon=\"Dashboard\" />\n\t\t\t\t\t\t<SpLinkIcon link=\"/types\" text=\"Custom Type\" icon=\"Form\" />\n\t\t\t\t\t\t<div class=\"sp-dash\"></div>\n\t\t\t\t\t\t<SpLinkIcon href=\"https://github.com/tendermint/starport\" target=\"_blank\" text=\"Documentation\" icon=\"Docs\" />\n\t\t\t\t\t</template>\n\t\t\t\t\t<template v-slot:footer>\n\t\t\t\t\t\t<SpStatusAPI :showText=\"sidebarOpen\" />\n\t\t\t\t\t\t<SpStatusRPC :showText=\"sidebarOpen\" />\n\t\t\t\t\t\t<SpStatusWS :showText=\"sidebarOpen\" />\n\t\t\t\t\t\t<div class=\"sp-text\">Build: v0.3.8</div>\n\t\t\t\t\t</template>\n\t\t\t\t</SpSidebar>\n</template>\n\n<script>\nexport default {\n  name: 'Sidebar',\n\tdata() {\n\t\treturn {\n\t\t\tsidebarOpen: true\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule([ 'common', 'wallet'])\n\t\t}\n\t},\n}\n</script>\n","import { render } from \"./Sidebar.vue?vue&type=template&id=21017ee9\"\nimport script from \"./Sidebar.vue?vue&type=script&lang=js\"\nexport * from \"./Sidebar.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { render } from \"./App.vue?vue&type=template&id=5695b462\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=5695b462&lang=css\"\nscript.render = render\n\nexport default script","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/applications/transfer/v1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTraces\n         * @summary DenomTraces queries all denomination traces.\n         * @request GET:/ibc/applications/transfer/v1beta1/denom_traces\n         */\n        this.queryDenomTraces = (query, params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/denom_traces`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTrace\n         * @summary DenomTrace queries a denomination trace information.\n         * @request GET:/ibc/applications/transfer/v1beta1/denom_traces/{hash}\n         */\n        this.queryDenomTrace = (hash, params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/denom_traces/${hash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the ibc-transfer module.\n         * @request GET:/ibc/applications/transfer/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgTransfer } from \"./types/ibc/applications/transfer/v1/tx\";\nconst types = [\n    [\"/ibc.applications.transfer.v1.MsgTransfer\", MsgTransfer],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgTransfer: (data) => ({ typeUrl: \"/ibc.applications.transfer.v1.MsgTransfer\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { FungibleTokenPacketData } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { DenomTrace } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { Params } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        DenomTrace: {},\n        DenomTraces: {},\n        Params: {},\n        _Structure: {\n            FungibleTokenPacketData: getStructure(FungibleTokenPacketData.fromPartial({})),\n            DenomTrace: getStructure(DenomTrace.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getDenomTrace: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTrace[JSON.stringify(params)] ?? {};\n        },\n        getDenomTraces: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTraces[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryDenomTrace({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDenomTrace(key.hash, query)).data : (await (await initQueryClient(rootGetters)).queryDenomTrace(key.hash)).data;\n                commit('QUERY', { query: 'DenomTrace', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTrace', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTrace']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDenomTrace', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDenomTraces({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDenomTraces(query)).data : (await (await initQueryClient(rootGetters)).queryDenomTraces()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDenomTraces({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DenomTraces', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTraces', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTraces']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDenomTraces', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgTransfer({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTransfer(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgTransfer({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTransfer(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/base/abci/v1beta1/abci.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nconst types = [];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\nimport { TxResponse } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { ABCIMessageLog } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { StringEvent } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { Attribute } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { GasInfo } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { Result } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { SimulationResponse } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { MsgData } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { TxMsgData } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { SearchTxsResult } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            TxResponse: getStructure(TxResponse.fromPartial({})),\n            ABCIMessageLog: getStructure(ABCIMessageLog.fromPartial({})),\n            StringEvent: getStructure(StringEvent.fromPartial({})),\n            Attribute: getStructure(Attribute.fromPartial({})),\n            GasInfo: getStructure(GasInfo.fromPartial({})),\n            Result: getStructure(Result.fromPartial({})),\n            SimulationResponse: getStructure(SimulationResponse.fromPartial({})),\n            MsgData: getStructure(MsgData.fromPartial({})),\n            TxMsgData: getStructure(TxMsgData.fromPartial({})),\n            SearchTxsResult: getStructure(SearchTxsResult.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/slashing/v1beta1/slashing.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of slashing module\n         * @request GET:/cosmos/slashing/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfos\n         * @summary SigningInfos queries signing info of all validators\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos\n         */\n        this.querySigningInfos = (query, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfo\n         * @summary SigningInfo queries the signing info of given cons address\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos/{consAddress}\n         */\n        this.querySigningInfo = (consAddress, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos/${consAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.slashing.v1beta1\";\nconst baseMsgUnjail = { validatorAddr: \"\" };\nexport const MsgUnjail = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddr !== \"\") {\n            writer.uint32(10).string(message.validatorAddr);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjail };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddr = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = String(object.validatorAddr);\n        }\n        else {\n            message.validatorAddr = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddr !== undefined &&\n            (obj.validatorAddr = message.validatorAddr);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = object.validatorAddr;\n        }\n        else {\n            message.validatorAddr = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUnjailResponse = {};\nexport const MsgUnjailResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjailResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Unjail(request) {\n        const data = MsgUnjail.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.slashing.v1beta1.Msg\", \"Unjail\", data);\n        return promise.then((data) => MsgUnjailResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUnjail } from \"./types/cosmos/slashing/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.slashing.v1beta1.MsgUnjail\", MsgUnjail],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgUnjail: (data) => ({ typeUrl: \"/cosmos.slashing.v1beta1.MsgUnjail\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { ValidatorSigningInfo } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nimport { Params } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nimport { SigningInfo } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { ValidatorMissedBlocks } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { MissedBlock } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        SigningInfo: {},\n        SigningInfos: {},\n        _Structure: {\n            ValidatorSigningInfo: getStructure(ValidatorSigningInfo.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            SigningInfo: getStructure(SigningInfo.fromPartial({})),\n            ValidatorMissedBlocks: getStructure(ValidatorMissedBlocks.fromPartial({})),\n            MissedBlock: getStructure(MissedBlock.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfo: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfo[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfos: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfos[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QuerySigningInfo({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).querySigningInfo(key.cons_address, query)).data : (await (await initQueryClient(rootGetters)).querySigningInfo(key.cons_address)).data;\n                commit('QUERY', { query: 'SigningInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QuerySigningInfo', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QuerySigningInfos({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).querySigningInfos(query)).data : (await (await initQueryClient(rootGetters)).querySigningInfos()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).querySigningInfos({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'SigningInfos', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfos', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfos']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QuerySigningInfos', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgUnjail({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUnjail(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgUnjail({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUnjail(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/client/v1/client.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientParams\n         * @summary ClientParams queries all parameters of the ibc client.\n         * @request GET:/ibc/client/v1beta1/params\n         */\n        this.queryClientParams = (params = {}) => this.request({\n            path: `/ibc/client/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientStates\n         * @summary ClientStates queries all the IBC light clients of a chain.\n         * @request GET:/ibc/core/client/v1beta1/client_states\n         */\n        this.queryClientStates = (query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/client_states`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientState\n         * @summary ClientState queries an IBC light client.\n         * @request GET:/ibc/core/client/v1beta1/client_states/{clientId}\n         */\n        this.queryClientState = (clientId, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/client_states/${clientId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConsensusStates\n       * @summary ConsensusStates queries all the consensus state associated with a given\n      client.\n       * @request GET:/ibc/core/client/v1beta1/consensus_states/{clientId}\n       */\n        this.queryConsensusStates = (clientId, query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/consensus_states/${clientId}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConsensusState\n       * @summary ConsensusState queries a consensus state associated with a client state at\n      a given height.\n       * @request GET:/ibc/core/client/v1beta1/consensus_states/{clientId}/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryConsensusState = (clientId, revisionNumber, revisionHeight, query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/consensus_states/${clientId}/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUpgradeClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgUpdateClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgCreateClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgSubmitMisbehaviour } from \"./types/ibc/core/client/v1/tx\";\nconst types = [\n    [\"/ibc.core.client.v1.MsgUpgradeClient\", MsgUpgradeClient],\n    [\"/ibc.core.client.v1.MsgUpdateClient\", MsgUpdateClient],\n    [\"/ibc.core.client.v1.MsgCreateClient\", MsgCreateClient],\n    [\"/ibc.core.client.v1.MsgSubmitMisbehaviour\", MsgSubmitMisbehaviour],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgUpgradeClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgUpgradeClient\", value: data }),\n        msgUpdateClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgUpdateClient\", value: data }),\n        msgCreateClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgCreateClient\", value: data }),\n        msgSubmitMisbehaviour: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgSubmitMisbehaviour\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { IdentifiedClientState } from \"./module/types/ibc/core/client/v1/client\";\nimport { ConsensusStateWithHeight } from \"./module/types/ibc/core/client/v1/client\";\nimport { ClientConsensusStates } from \"./module/types/ibc/core/client/v1/client\";\nimport { ClientUpdateProposal } from \"./module/types/ibc/core/client/v1/client\";\nimport { Height } from \"./module/types/ibc/core/client/v1/client\";\nimport { Params } from \"./module/types/ibc/core/client/v1/client\";\nimport { GenesisMetadata } from \"./module/types/ibc/core/client/v1/genesis\";\nimport { IdentifiedGenesisMetadata } from \"./module/types/ibc/core/client/v1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        ClientState: {},\n        ClientStates: {},\n        ConsensusState: {},\n        ConsensusStates: {},\n        ClientParams: {},\n        _Structure: {\n            IdentifiedClientState: getStructure(IdentifiedClientState.fromPartial({})),\n            ConsensusStateWithHeight: getStructure(ConsensusStateWithHeight.fromPartial({})),\n            ClientConsensusStates: getStructure(ClientConsensusStates.fromPartial({})),\n            ClientUpdateProposal: getStructure(ClientUpdateProposal.fromPartial({})),\n            Height: getStructure(Height.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            GenesisMetadata: getStructure(GenesisMetadata.fromPartial({})),\n            IdentifiedGenesisMetadata: getStructure(IdentifiedGenesisMetadata.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getClientState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientState[JSON.stringify(params)] ?? {};\n        },\n        getClientStates: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientStates[JSON.stringify(params)] ?? {};\n        },\n        getConsensusState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getConsensusStates: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConsensusStates[JSON.stringify(params)] ?? {};\n        },\n        getClientParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientParams[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryClientState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClientState(key.client_id, query)).data : (await (await initQueryClient(rootGetters)).queryClientState(key.client_id)).data;\n                commit('QUERY', { query: 'ClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClientState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryClientStates({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClientStates(query)).data : (await (await initQueryClient(rootGetters)).queryClientStates()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryClientStates({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ClientStates', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientStates', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientStates']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClientStates', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConsensusState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConsensusState(key.client_id, key.revision_number, key.revision_height, query)).data : (await (await initQueryClient(rootGetters)).queryConsensusState(key.client_id, key.revision_number, key.revision_height)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryConsensusState(key.client_id, key.revision_number, key.revision_height, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConsensusState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConsensusStates({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConsensusStates(key.client_id, query)).data : (await (await initQueryClient(rootGetters)).queryConsensusStates(key.client_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryConsensusStates(key.client_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ConsensusStates', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConsensusStates', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConsensusStates']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConsensusStates', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryClientParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClientParams(query)).data : (await (await initQueryClient(rootGetters)).queryClientParams()).data;\n                commit('QUERY', { query: 'ClientParams', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClientParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgUpgradeClient({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpgradeClient(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUpdateClient({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateClient(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreateClient({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateClient(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgSubmitMisbehaviour({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitMisbehaviour(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgUpgradeClient({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpgradeClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUpdateClient({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreateClient({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgSubmitMisbehaviour({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitMisbehaviour(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/base/v1beta1/coin.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nconst types = [];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","import { txClient, queryClient } from './module';\nimport { Coin } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { DecCoin } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { IntProto } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { DecProto } from \"./module/types/cosmos/base/v1beta1/coin\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            Coin: getStructure(Coin.fromPartial({})),\n            DecCoin: getStructure(DecCoin.fromPartial({})),\n            IntProto: getStructure(IntProto.fromPartial({})),\n            DecProto: getStructure(DecProto.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/distribution/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCommunityPool\n         * @summary CommunityPool queries the community pool coins.\n         * @request GET:/cosmos/distribution/v1beta1/community_pool\n         */\n        this.queryCommunityPool = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/community_pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegationTotalRewards\n       * @summary DelegationTotalRewards queries the total rewards accrued by a each\n      validator.\n       * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards\n       */\n        this.queryDelegationTotalRewards = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegationRewards\n         * @summary DelegationRewards queries the total rewards accrued by a delegation.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards/{validatorAddress}\n         */\n        this.queryDelegationRewards = (delegatorAddress, validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards/${validatorAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorValidators\n         * @summary DelegatorValidators queries the validators of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/validators\n         */\n        this.queryDelegatorValidators = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/validators`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorWithdrawAddress\n         * @summary DelegatorWithdrawAddress queries withdraw address of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/withdraw_address\n         */\n        this.queryDelegatorWithdrawAddress = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/withdraw_address`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries params of the distribution module.\n         * @request GET:/cosmos/distribution/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorCommission\n         * @summary ValidatorCommission queries accumulated commission for a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/commission\n         */\n        this.queryValidatorCommission = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/commission`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorOutstandingRewards\n         * @summary ValidatorOutstandingRewards queries rewards of a validator address.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/outstanding_rewards\n         */\n        this.queryValidatorOutstandingRewards = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/outstanding_rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorSlashes\n         * @summary ValidatorSlashes queries slash events of a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/slashes\n         */\n        this.queryValidatorSlashes = (validatorAddress, query, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/slashes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.distribution.v1beta1\";\nconst baseMsgSetWithdrawAddress = {\n    delegatorAddress: \"\",\n    withdrawAddress: \"\",\n};\nexport const MsgSetWithdrawAddress = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== \"\") {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetWithdrawAddress };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined &&\n            (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgSetWithdrawAddressResponse = {};\nexport const MsgSetWithdrawAddressResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgWithdrawDelegatorReward = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const MsgWithdrawDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawDelegatorReward,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgWithdrawDelegatorReward,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgWithdrawDelegatorReward,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgWithdrawDelegatorRewardResponse = {};\nexport const MsgWithdrawDelegatorRewardResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgWithdrawValidatorCommission = { validatorAddress: \"\" };\nexport const MsgWithdrawValidatorCommission = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawValidatorCommission,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommission,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommission,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgWithdrawValidatorCommissionResponse = {};\nexport const MsgWithdrawValidatorCommissionResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgFundCommunityPool = { depositor: \"\" };\nexport const MsgFundCommunityPool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.depositor !== \"\") {\n            writer.uint32(18).string(message.depositor);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgFundCommunityPoolResponse = {};\nexport const MsgFundCommunityPoolResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgFundCommunityPoolResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgFundCommunityPoolResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgFundCommunityPoolResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SetWithdrawAddress(request) {\n        const data = MsgSetWithdrawAddress.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"SetWithdrawAddress\", data);\n        return promise.then((data) => MsgSetWithdrawAddressResponse.decode(new Reader(data)));\n    }\n    WithdrawDelegatorReward(request) {\n        const data = MsgWithdrawDelegatorReward.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"WithdrawDelegatorReward\", data);\n        return promise.then((data) => MsgWithdrawDelegatorRewardResponse.decode(new Reader(data)));\n    }\n    WithdrawValidatorCommission(request) {\n        const data = MsgWithdrawValidatorCommission.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"WithdrawValidatorCommission\", data);\n        return promise.then((data) => MsgWithdrawValidatorCommissionResponse.decode(new Reader(data)));\n    }\n    FundCommunityPool(request) {\n        const data = MsgFundCommunityPool.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"FundCommunityPool\", data);\n        return promise.then((data) => MsgFundCommunityPoolResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgFundCommunityPool } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgWithdrawValidatorCommission } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgWithdrawDelegatorReward } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgSetWithdrawAddress } from \"./types/cosmos/distribution/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", MsgFundCommunityPool],\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", MsgWithdrawValidatorCommission],\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", MsgWithdrawDelegatorReward],\n    [\"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", MsgSetWithdrawAddress],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgFundCommunityPool: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", value: data }),\n        msgWithdrawValidatorCommission: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", value: data }),\n        msgWithdrawDelegatorReward: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", value: data }),\n        msgSetWithdrawAddress: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorHistoricalRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorCurrentRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorAccumulatedCommission } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorOutstandingRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvent } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvents } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { FeePool } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposal } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorStartingInfo } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegationDelegatorReward } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposalWithDeposit } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorWithdrawInfo } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorOutstandingRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorAccumulatedCommissionRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorHistoricalRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorCurrentRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { DelegatorStartingInfoRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorSlashEventRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        ValidatorOutstandingRewards: {},\n        ValidatorCommission: {},\n        ValidatorSlashes: {},\n        DelegationRewards: {},\n        DelegationTotalRewards: {},\n        DelegatorValidators: {},\n        DelegatorWithdrawAddress: {},\n        CommunityPool: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            ValidatorHistoricalRewards: getStructure(ValidatorHistoricalRewards.fromPartial({})),\n            ValidatorCurrentRewards: getStructure(ValidatorCurrentRewards.fromPartial({})),\n            ValidatorAccumulatedCommission: getStructure(ValidatorAccumulatedCommission.fromPartial({})),\n            ValidatorOutstandingRewards: getStructure(ValidatorOutstandingRewards.fromPartial({})),\n            ValidatorSlashEvent: getStructure(ValidatorSlashEvent.fromPartial({})),\n            ValidatorSlashEvents: getStructure(ValidatorSlashEvents.fromPartial({})),\n            FeePool: getStructure(FeePool.fromPartial({})),\n            CommunityPoolSpendProposal: getStructure(CommunityPoolSpendProposal.fromPartial({})),\n            DelegatorStartingInfo: getStructure(DelegatorStartingInfo.fromPartial({})),\n            DelegationDelegatorReward: getStructure(DelegationDelegatorReward.fromPartial({})),\n            CommunityPoolSpendProposalWithDeposit: getStructure(CommunityPoolSpendProposalWithDeposit.fromPartial({})),\n            DelegatorWithdrawInfo: getStructure(DelegatorWithdrawInfo.fromPartial({})),\n            ValidatorOutstandingRewardsRecord: getStructure(ValidatorOutstandingRewardsRecord.fromPartial({})),\n            ValidatorAccumulatedCommissionRecord: getStructure(ValidatorAccumulatedCommissionRecord.fromPartial({})),\n            ValidatorHistoricalRewardsRecord: getStructure(ValidatorHistoricalRewardsRecord.fromPartial({})),\n            ValidatorCurrentRewardsRecord: getStructure(ValidatorCurrentRewardsRecord.fromPartial({})),\n            DelegatorStartingInfoRecord: getStructure(DelegatorStartingInfoRecord.fromPartial({})),\n            ValidatorSlashEventRecord: getStructure(ValidatorSlashEventRecord.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getValidatorOutstandingRewards: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorOutstandingRewards[JSON.stringify(params)] ?? {};\n        },\n        getValidatorCommission: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorCommission[JSON.stringify(params)] ?? {};\n        },\n        getValidatorSlashes: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorSlashes[JSON.stringify(params)] ?? {};\n        },\n        getDelegationRewards: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegationTotalRewards: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationTotalRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorWithdrawAddress: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorWithdrawAddress[JSON.stringify(params)] ?? {};\n        },\n        getCommunityPool: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.CommunityPool[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorOutstandingRewards({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorOutstandingRewards(key.validator_address, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorOutstandingRewards(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorOutstandingRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorOutstandingRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorOutstandingRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorOutstandingRewards', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorCommission({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorCommission(key.validator_address, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorCommission(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorCommission', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorCommission', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorCommission']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorCommission', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorSlashes({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorSlashes(key.validator_address, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorSlashes(key.validator_address)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryValidatorSlashes(key.validator_address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ValidatorSlashes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorSlashes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorSlashes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorSlashes', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegationRewards({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegationRewards(key.delegator_address, key.validator_address, query)).data : (await (await initQueryClient(rootGetters)).queryDelegationRewards(key.delegator_address, key.validator_address)).data;\n                commit('QUERY', { query: 'DelegationRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegationRewards', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegationTotalRewards({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegationTotalRewards(key.delegator_address, query)).data : (await (await initQueryClient(rootGetters)).queryDelegationTotalRewards(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegationTotalRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationTotalRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationTotalRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegationTotalRewards', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_address, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorWithdrawAddress({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorWithdrawAddress(key.delegator_address, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorWithdrawAddress(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorWithdrawAddress', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorWithdrawAddress', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorWithdrawAddress']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorWithdrawAddress', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryCommunityPool({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryCommunityPool(query)).data : (await (await initQueryClient(rootGetters)).queryCommunityPool()).data;\n                commit('QUERY', { query: 'CommunityPool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCommunityPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCommunityPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryCommunityPool', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgFundCommunityPool({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgFundCommunityPool(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgWithdrawValidatorCommission({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgWithdrawValidatorCommission(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgWithdrawDelegatorReward({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgWithdrawDelegatorReward(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgSetWithdrawAddress({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSetWithdrawAddress(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgFundCommunityPool({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgFundCommunityPool(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgWithdrawValidatorCommission({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgWithdrawValidatorCommission(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgWithdrawDelegatorReward({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgWithdrawDelegatorReward(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgSetWithdrawAddress({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSetWithdrawAddress(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/crisis/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.crisis.v1beta1\";\nconst baseMsgVerifyInvariant = {\n    sender: \"\",\n    invariantModuleName: \"\",\n    invariantRoute: \"\",\n};\nexport const MsgVerifyInvariant = {\n    encode(message, writer = Writer.create()) {\n        if (message.sender !== \"\") {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.invariantModuleName !== \"\") {\n            writer.uint32(18).string(message.invariantModuleName);\n        }\n        if (message.invariantRoute !== \"\") {\n            writer.uint32(26).string(message.invariantRoute);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVerifyInvariant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 2:\n                    message.invariantModuleName = reader.string();\n                    break;\n                case 3:\n                    message.invariantRoute = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.invariantModuleName !== undefined &&\n            object.invariantModuleName !== null) {\n            message.invariantModuleName = String(object.invariantModuleName);\n        }\n        else {\n            message.invariantModuleName = \"\";\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = String(object.invariantRoute);\n        }\n        else {\n            message.invariantRoute = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.invariantModuleName !== undefined &&\n            (obj.invariantModuleName = message.invariantModuleName);\n        message.invariantRoute !== undefined &&\n            (obj.invariantRoute = message.invariantRoute);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.invariantModuleName !== undefined &&\n            object.invariantModuleName !== null) {\n            message.invariantModuleName = object.invariantModuleName;\n        }\n        else {\n            message.invariantModuleName = \"\";\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = object.invariantRoute;\n        }\n        else {\n            message.invariantRoute = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgVerifyInvariantResponse = {};\nexport const MsgVerifyInvariantResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgVerifyInvariantResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgVerifyInvariantResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgVerifyInvariantResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    VerifyInvariant(request) {\n        const data = MsgVerifyInvariant.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.crisis.v1beta1.Msg\", \"VerifyInvariant\", data);\n        return promise.then((data) => MsgVerifyInvariantResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgVerifyInvariant } from \"./types/cosmos/crisis/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", MsgVerifyInvariant],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgVerifyInvariant: (data) => ({ typeUrl: \"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {},\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async sendMsgVerifyInvariant({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgVerifyInvariant(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgVerifyInvariant({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgVerifyInvariant(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* ProposalStatus enumerates the valid statuses of a proposal.\n\n - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\nperiod.\n - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\nperiod.\n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\npassed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\nbeen rejected.\n - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\nfailed.\n*/\nexport var V1Beta1ProposalStatus;\n(function (V1Beta1ProposalStatus) {\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = \"PROPOSAL_STATUS_PASSED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = \"PROPOSAL_STATUS_REJECTED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = \"PROPOSAL_STATUS_FAILED\";\n})(V1Beta1ProposalStatus || (V1Beta1ProposalStatus = {}));\n/**\n* VoteOption enumerates the valid vote options for a given governance proposal.\n\n - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.\n - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.\n - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.\n - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.\n - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.\n*/\nexport var V1Beta1VoteOption;\n(function (V1Beta1VoteOption) {\n    V1Beta1VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = \"VOTE_OPTION_UNSPECIFIED\";\n    V1Beta1VoteOption[\"VOTE_OPTION_YES\"] = \"VOTE_OPTION_YES\";\n    V1Beta1VoteOption[\"VOTE_OPTION_ABSTAIN\"] = \"VOTE_OPTION_ABSTAIN\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO\"] = \"VOTE_OPTION_NO\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = \"VOTE_OPTION_NO_WITH_VETO\";\n})(V1Beta1VoteOption || (V1Beta1VoteOption = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/gov/v1beta1/gov.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the gov module.\n         * @request GET:/cosmos/gov/v1beta1/params/{paramsType}\n         */\n        this.queryParams = (paramsType, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/params/${paramsType}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposals\n         * @summary Proposals queries all proposals based on given status.\n         * @request GET:/cosmos/gov/v1beta1/proposals\n         */\n        this.queryProposals = (query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposal\n         * @summary Proposal queries proposal details based on ProposalID.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}\n         */\n        this.queryProposal = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposits\n         * @summary Deposits queries all deposits of a single proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits\n         */\n        this.queryDeposits = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposit\n         * @summary Deposit queries single deposit information based proposalID, depositAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits/{depositor}\n         */\n        this.queryDeposit = (proposalId, depositor, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits/${depositor}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTallyResult\n         * @summary TallyResult queries the tally of a proposal vote.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/tally\n         */\n        this.queryTallyResult = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/tally`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVotes\n         * @summary Votes queries votes of a given proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes\n         */\n        this.queryVotes = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVote\n         * @summary Vote queries voted information based on proposalID, voterAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes/{voter}\n         */\n        this.queryVote = (proposalId, voter, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes/${voter}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSubmitProposal } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgDeposit } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgVote } from \"./types/cosmos/gov/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.gov.v1beta1.MsgSubmitProposal\", MsgSubmitProposal],\n    [\"/cosmos.gov.v1beta1.MsgDeposit\", MsgDeposit],\n    [\"/cosmos.gov.v1beta1.MsgVote\", MsgVote],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgSubmitProposal: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgSubmitProposal\", value: data }),\n        msgDeposit: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgDeposit\", value: data }),\n        msgVote: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgVote\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { TextProposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Deposit } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Proposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyResult } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Vote } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { DepositParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { VotingParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Proposal: {},\n        Proposals: {},\n        Vote: {},\n        Votes: {},\n        Params: {},\n        Deposit: {},\n        Deposits: {},\n        TallyResult: {},\n        _Structure: {\n            TextProposal: getStructure(TextProposal.fromPartial({})),\n            Deposit: getStructure(Deposit.fromPartial({})),\n            Proposal: getStructure(Proposal.fromPartial({})),\n            TallyResult: getStructure(TallyResult.fromPartial({})),\n            Vote: getStructure(Vote.fromPartial({})),\n            DepositParams: getStructure(DepositParams.fromPartial({})),\n            VotingParams: getStructure(VotingParams.fromPartial({})),\n            TallyParams: getStructure(TallyParams.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getProposal: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposal[JSON.stringify(params)] ?? {};\n        },\n        getProposals: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposals[JSON.stringify(params)] ?? {};\n        },\n        getVote: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Vote[JSON.stringify(params)] ?? {};\n        },\n        getVotes: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Votes[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDeposit: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposit[JSON.stringify(params)] ?? {};\n        },\n        getDeposits: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposits[JSON.stringify(params)] ?? {};\n        },\n        getTallyResult: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TallyResult[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryProposal({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryProposal(key.proposal_id, query)).data : (await (await initQueryClient(rootGetters)).queryProposal(key.proposal_id)).data;\n                commit('QUERY', { query: 'Proposal', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposal', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposal']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryProposal', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryProposals({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryProposals(query)).data : (await (await initQueryClient(rootGetters)).queryProposals()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryProposals({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Proposals', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposals', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposals']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryProposals', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryVote({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryVote(key.proposal_id, key.voter, query)).data : (await (await initQueryClient(rootGetters)).queryVote(key.proposal_id, key.voter)).data;\n                commit('QUERY', { query: 'Vote', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVote', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVote']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryVote', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryVotes({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryVotes(key.proposal_id, query)).data : (await (await initQueryClient(rootGetters)).queryVotes(key.proposal_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryVotes(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Votes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVotes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVotes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryVotes', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(key.params_type, query)).data : (await (await initQueryClient(rootGetters)).queryParams(key.params_type)).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDeposit({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDeposit(key.proposal_id, key.depositor, query)).data : (await (await initQueryClient(rootGetters)).queryDeposit(key.proposal_id, key.depositor)).data;\n                commit('QUERY', { query: 'Deposit', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposit', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposit']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDeposit', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDeposits({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDeposits(key.proposal_id, query)).data : (await (await initQueryClient(rootGetters)).queryDeposits(key.proposal_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDeposits(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Deposits', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposits', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposits']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDeposits', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryTallyResult({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryTallyResult(key.proposal_id, query)).data : (await (await initQueryClient(rootGetters)).queryTallyResult(key.proposal_id)).data;\n                commit('QUERY', { query: 'TallyResult', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTallyResult', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTallyResult']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryTallyResult', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgSubmitProposal({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitProposal(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgDeposit({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeposit(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgVote({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgVote(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgSubmitProposal({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitProposal(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgDeposit({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeposit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgVote({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgVote(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering\n - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in\nwhich they were sent.\n - ORDER_ORDERED: packets are delivered exactly in the order which they were sent\n*/\nexport var V1Order;\n(function (V1Order) {\n    V1Order[\"ORDER_NONE_UNSPECIFIED\"] = \"ORDER_NONE_UNSPECIFIED\";\n    V1Order[\"ORDER_UNORDERED\"] = \"ORDER_UNORDERED\";\n    V1Order[\"ORDER_ORDERED\"] = \"ORDER_ORDERED\";\n})(V1Order || (V1Order = {}));\n/**\n* State defines if a channel is in one of the following states:\nCLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A channel has just started the opening handshake.\n - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.\n - STATE_OPEN: A channel has completed the handshake. Open channels are\nready to send and receive packets.\n - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive\npackets.\n*/\nexport var V1State;\n(function (V1State) {\n    V1State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    V1State[\"STATE_INIT\"] = \"STATE_INIT\";\n    V1State[\"STATE_TRYOPEN\"] = \"STATE_TRYOPEN\";\n    V1State[\"STATE_OPEN\"] = \"STATE_OPEN\";\n    V1State[\"STATE_CLOSED\"] = \"STATE_CLOSED\";\n})(V1State || (V1State = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/channel/v1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryChannels\n         * @summary Channels queries all the IBC channels of a chain.\n         * @request GET:/ibc/core/channel/v1beta1/channels\n         */\n        this.queryChannels = (query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryChannel\n         * @summary Channel queries an IBC Channel.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}\n         */\n        this.queryChannel = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryChannelClientState\n       * @summary ChannelClientState queries for the client state for the channel associated\n      with the provided channel identifiers.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/client_state\n       */\n        this.queryChannelClientState = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/client_state`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryChannelConsensusState\n       * @summary ChannelConsensusState queries for the consensus state for the channel\n      associated with the provided channel identifiers.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/consensus_state/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryChannelConsensusState = (channelId, portId, revisionNumber, revisionHeight, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/consensus_state/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryNextSequenceReceive\n         * @summary NextSequenceReceive returns the next receive sequence for a given channel.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/next_sequence\n         */\n        this.queryNextSequenceReceive = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/next_sequence`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryPacketAcknowledgements\n       * @summary PacketAcknowledgements returns all the packet acknowledgements associated\n      with a channel.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_acknowledgements\n       */\n        this.queryPacketAcknowledgements = (channelId, portId, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_acknowledgements`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketAcknowledgement\n         * @summary PacketAcknowledgement queries a stored packet acknowledgement hash.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_acks/{sequence}\n         */\n        this.queryPacketAcknowledgement = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_acks/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryPacketCommitments\n       * @summary PacketCommitments returns all the packet commitments hashes associated\n      with a channel.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments\n       */\n        this.queryPacketCommitments = (channelId, portId, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnreceivedAcks\n       * @summary UnreceivedAcks returns all the unreceived IBC acknowledgements associated with a\n      channel and sequences.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{packetAckSequences}/unreceived_acks\n       */\n        this.queryUnreceivedAcks = (channelId, portId, packetAckSequences, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${packetAckSequences}/unreceived_acks`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnreceivedPackets\n       * @summary UnreceivedPackets returns all the unreceived IBC packets associated with a\n      channel and sequences.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{packetCommitmentSequences}/unreceived_packets\n       */\n        this.queryUnreceivedPackets = (channelId, portId, packetCommitmentSequences, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${packetCommitmentSequences}/unreceived_packets`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketCommitment\n         * @summary PacketCommitment queries a stored packet commitment hash.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{sequence}\n         */\n        this.queryPacketCommitment = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketReceipt\n         * @summary PacketReceipt queries if a given packet sequence has been received on the queried chain\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_receipts/{sequence}\n         */\n        this.queryPacketReceipt = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_receipts/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionChannels\n       * @summary ConnectionChannels queries all the channels associated with a connection\n      end.\n       * @request GET:/ibc/core/channel/v1beta1/connections/{connection}/channels\n       */\n        this.queryConnectionChannels = (connection, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/connections/${connection}/channels`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgChannelOpenInit } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgTimeout } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenAck } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelCloseInit } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelCloseConfirm } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenConfirm } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenTry } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgRecvPacket } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgTimeoutOnClose } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgAcknowledgement } from \"./types/ibc/core/channel/v1/tx\";\nconst types = [\n    [\"/ibc.core.channel.v1.MsgChannelOpenInit\", MsgChannelOpenInit],\n    [\"/ibc.core.channel.v1.MsgTimeout\", MsgTimeout],\n    [\"/ibc.core.channel.v1.MsgChannelOpenAck\", MsgChannelOpenAck],\n    [\"/ibc.core.channel.v1.MsgChannelCloseInit\", MsgChannelCloseInit],\n    [\"/ibc.core.channel.v1.MsgChannelCloseConfirm\", MsgChannelCloseConfirm],\n    [\"/ibc.core.channel.v1.MsgChannelOpenConfirm\", MsgChannelOpenConfirm],\n    [\"/ibc.core.channel.v1.MsgChannelOpenTry\", MsgChannelOpenTry],\n    [\"/ibc.core.channel.v1.MsgRecvPacket\", MsgRecvPacket],\n    [\"/ibc.core.channel.v1.MsgTimeoutOnClose\", MsgTimeoutOnClose],\n    [\"/ibc.core.channel.v1.MsgAcknowledgement\", MsgAcknowledgement],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgChannelOpenInit: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenInit\", value: data }),\n        msgTimeout: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgTimeout\", value: data }),\n        msgChannelOpenAck: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenAck\", value: data }),\n        msgChannelCloseInit: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseInit\", value: data }),\n        msgChannelCloseConfirm: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseConfirm\", value: data }),\n        msgChannelOpenConfirm: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenConfirm\", value: data }),\n        msgChannelOpenTry: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenTry\", value: data }),\n        msgRecvPacket: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgRecvPacket\", value: data }),\n        msgTimeoutOnClose: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgTimeoutOnClose\", value: data }),\n        msgAcknowledgement: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgAcknowledgement\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Channel } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { IdentifiedChannel } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Counterparty } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Packet } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { PacketState } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Acknowledgement } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { PacketSequence } from \"./module/types/ibc/core/channel/v1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Channel: {},\n        Channels: {},\n        ConnectionChannels: {},\n        ChannelClientState: {},\n        ChannelConsensusState: {},\n        PacketCommitment: {},\n        PacketCommitments: {},\n        PacketReceipt: {},\n        PacketAcknowledgement: {},\n        PacketAcknowledgements: {},\n        UnreceivedPackets: {},\n        UnreceivedAcks: {},\n        NextSequenceReceive: {},\n        _Structure: {\n            Channel: getStructure(Channel.fromPartial({})),\n            IdentifiedChannel: getStructure(IdentifiedChannel.fromPartial({})),\n            Counterparty: getStructure(Counterparty.fromPartial({})),\n            Packet: getStructure(Packet.fromPartial({})),\n            PacketState: getStructure(PacketState.fromPartial({})),\n            Acknowledgement: getStructure(Acknowledgement.fromPartial({})),\n            PacketSequence: getStructure(PacketSequence.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getChannel: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Channel[JSON.stringify(params)] ?? {};\n        },\n        getChannels: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Channels[JSON.stringify(params)] ?? {};\n        },\n        getConnectionChannels: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionChannels[JSON.stringify(params)] ?? {};\n        },\n        getChannelClientState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ChannelClientState[JSON.stringify(params)] ?? {};\n        },\n        getChannelConsensusState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ChannelConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getPacketCommitment: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketCommitment[JSON.stringify(params)] ?? {};\n        },\n        getPacketCommitments: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketCommitments[JSON.stringify(params)] ?? {};\n        },\n        getPacketReceipt: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketReceipt[JSON.stringify(params)] ?? {};\n        },\n        getPacketAcknowledgement: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketAcknowledgement[JSON.stringify(params)] ?? {};\n        },\n        getPacketAcknowledgements: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketAcknowledgements[JSON.stringify(params)] ?? {};\n        },\n        getUnreceivedPackets: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnreceivedPackets[JSON.stringify(params)] ?? {};\n        },\n        getUnreceivedAcks: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnreceivedAcks[JSON.stringify(params)] ?? {};\n        },\n        getNextSequenceReceive: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.NextSequenceReceive[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryChannel({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryChannel(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryChannel(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'Channel', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannel', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannel']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryChannel', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryChannels({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryChannels(query)).data : (await (await initQueryClient(rootGetters)).queryChannels()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryChannels({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Channels', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannels', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannels']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryChannels', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConnectionChannels({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnectionChannels(key.connection, query)).data : (await (await initQueryClient(rootGetters)).queryConnectionChannels(key.connection)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryConnectionChannels(key.connection, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ConnectionChannels', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionChannels', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionChannels']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnectionChannels', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryChannelClientState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryChannelClientState(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryChannelClientState(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'ChannelClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannelClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannelClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryChannelClientState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryChannelConsensusState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryChannelConsensusState(key.channel_id, key.port_id, key.revision_number, key.revision_height, query)).data : (await (await initQueryClient(rootGetters)).queryChannelConsensusState(key.channel_id, key.port_id, key.revision_number, key.revision_height)).data;\n                commit('QUERY', { query: 'ChannelConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannelConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannelConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryChannelConsensusState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketCommitment({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketCommitment(key.channel_id, key.port_id, key.sequence, query)).data : (await (await initQueryClient(rootGetters)).queryPacketCommitment(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketCommitment', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketCommitment', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketCommitment']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketCommitment', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketCommitments({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketCommitments(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryPacketCommitments(key.channel_id, key.port_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryPacketCommitments(key.channel_id, key.port_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'PacketCommitments', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketCommitments', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketCommitments']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketCommitments', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketReceipt({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketReceipt(key.channel_id, key.port_id, key.sequence, query)).data : (await (await initQueryClient(rootGetters)).queryPacketReceipt(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketReceipt', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketReceipt', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketReceipt']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketReceipt', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketAcknowledgement({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketAcknowledgement(key.channel_id, key.port_id, key.sequence, query)).data : (await (await initQueryClient(rootGetters)).queryPacketAcknowledgement(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketAcknowledgement', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketAcknowledgement', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketAcknowledgement']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketAcknowledgement', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketAcknowledgements({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketAcknowledgements(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryPacketAcknowledgements(key.channel_id, key.port_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryPacketAcknowledgements(key.channel_id, key.port_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'PacketAcknowledgements', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketAcknowledgements', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketAcknowledgements']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketAcknowledgements', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryUnreceivedPackets({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryUnreceivedPackets(key.channel_id, key.port_id, key.packet_commitment_sequences, query)).data : (await (await initQueryClient(rootGetters)).queryUnreceivedPackets(key.channel_id, key.port_id, key.packet_commitment_sequences)).data;\n                commit('QUERY', { query: 'UnreceivedPackets', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnreceivedPackets', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnreceivedPackets']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryUnreceivedPackets', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryUnreceivedAcks({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryUnreceivedAcks(key.channel_id, key.port_id, key.packet_ack_sequences, query)).data : (await (await initQueryClient(rootGetters)).queryUnreceivedAcks(key.channel_id, key.port_id, key.packet_ack_sequences)).data;\n                commit('QUERY', { query: 'UnreceivedAcks', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnreceivedAcks', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnreceivedAcks']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryUnreceivedAcks', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryNextSequenceReceive({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryNextSequenceReceive(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryNextSequenceReceive(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'NextSequenceReceive', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryNextSequenceReceive', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getNextSequenceReceive']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryNextSequenceReceive', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgChannelOpenInit({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenInit(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgTimeout({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTimeout(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTimeout:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeout:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelOpenAck({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenAck(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelCloseInit({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelCloseInit(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelCloseConfirm({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelCloseConfirm(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelOpenConfirm({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenConfirm(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelOpenTry({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenTry(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgRecvPacket({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgRecvPacket(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgTimeoutOnClose({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTimeoutOnClose(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgAcknowledgement({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgAcknowledgement(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgChannelOpenInit({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgTimeout({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTimeout(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTimeout:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeout:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelOpenAck({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenAck(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelCloseInit({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelCloseInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelCloseConfirm({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelCloseConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelOpenConfirm({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelOpenTry({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenTry(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgRecvPacket({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgRecvPacket(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgTimeoutOnClose({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTimeoutOnClose(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgAcknowledgement({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgAcknowledgement(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/bank/v1beta1/bank.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllBalances\n         * @summary AllBalances queries the balance of all coins for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}\n         */\n        this.queryAllBalances = (address, query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryBalance\n         * @summary Balance queries the balance of a single coin for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}/{denom}\n         */\n        this.queryBalance = (address, denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomsMetadata\n         * @summary DenomsMetadata queries the client metadata for all registered coin denominations.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata\n         */\n        this.queryDenomsMetadata = (query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomMetadata\n         * @summary DenomsMetadata queries the client metadata of a given coin denomination.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata/{denom}\n         */\n        this.queryDenomMetadata = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of x/bank module.\n         * @request GET:/cosmos/bank/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTotalSupply\n         * @summary TotalSupply queries the total supply of all coins.\n         * @request GET:/cosmos/bank/v1beta1/supply\n         */\n        this.queryTotalSupply = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySupplyOf\n         * @summary SupplyOf queries the supply of a single coin.\n         * @request GET:/cosmos/bank/v1beta1/supply/{denom}\n         */\n        this.querySupplyOf = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.bank.v1beta1\";\nconst baseParams = { defaultSendEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.sendEnabled) {\n            SendEnabled.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.defaultSendEnabled === true) {\n            writer.uint32(16).bool(message.defaultSendEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled.push(SendEnabled.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.defaultSendEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromJSON(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined &&\n            object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = Boolean(object.defaultSendEnabled);\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.sendEnabled) {\n            obj.sendEnabled = message.sendEnabled.map((e) => e ? SendEnabled.toJSON(e) : undefined);\n        }\n        else {\n            obj.sendEnabled = [];\n        }\n        message.defaultSendEnabled !== undefined &&\n            (obj.defaultSendEnabled = message.defaultSendEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromPartial(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined &&\n            object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = object.defaultSendEnabled;\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    },\n};\nconst baseSendEnabled = { denom: \"\", enabled: false };\nexport const SendEnabled = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.enabled === true) {\n            writer.uint32(16).bool(message.enabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSendEnabled };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.enabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = Boolean(object.enabled);\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.enabled !== undefined && (obj.enabled = message.enabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = object.enabled;\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    },\n};\nconst baseInput = { address: \"\" };\nexport const Input = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseOutput = { address: \"\" };\nexport const Output = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseOutput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSupply = {};\nexport const Supply = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.total) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSupply };\n        message.total = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.total) {\n            obj.total = message.total.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.total = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDenomUnit = { denom: \"\", exponent: 0, aliases: \"\" };\nexport const DenomUnit = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.exponent !== 0) {\n            writer.uint32(16).uint32(message.exponent);\n        }\n        for (const v of message.aliases) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.exponent = reader.uint32();\n                    break;\n                case 3:\n                    message.aliases.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = Number(object.exponent);\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.exponent !== undefined && (obj.exponent = message.exponent);\n        if (message.aliases) {\n            obj.aliases = message.aliases.map((e) => e);\n        }\n        else {\n            obj.aliases = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = object.exponent;\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseMetadata = { description: \"\", base: \"\", display: \"\" };\nexport const Metadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== \"\") {\n            writer.uint32(10).string(message.description);\n        }\n        for (const v of message.denomUnits) {\n            DenomUnit.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.base !== \"\") {\n            writer.uint32(26).string(message.base);\n        }\n        if (message.display !== \"\") {\n            writer.uint32(34).string(message.display);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = reader.string();\n                    break;\n                case 2:\n                    message.denomUnits.push(DenomUnit.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.base = reader.string();\n                    break;\n                case 4:\n                    message.display = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromJSON(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = String(object.base);\n        }\n        else {\n            message.base = \"\";\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = String(object.display);\n        }\n        else {\n            message.display = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description);\n        if (message.denomUnits) {\n            obj.denomUnits = message.denomUnits.map((e) => e ? DenomUnit.toJSON(e) : undefined);\n        }\n        else {\n            obj.denomUnits = [];\n        }\n        message.base !== undefined && (obj.base = message.base);\n        message.display !== undefined && (obj.display = message.display);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromPartial(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = object.base;\n        }\n        else {\n            message.base = \"\";\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = object.display;\n        }\n        else {\n            message.display = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Input, Output } from \"../../../cosmos/bank/v1beta1/bank\";\nexport const protobufPackage = \"cosmos.bank.v1beta1\";\nconst baseMsgSend = { fromAddress: \"\", toAddress: \"\" };\nexport const MsgSend = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== \"\") {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== \"\") {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined &&\n            (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMsgSendResponse = {};\nexport const MsgSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    },\n};\nconst baseMsgMultiSend = {};\nexport const MsgMultiSend = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.inputs) {\n            Input.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.outputs) {\n            Output.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.inputs.push(Input.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.outputs.push(Output.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromJSON(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.inputs) {\n            obj.inputs = message.inputs.map((e) => (e ? Input.toJSON(e) : undefined));\n        }\n        else {\n            obj.inputs = [];\n        }\n        if (message.outputs) {\n            obj.outputs = message.outputs.map((e) => e ? Output.toJSON(e) : undefined);\n        }\n        else {\n            obj.outputs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromPartial(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMsgMultiSendResponse = {};\nexport const MsgMultiSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Send(request) {\n        const data = MsgSend.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.bank.v1beta1.Msg\", \"Send\", data);\n        return promise.then((data) => MsgSendResponse.decode(new Reader(data)));\n    }\n    MultiSend(request) {\n        const data = MsgMultiSend.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.bank.v1beta1.Msg\", \"MultiSend\", data);\n        return promise.then((data) => MsgMultiSendResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgMultiSend } from \"./types/cosmos/bank/v1beta1/tx\";\nimport { MsgSend } from \"./types/cosmos/bank/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.bank.v1beta1.MsgMultiSend\", MsgMultiSend],\n    [\"/cosmos.bank.v1beta1.MsgSend\", MsgSend],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgMultiSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgMultiSend\", value: data }),\n        msgSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgSend\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Params, Metadata } from \"../../../cosmos/bank/v1beta1/bank\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.bank.v1beta1\";\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.balances) {\n            Balance.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.supply) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.denomMetadata) {\n            Metadata.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balances.push(Balance.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.supply.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.denomMetadata.push(Metadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromJSON(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.balances) {\n            obj.balances = message.balances.map((e) => e ? Balance.toJSON(e) : undefined);\n        }\n        else {\n            obj.balances = [];\n        }\n        if (message.supply) {\n            obj.supply = message.supply.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.supply = [];\n        }\n        if (message.denomMetadata) {\n            obj.denomMetadata = message.denomMetadata.map((e) => e ? Metadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.denomMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromPartial(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseBalance = { address: \"\" };\nexport const Balance = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBalance };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { SendEnabled } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Input } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Output } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Supply } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { DenomUnit } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Metadata } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Balance } from \"./module/types/cosmos/bank/v1beta1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Balance: {},\n        AllBalances: {},\n        TotalSupply: {},\n        SupplyOf: {},\n        Params: {},\n        DenomMetadata: {},\n        DenomsMetadata: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            SendEnabled: getStructure(SendEnabled.fromPartial({})),\n            Input: getStructure(Input.fromPartial({})),\n            Output: getStructure(Output.fromPartial({})),\n            Supply: getStructure(Supply.fromPartial({})),\n            DenomUnit: getStructure(DenomUnit.fromPartial({})),\n            Metadata: getStructure(Metadata.fromPartial({})),\n            Balance: getStructure(Balance.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getBalance: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Balance[JSON.stringify(params)] ?? {};\n        },\n        getAllBalances: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllBalances[JSON.stringify(params)] ?? {};\n        },\n        getTotalSupply: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TotalSupply[JSON.stringify(params)] ?? {};\n        },\n        getSupplyOf: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SupplyOf[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDenomMetadata: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomMetadata[JSON.stringify(params)] ?? {};\n        },\n        getDenomsMetadata: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomsMetadata[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryBalance({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryBalance(key.address, key.denom, query)).data : (await (await initQueryClient(rootGetters)).queryBalance(key.address, key.denom)).data;\n                commit('QUERY', { query: 'Balance', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryBalance', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getBalance']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryBalance', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryAllBalances({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryAllBalances(key.address, query)).data : (await (await initQueryClient(rootGetters)).queryAllBalances(key.address)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryAllBalances(key.address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'AllBalances', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllBalances', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllBalances']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryAllBalances', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryTotalSupply({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryTotalSupply(query)).data : (await (await initQueryClient(rootGetters)).queryTotalSupply()).data;\n                commit('QUERY', { query: 'TotalSupply', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTotalSupply', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTotalSupply']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryTotalSupply', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QuerySupplyOf({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).querySupplyOf(key.denom, query)).data : (await (await initQueryClient(rootGetters)).querySupplyOf(key.denom)).data;\n                commit('QUERY', { query: 'SupplyOf', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySupplyOf', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSupplyOf']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QuerySupplyOf', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDenomMetadata({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDenomMetadata(key.denom, query)).data : (await (await initQueryClient(rootGetters)).queryDenomMetadata(key.denom)).data;\n                commit('QUERY', { query: 'DenomMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDenomMetadata', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDenomsMetadata({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDenomsMetadata(query)).data : (await (await initQueryClient(rootGetters)).queryDenomsMetadata()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDenomsMetadata({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DenomsMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomsMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomsMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDenomsMetadata', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgMultiSend({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgMultiSend(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgSend({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSend(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgMultiSend({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgMultiSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgSend({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/evidence/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllEvidence\n         * @summary AllEvidence queries all evidence.\n         * @request GET:/cosmos/evidence/v1beta1/evidence\n         */\n        this.queryAllEvidence = (query, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryEvidence\n         * @summary Evidence queries evidence based on evidence hash.\n         * @request GET:/cosmos/evidence/v1beta1/evidence/{evidenceHash}\n         */\n        this.queryEvidence = (evidenceHash, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence/${evidenceHash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSubmitEvidence } from \"./types/cosmos/evidence/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", MsgSubmitEvidence],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgSubmitEvidence: (data) => ({ typeUrl: \"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Equivocation } from \"./module/types/cosmos/evidence/v1beta1/evidence\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Evidence: {},\n        AllEvidence: {},\n        _Structure: {\n            Equivocation: getStructure(Equivocation.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getEvidence: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Evidence[JSON.stringify(params)] ?? {};\n        },\n        getAllEvidence: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllEvidence[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryEvidence({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryEvidence(key.evidence_hash, query)).data : (await (await initQueryClient(rootGetters)).queryEvidence(key.evidence_hash)).data;\n                commit('QUERY', { query: 'Evidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryEvidence', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryAllEvidence({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryAllEvidence(query)).data : (await (await initQueryClient(rootGetters)).queryAllEvidence()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryAllEvidence({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'AllEvidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryAllEvidence', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgSubmitEvidence({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitEvidence(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgSubmitEvidence({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitEvidence(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ethermint/evm/v1alpha1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAccount\n         * @summary Account queries an Ethereum account.\n         * @request GET:/ethermint/evm/v1alpha1/account/{address}\n         */\n        this.queryAccount = (address, params = {}) => this.request({\n            path: `/ethermint/evm/v1alpha1/account/${address}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryBalance\n       * @summary Balance queries the balance of a the EVM denomination for a single\n      EthAccount.\n       * @request GET:/ethermint/evm/v1alpha1/balances/{address}\n       */\n        this.queryBalance = (address, params = {}) => this.request({\n            path: `/ethermint/evm/v1alpha1/balances/${address}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryBlockBloom\n         * @summary BlockBloom queries the block bloom filter bytes at a given height.\n         * @request GET:/ethermint/evm/v1alpha1/block_bloom\n         */\n        this.queryBlockBloom = (params = {}) => this.request({\n            path: `/ethermint/evm/v1alpha1/block_bloom`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryBlockLogs\n         * @summary BlockLogs queries all the ethereum logs for a given block hash.\n         * @request GET:/ethermint/evm/v1alpha1/block_logs/{hash}\n         */\n        this.queryBlockLogs = (hash, params = {}) => this.request({\n            path: `/ethermint/evm/v1alpha1/block_logs/${hash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCode\n         * @summary Code queries the balance of all coins for a single account.\n         * @request GET:/ethermint/evm/v1alpha1/codes/{address}\n         */\n        this.queryCode = (address, params = {}) => this.request({\n            path: `/ethermint/evm/v1alpha1/codes/${address}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of x/evm module.\n         * @request GET:/ethermint/evm/v1alpha1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/ethermint/evm/v1alpha1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryStorage\n         * @summary Storage queries the balance of all coins for a single account.\n         * @request GET:/ethermint/evm/v1alpha1/storage/{address}/{key}\n         */\n        this.queryStorage = (address, key, params = {}) => this.request({\n            path: `/ethermint/evm/v1alpha1/storage/${address}/${key}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTxLogs\n         * @summary TxLogs queries ethereum logs from a transaction.\n         * @request GET:/ethermint/evm/v1alpha1/tx_logs/{hash}\n         */\n        this.queryTxLogs = (hash, params = {}) => this.request({\n            path: `/ethermint/evm/v1alpha1/tx_logs/${hash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgEthereumTx } from \"./types/ethermint/evm/v1alpha1/tx\";\nconst types = [\n    [\"/ethermint.evm.v1alpha1.MsgEthereumTx\", MsgEthereumTx],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgEthereumTx: (data) => ({ typeUrl: \"/ethermint.evm.v1alpha1.MsgEthereumTx\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { ChainConfig, Params, TransactionLogs, State, } from \"../../../ethermint/evm/v1alpha1/evm\";\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"ethermint.evm.v1alpha1\";\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.accounts) {\n            GenesisAccount.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainConfig !== undefined) {\n            ChainConfig.encode(message.chainConfig, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.txsLogs) {\n            TransactionLogs.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.accounts = [];\n        message.txsLogs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.accounts.push(GenesisAccount.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.chainConfig = ChainConfig.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.txsLogs.push(TransactionLogs.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.accounts = [];\n        message.txsLogs = [];\n        if (object.accounts !== undefined && object.accounts !== null) {\n            for (const e of object.accounts) {\n                message.accounts.push(GenesisAccount.fromJSON(e));\n            }\n        }\n        if (object.chainConfig !== undefined && object.chainConfig !== null) {\n            message.chainConfig = ChainConfig.fromJSON(object.chainConfig);\n        }\n        else {\n            message.chainConfig = undefined;\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.txsLogs !== undefined && object.txsLogs !== null) {\n            for (const e of object.txsLogs) {\n                message.txsLogs.push(TransactionLogs.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.accounts) {\n            obj.accounts = message.accounts.map((e) => e ? GenesisAccount.toJSON(e) : undefined);\n        }\n        else {\n            obj.accounts = [];\n        }\n        message.chainConfig !== undefined &&\n            (obj.chainConfig = message.chainConfig\n                ? ChainConfig.toJSON(message.chainConfig)\n                : undefined);\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.txsLogs) {\n            obj.txsLogs = message.txsLogs.map((e) => e ? TransactionLogs.toJSON(e) : undefined);\n        }\n        else {\n            obj.txsLogs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.accounts = [];\n        message.txsLogs = [];\n        if (object.accounts !== undefined && object.accounts !== null) {\n            for (const e of object.accounts) {\n                message.accounts.push(GenesisAccount.fromPartial(e));\n            }\n        }\n        if (object.chainConfig !== undefined && object.chainConfig !== null) {\n            message.chainConfig = ChainConfig.fromPartial(object.chainConfig);\n        }\n        else {\n            message.chainConfig = undefined;\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.txsLogs !== undefined && object.txsLogs !== null) {\n            for (const e of object.txsLogs) {\n                message.txsLogs.push(TransactionLogs.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseGenesisAccount = { address: \"\", code: \"\" };\nexport const GenesisAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.code !== \"\") {\n            writer.uint32(18).string(message.code);\n        }\n        for (const v of message.storage) {\n            State.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisAccount };\n        message.storage = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.code = reader.string();\n                    break;\n                case 3:\n                    message.storage.push(State.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisAccount };\n        message.storage = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = String(object.code);\n        }\n        else {\n            message.code = \"\";\n        }\n        if (object.storage !== undefined && object.storage !== null) {\n            for (const e of object.storage) {\n                message.storage.push(State.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.code !== undefined && (obj.code = message.code);\n        if (message.storage) {\n            obj.storage = message.storage.map((e) => e ? State.toJSON(e) : undefined);\n        }\n        else {\n            obj.storage = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisAccount };\n        message.storage = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = \"\";\n        }\n        if (object.storage !== undefined && object.storage !== null) {\n            for (const e of object.storage) {\n                message.storage.push(State.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { GenesisAccount } from \"./module/types/ethermint/evm/v1alpha1/genesis\";\nimport { TxData } from \"./module/types/ethermint/evm/v1alpha1/tx\";\nimport { Recipient } from \"./module/types/ethermint/evm/v1alpha1/tx\";\nimport { SigCache } from \"./module/types/ethermint/evm/v1alpha1/tx\";\nimport { EIP155Signer } from \"./module/types/ethermint/evm/v1alpha1/tx\";\nimport { Params } from \"./module/types/ethermint/evm/v1alpha1/evm\";\nimport { ChainConfig } from \"./module/types/ethermint/evm/v1alpha1/evm\";\nimport { State } from \"./module/types/ethermint/evm/v1alpha1/evm\";\nimport { TransactionLogs } from \"./module/types/ethermint/evm/v1alpha1/evm\";\nimport { Log } from \"./module/types/ethermint/evm/v1alpha1/evm\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Account: {},\n        Balance: {},\n        Storage: {},\n        Code: {},\n        TxLogs: {},\n        BlockLogs: {},\n        BlockBloom: {},\n        Params: {},\n        _Structure: {\n            GenesisAccount: getStructure(GenesisAccount.fromPartial({})),\n            TxData: getStructure(TxData.fromPartial({})),\n            Recipient: getStructure(Recipient.fromPartial({})),\n            SigCache: getStructure(SigCache.fromPartial({})),\n            EIP155Signer: getStructure(EIP155Signer.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            ChainConfig: getStructure(ChainConfig.fromPartial({})),\n            State: getStructure(State.fromPartial({})),\n            TransactionLogs: getStructure(TransactionLogs.fromPartial({})),\n            Log: getStructure(Log.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getAccount: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Account[JSON.stringify(params)] ?? {};\n        },\n        getBalance: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Balance[JSON.stringify(params)] ?? {};\n        },\n        getStorage: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Storage[JSON.stringify(params)] ?? {};\n        },\n        getCode: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Code[JSON.stringify(params)] ?? {};\n        },\n        getTxLogs: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TxLogs[JSON.stringify(params)] ?? {};\n        },\n        getBlockLogs: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.BlockLogs[JSON.stringify(params)] ?? {};\n        },\n        getBlockBloom: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.BlockBloom[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryAccount({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryAccount(key.address, query)).data : (await (await initQueryClient(rootGetters)).queryAccount(key.address)).data;\n                commit('QUERY', { query: 'Account', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAccount', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAccount']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryAccount', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryBalance({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryBalance(key.address, query)).data : (await (await initQueryClient(rootGetters)).queryBalance(key.address)).data;\n                commit('QUERY', { query: 'Balance', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryBalance', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getBalance']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryBalance', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryStorage({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryStorage(key.address, key.key, query)).data : (await (await initQueryClient(rootGetters)).queryStorage(key.address, key.key)).data;\n                commit('QUERY', { query: 'Storage', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryStorage', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getStorage']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryStorage', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryCode({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryCode(key.address, query)).data : (await (await initQueryClient(rootGetters)).queryCode(key.address)).data;\n                commit('QUERY', { query: 'Code', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCode', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCode']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryCode', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryTxLogs({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryTxLogs(key.hash, query)).data : (await (await initQueryClient(rootGetters)).queryTxLogs(key.hash)).data;\n                commit('QUERY', { query: 'TxLogs', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTxLogs', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTxLogs']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryTxLogs', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryBlockLogs({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryBlockLogs(key.hash, query)).data : (await (await initQueryClient(rootGetters)).queryBlockLogs(key.hash)).data;\n                commit('QUERY', { query: 'BlockLogs', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryBlockLogs', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getBlockLogs']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryBlockLogs', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryBlockBloom({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryBlockBloom(query)).data : (await (await initQueryClient(rootGetters)).queryBlockBloom()).data;\n                commit('QUERY', { query: 'BlockBloom', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryBlockBloom', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getBlockBloom']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryBlockBloom', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgEthereumTx({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgEthereumTx(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgEthereumTx:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEthereumTx:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgEthereumTx({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgEthereumTx(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgEthereumTx:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEthereumTx:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/vesting/v1beta1/vesting.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgCreateVestingAccount } from \"./types/cosmos/vesting/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", MsgCreateVestingAccount],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgCreateVestingAccount: (data) => ({ typeUrl: \"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { BaseVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { ContinuousVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { DelayedVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { Period } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { PeriodicVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            BaseVestingAccount: getStructure(BaseVestingAccount.fromPartial({})),\n            ContinuousVestingAccount: getStructure(ContinuousVestingAccount.fromPartial({})),\n            DelayedVestingAccount: getStructure(DelayedVestingAccount.fromPartial({})),\n            Period: getStructure(Period.fromPartial({})),\n            PeriodicVestingAccount: getStructure(PeriodicVestingAccount.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async sendMsgCreateVestingAccount({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateVestingAccount(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgCreateVestingAccount({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateVestingAccount(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* BondStatus is the status of a validator.\n\n - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.\n - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.\n - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.\n - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.\n*/\nexport var V1Beta1BondStatus;\n(function (V1Beta1BondStatus) {\n    V1Beta1BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = \"BOND_STATUS_UNSPECIFIED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDED\"] = \"BOND_STATUS_UNBONDED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDING\"] = \"BOND_STATUS_UNBONDING\";\n    V1Beta1BondStatus[\"BOND_STATUS_BONDED\"] = \"BOND_STATUS_BONDED\";\n})(V1Beta1BondStatus || (V1Beta1BondStatus = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/staking/v1beta1/staking.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorDelegations\n         * @summary DelegatorDelegations queries all delegations of a given delegator address.\n         * @request GET:/cosmos/staking/v1beta1/delegations/{delegatorAddr}\n         */\n        this.queryDelegatorDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryRedelegations\n         * @summary Redelegations queries redelegations of given address.\n         * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/redelegations\n         */\n        this.queryRedelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/redelegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorUnbondingDelegations\n       * @summary DelegatorUnbondingDelegations queries all unbonding delegations of a given\n      delegator address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/unbonding_delegations\n       */\n        this.queryDelegatorUnbondingDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidators\n       * @summary DelegatorValidators queries all validators info for given delegator\n      address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators\n       */\n        this.queryDelegatorValidators = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidator\n       * @summary DelegatorValidator queries validator info for given delegator validator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators/{validatorAddr}\n       */\n        this.queryDelegatorValidator = (delegatorAddr, validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryHistoricalInfo\n         * @summary HistoricalInfo queries the historical info for given height.\n         * @request GET:/cosmos/staking/v1beta1/historical_info/{height}\n         */\n        this.queryHistoricalInfo = (height, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/historical_info/${height}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Parameters queries the staking parameters.\n         * @request GET:/cosmos/staking/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPool\n         * @summary Pool queries the pool info.\n         * @request GET:/cosmos/staking/v1beta1/pool\n         */\n        this.queryPool = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidators\n         * @summary Validators queries all validators that match the given status.\n         * @request GET:/cosmos/staking/v1beta1/validators\n         */\n        this.queryValidators = (query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidator\n         * @summary Validator queries validator info for given validator address.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}\n         */\n        this.queryValidator = (validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorDelegations\n         * @summary ValidatorDelegations queries delegate info for given validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations\n         */\n        this.queryValidatorDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegation\n         * @summary Delegation queries delegate info for given validator delegator pair.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}\n         */\n        this.queryDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnbondingDelegation\n       * @summary UnbondingDelegation queries unbonding info for given validator delegator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}/unbonding_delegation\n       */\n        this.queryUnbondingDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}/unbonding_delegation`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorUnbondingDelegations\n         * @summary ValidatorUnbondingDelegations queries unbonding delegations of a validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/unbonding_delegations\n         */\n        this.queryValidatorUnbondingDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport { Description, CommissionRates, } from \"../../../cosmos/staking/v1beta1/staking\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.staking.v1beta1\";\nconst baseMsgCreateValidator = {\n    minSelfDelegation: \"\",\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const MsgCreateValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            CommissionRates.encode(message.commission, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== \"\") {\n            writer.uint32(26).string(message.minSelfDelegation);\n        }\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(34).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(42).string(message.validatorAddress);\n        }\n        if (message.pubkey !== undefined) {\n            Any.encode(message.pubkey, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.value !== undefined) {\n            Coin.encode(message.value, writer.uint32(58).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commission = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                case 4:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 5:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 6:\n                    message.pubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.value = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromJSON(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromJSON(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.commission !== undefined &&\n            (obj.commission = message.commission\n                ? CommissionRates.toJSON(message.commission)\n                : undefined);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.pubkey !== undefined &&\n            (obj.pubkey = message.pubkey ? Any.toJSON(message.pubkey) : undefined);\n        message.value !== undefined &&\n            (obj.value = message.value ? Coin.toJSON(message.value) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromPartial(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromPartial(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgCreateValidatorResponse = {};\nexport const MsgCreateValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateValidatorResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateValidatorResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateValidatorResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgEditValidator = {\n    validatorAddress: \"\",\n    commissionRate: \"\",\n    minSelfDelegation: \"\",\n};\nexport const MsgEditValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.commissionRate !== \"\") {\n            writer.uint32(26).string(message.commissionRate);\n        }\n        if (message.minSelfDelegation !== \"\") {\n            writer.uint32(34).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.commissionRate = reader.string();\n                    break;\n                case 4:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = String(object.commissionRate);\n        }\n        else {\n            message.commissionRate = \"\";\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.commissionRate !== undefined &&\n            (obj.commissionRate = message.commissionRate);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = object.commissionRate;\n        }\n        else {\n            message.commissionRate = \"\";\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgEditValidatorResponse = {};\nexport const MsgEditValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgEditValidatorResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgEditValidatorResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgEditValidatorResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgDelegate = { delegatorAddress: \"\", validatorAddress: \"\" };\nexport const MsgDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgDelegateResponse = {};\nexport const MsgDelegateResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    },\n};\nconst baseMsgBeginRedelegate = {\n    delegatorAddress: \"\",\n    validatorSrcAddress: \"\",\n    validatorDstAddress: \"\",\n};\nexport const MsgBeginRedelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== \"\") {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== \"\") {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBeginRedelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgBeginRedelegateResponse = {};\nexport const MsgBeginRedelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgBeginRedelegateResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgBeginRedelegateResponse,\n        };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgBeginRedelegateResponse,\n        };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgUndelegate = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const MsgUndelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgUndelegateResponse = {};\nexport const MsgUndelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateValidator(request) {\n        const data = MsgCreateValidator.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"CreateValidator\", data);\n        return promise.then((data) => MsgCreateValidatorResponse.decode(new Reader(data)));\n    }\n    EditValidator(request) {\n        const data = MsgEditValidator.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"EditValidator\", data);\n        return promise.then((data) => MsgEditValidatorResponse.decode(new Reader(data)));\n    }\n    Delegate(request) {\n        const data = MsgDelegate.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"Delegate\", data);\n        return promise.then((data) => MsgDelegateResponse.decode(new Reader(data)));\n    }\n    BeginRedelegate(request) {\n        const data = MsgBeginRedelegate.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"BeginRedelegate\", data);\n        return promise.then((data) => MsgBeginRedelegateResponse.decode(new Reader(data)));\n    }\n    Undelegate(request) {\n        const data = MsgUndelegate.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"Undelegate\", data);\n        return promise.then((data) => MsgUndelegateResponse.decode(new Reader(data)));\n    }\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgDelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgEditValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgCreateValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgUndelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgBeginRedelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.staking.v1beta1.MsgDelegate\", MsgDelegate],\n    [\"/cosmos.staking.v1beta1.MsgEditValidator\", MsgEditValidator],\n    [\"/cosmos.staking.v1beta1.MsgCreateValidator\", MsgCreateValidator],\n    [\"/cosmos.staking.v1beta1.MsgUndelegate\", MsgUndelegate],\n    [\"/cosmos.staking.v1beta1.MsgBeginRedelegate\", MsgBeginRedelegate],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgDelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgDelegate\", value: data }),\n        msgEditValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgEditValidator\", value: data }),\n        msgCreateValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgCreateValidator\", value: data }),\n        msgUndelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgUndelegate\", value: data }),\n        msgBeginRedelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgBeginRedelegate\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { HistoricalInfo } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { CommissionRates } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Commission } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Description } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Validator } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { ValAddresses } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPair } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPairs } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplet } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplets } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Delegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Redelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Params } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntryResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Pool } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { LastValidatorPower } from \"./module/types/cosmos/staking/v1beta1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Validators: {},\n        Validator: {},\n        ValidatorDelegations: {},\n        ValidatorUnbondingDelegations: {},\n        Delegation: {},\n        UnbondingDelegation: {},\n        DelegatorDelegations: {},\n        DelegatorUnbondingDelegations: {},\n        Redelegations: {},\n        DelegatorValidators: {},\n        DelegatorValidator: {},\n        HistoricalInfo: {},\n        Pool: {},\n        Params: {},\n        _Structure: {\n            HistoricalInfo: getStructure(HistoricalInfo.fromPartial({})),\n            CommissionRates: getStructure(CommissionRates.fromPartial({})),\n            Commission: getStructure(Commission.fromPartial({})),\n            Description: getStructure(Description.fromPartial({})),\n            Validator: getStructure(Validator.fromPartial({})),\n            ValAddresses: getStructure(ValAddresses.fromPartial({})),\n            DVPair: getStructure(DVPair.fromPartial({})),\n            DVPairs: getStructure(DVPairs.fromPartial({})),\n            DVVTriplet: getStructure(DVVTriplet.fromPartial({})),\n            DVVTriplets: getStructure(DVVTriplets.fromPartial({})),\n            Delegation: getStructure(Delegation.fromPartial({})),\n            UnbondingDelegation: getStructure(UnbondingDelegation.fromPartial({})),\n            UnbondingDelegationEntry: getStructure(UnbondingDelegationEntry.fromPartial({})),\n            RedelegationEntry: getStructure(RedelegationEntry.fromPartial({})),\n            Redelegation: getStructure(Redelegation.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            DelegationResponse: getStructure(DelegationResponse.fromPartial({})),\n            RedelegationEntryResponse: getStructure(RedelegationEntryResponse.fromPartial({})),\n            RedelegationResponse: getStructure(RedelegationResponse.fromPartial({})),\n            Pool: getStructure(Pool.fromPartial({})),\n            LastValidatorPower: getStructure(LastValidatorPower.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getValidators: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validators[JSON.stringify(params)] ?? {};\n        },\n        getValidator: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validator[JSON.stringify(params)] ?? {};\n        },\n        getValidatorDelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getValidatorUnbondingDelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegation: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Delegation[JSON.stringify(params)] ?? {};\n        },\n        getUnbondingDelegation: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnbondingDelegation[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorDelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorUnbondingDelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getRedelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Redelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidator: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidator[JSON.stringify(params)] ?? {};\n        },\n        getHistoricalInfo: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.HistoricalInfo[JSON.stringify(params)] ?? {};\n        },\n        getPool: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Pool[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryValidators({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidators(query)).data : (await (await initQueryClient(rootGetters)).queryValidators()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryValidators({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Validators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidators', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidator({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidator(key.validator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryValidator(key.validator_addr)).data;\n                commit('QUERY', { query: 'Validator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidator', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorDelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorDelegations(key.validator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorDelegations(key.validator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryValidatorDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ValidatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorDelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorUnbondingDelegations(key.validator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorUnbondingDelegations(key.validator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryValidatorUnbondingDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ValidatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorUnbondingDelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegation({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegation(key.validator_addr, key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'Delegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegation', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryUnbondingDelegation({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryUnbondingDelegation(key.validator_addr, key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryUnbondingDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'UnbondingDelegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnbondingDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnbondingDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryUnbondingDelegation', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorDelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorDelegations(key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorDelegations(key.delegator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDelegatorDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DelegatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorDelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorUnbondingDelegations(key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorUnbondingDelegations(key.delegator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDelegatorUnbondingDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DelegatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorUnbondingDelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryRedelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryRedelegations(key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryRedelegations(key.delegator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryRedelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Redelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryRedelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getRedelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryRedelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorValidator({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorValidator(key.delegator_addr, key.validator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorValidator(key.delegator_addr, key.validator_addr)).data;\n                commit('QUERY', { query: 'DelegatorValidator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorValidator', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryHistoricalInfo({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryHistoricalInfo(key.height, query)).data : (await (await initQueryClient(rootGetters)).queryHistoricalInfo(key.height)).data;\n                commit('QUERY', { query: 'HistoricalInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryHistoricalInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getHistoricalInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryHistoricalInfo', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPool({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPool(query)).data : (await (await initQueryClient(rootGetters)).queryPool()).data;\n                commit('QUERY', { query: 'Pool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPool', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgDelegate({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDelegate(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgEditValidator({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgEditValidator(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreateValidator({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateValidator(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUndelegate({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUndelegate(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgBeginRedelegate({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgBeginRedelegate(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgDelegate({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgEditValidator({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgEditValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreateValidator({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUndelegate({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUndelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgBeginRedelegate({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgBeginRedelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* State defines if a connection is in one of the following states:\nINIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A connection end has just started the opening handshake.\n - STATE_TRYOPEN: A connection end has acknowledged the handshake step on the counterparty\nchain.\n - STATE_OPEN: A connection end has completed the handshake.\n*/\nexport var V1State;\n(function (V1State) {\n    V1State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    V1State[\"STATE_INIT\"] = \"STATE_INIT\";\n    V1State[\"STATE_TRYOPEN\"] = \"STATE_TRYOPEN\";\n    V1State[\"STATE_OPEN\"] = \"STATE_OPEN\";\n})(V1State || (V1State = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/connection/v1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryClientConnections\n       * @summary ClientConnections queries the connection paths associated with a client\n      state.\n       * @request GET:/ibc/core/connection/v1beta1/client_connections/{clientId}\n       */\n        this.queryClientConnections = (clientId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/client_connections/${clientId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryConnections\n         * @summary Connections queries all the IBC connections of a chain.\n         * @request GET:/ibc/core/connection/v1beta1/connections\n         */\n        this.queryConnections = (query, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryConnection\n         * @summary Connection queries an IBC connection end.\n         * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}\n         */\n        this.queryConnection = (connectionId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionClientState\n       * @summary ConnectionClientState queries the client state associated with the\n      connection.\n       * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}/client_state\n       */\n        this.queryConnectionClientState = (connectionId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}/client_state`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionConsensusState\n       * @summary ConnectionConsensusState queries the consensus state associated with the\n      connection.\n       * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}/consensus_state/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryConnectionConsensusState = (connectionId, revisionNumber, revisionHeight, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}/consensus_state/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgConnectionOpenAck } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenConfirm } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenInit } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenTry } from \"./types/ibc/core/connection/v1/tx\";\nconst types = [\n    [\"/ibc.core.connection.v1.MsgConnectionOpenAck\", MsgConnectionOpenAck],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenConfirm\", MsgConnectionOpenConfirm],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenInit\", MsgConnectionOpenInit],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenTry\", MsgConnectionOpenTry],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgConnectionOpenAck: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenAck\", value: data }),\n        msgConnectionOpenConfirm: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenConfirm\", value: data }),\n        msgConnectionOpenInit: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenInit\", value: data }),\n        msgConnectionOpenTry: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenTry\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { ConnectionEnd } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { IdentifiedConnection } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { Counterparty } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { ClientPaths } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { ConnectionPaths } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { Version } from \"./module/types/ibc/core/connection/v1/connection\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Connection: {},\n        Connections: {},\n        ClientConnections: {},\n        ConnectionClientState: {},\n        ConnectionConsensusState: {},\n        _Structure: {\n            ConnectionEnd: getStructure(ConnectionEnd.fromPartial({})),\n            IdentifiedConnection: getStructure(IdentifiedConnection.fromPartial({})),\n            Counterparty: getStructure(Counterparty.fromPartial({})),\n            ClientPaths: getStructure(ClientPaths.fromPartial({})),\n            ConnectionPaths: getStructure(ConnectionPaths.fromPartial({})),\n            Version: getStructure(Version.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getConnection: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Connection[JSON.stringify(params)] ?? {};\n        },\n        getConnections: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Connections[JSON.stringify(params)] ?? {};\n        },\n        getClientConnections: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientConnections[JSON.stringify(params)] ?? {};\n        },\n        getConnectionClientState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionClientState[JSON.stringify(params)] ?? {};\n        },\n        getConnectionConsensusState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryConnection({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnection(key.connection_id, query)).data : (await (await initQueryClient(rootGetters)).queryConnection(key.connection_id)).data;\n                commit('QUERY', { query: 'Connection', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnection', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnection']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnection', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConnections({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnections(query)).data : (await (await initQueryClient(rootGetters)).queryConnections()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryConnections({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Connections', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnections', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnections']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnections', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryClientConnections({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClientConnections(key.client_id, query)).data : (await (await initQueryClient(rootGetters)).queryClientConnections(key.client_id)).data;\n                commit('QUERY', { query: 'ClientConnections', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientConnections', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientConnections']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClientConnections', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConnectionClientState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnectionClientState(key.connection_id, query)).data : (await (await initQueryClient(rootGetters)).queryConnectionClientState(key.connection_id)).data;\n                commit('QUERY', { query: 'ConnectionClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnectionClientState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConnectionConsensusState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnectionConsensusState(key.connection_id, key.revision_number, key.revision_height, query)).data : (await (await initQueryClient(rootGetters)).queryConnectionConsensusState(key.connection_id, key.revision_number, key.revision_height)).data;\n                commit('QUERY', { query: 'ConnectionConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnectionConsensusState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgConnectionOpenAck({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenAck(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgConnectionOpenConfirm({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenConfirm(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgConnectionOpenInit({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenInit(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgConnectionOpenTry({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenTry(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgConnectionOpenAck({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenAck(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgConnectionOpenConfirm({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgConnectionOpenInit({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgConnectionOpenTry({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenTry(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport CosmosCosmosSdkIbcApplicationsTransferV1 from './cosmos/cosmos-sdk/ibc.applications.transfer.v1';\nimport CosmosCosmosSdkCosmosBaseAbciV1Beta1 from './cosmos/cosmos-sdk/cosmos.base.abci.v1beta1';\nimport CosmosCosmosSdkCosmosSlashingV1Beta1 from './cosmos/cosmos-sdk/cosmos.slashing.v1beta1';\nimport CosmosCosmosSdkIbcCoreClientV1 from './cosmos/cosmos-sdk/ibc.core.client.v1';\nimport CosmosCosmosSdkCosmosBaseV1Beta1 from './cosmos/cosmos-sdk/cosmos.base.v1beta1';\nimport CosmosCosmosSdkCosmosDistributionV1Beta1 from './cosmos/cosmos-sdk/cosmos.distribution.v1beta1';\nimport CosmosCosmosSdkCosmosCrisisV1Beta1 from './cosmos/cosmos-sdk/cosmos.crisis.v1beta1';\nimport CosmosCosmosSdkCosmosGovV1Beta1 from './cosmos/cosmos-sdk/cosmos.gov.v1beta1';\nimport CosmosCosmosSdkIbcCoreChannelV1 from './cosmos/cosmos-sdk/ibc.core.channel.v1';\nimport CosmosCosmosSdkCosmosBankV1Beta1 from './cosmos/cosmos-sdk/cosmos.bank.v1beta1';\nimport CosmosCosmosSdkCosmosEvidenceV1Beta1 from './cosmos/cosmos-sdk/cosmos.evidence.v1beta1';\nimport YlgrNiflStarEthermintEvmV1Alpha1 from './ylgr/nifl-star/ethermint.evm.v1alpha1';\nimport CosmosCosmosSdkCosmosVestingV1Beta1 from './cosmos/cosmos-sdk/cosmos.vesting.v1beta1';\nimport CosmosCosmosSdkCosmosStakingV1Beta1 from './cosmos/cosmos-sdk/cosmos.staking.v1beta1';\nimport CosmosCosmosSdkIbcCoreConnectionV1 from './cosmos/cosmos-sdk/ibc.core.connection.v1';\nexport default {\n    CosmosCosmosSdkIbcApplicationsTransferV1: load(CosmosCosmosSdkIbcApplicationsTransferV1, 'ibc.applications.transfer.v1'),\n    CosmosCosmosSdkCosmosBaseAbciV1Beta1: load(CosmosCosmosSdkCosmosBaseAbciV1Beta1, 'cosmos.base.abci.v1beta1'),\n    CosmosCosmosSdkCosmosSlashingV1Beta1: load(CosmosCosmosSdkCosmosSlashingV1Beta1, 'cosmos.slashing.v1beta1'),\n    CosmosCosmosSdkIbcCoreClientV1: load(CosmosCosmosSdkIbcCoreClientV1, 'ibc.core.client.v1'),\n    CosmosCosmosSdkCosmosBaseV1Beta1: load(CosmosCosmosSdkCosmosBaseV1Beta1, 'cosmos.base.v1beta1'),\n    CosmosCosmosSdkCosmosDistributionV1Beta1: load(CosmosCosmosSdkCosmosDistributionV1Beta1, 'cosmos.distribution.v1beta1'),\n    CosmosCosmosSdkCosmosCrisisV1Beta1: load(CosmosCosmosSdkCosmosCrisisV1Beta1, 'cosmos.crisis.v1beta1'),\n    CosmosCosmosSdkCosmosGovV1Beta1: load(CosmosCosmosSdkCosmosGovV1Beta1, 'cosmos.gov.v1beta1'),\n    CosmosCosmosSdkIbcCoreChannelV1: load(CosmosCosmosSdkIbcCoreChannelV1, 'ibc.core.channel.v1'),\n    CosmosCosmosSdkCosmosBankV1Beta1: load(CosmosCosmosSdkCosmosBankV1Beta1, 'cosmos.bank.v1beta1'),\n    CosmosCosmosSdkCosmosEvidenceV1Beta1: load(CosmosCosmosSdkCosmosEvidenceV1Beta1, 'cosmos.evidence.v1beta1'),\n    YlgrNiflStarEthermintEvmV1Alpha1: load(YlgrNiflStarEthermintEvmV1Alpha1, 'ethermint.evm.v1alpha1'),\n    CosmosCosmosSdkCosmosVestingV1Beta1: load(CosmosCosmosSdkCosmosVestingV1Beta1, 'cosmos.vesting.v1beta1'),\n    CosmosCosmosSdkCosmosStakingV1Beta1: load(CosmosCosmosSdkCosmosStakingV1Beta1, 'cosmos.staking.v1beta1'),\n    CosmosCosmosSdkIbcCoreConnectionV1: load(CosmosCosmosSdkIbcCoreConnectionV1, 'ibc.core.connection.v1'),\n};\nfunction load(mod, fullns) {\n    return function init(store) {\n        const fullnsLevels = fullns.split('/');\n        for (let i = 1; i < fullnsLevels.length; i++) {\n            let ns = fullnsLevels.slice(0, i);\n            if (!store.hasModule(ns)) {\n                store.registerModule(ns, { namespaced: true });\n            }\n        }\n        if (store.hasModule(fullnsLevels)) {\n            throw new Error('Duplicate module name detected: ' + fullnsLevels.pop());\n        }\n        else {\n            store.registerModule(fullnsLevels, mod);\n            store.subscribe((mutation) => {\n                if (mutation.type == 'common/env/INITIALIZE_WS_COMPLETE') {\n                    store.dispatch(fullns + '/init', null, {\n                        root: true\n                    });\n                }\n            });\n        }\n    };\n}\n","import { env, starport, blocks, wallet,transfers } from '@starport/vuex'\nimport generated from './generated'\nexport default function init(store) {\n\tfor (const moduleInit of Object.values(generated)) {\n\t\tmoduleInit(store)\n\t}\n\ttransfers(store)\n\tstarport(store)\n\tblocks(store)\n\tenv(store)\n\twallet(store)\n}\n","import { createStore } from 'vuex'\nimport init from './config'\n\nconst store = createStore({\n\tstate() {\n\t\treturn {}\n\t},\n\tmutations: {},\n\tactions: {},\n})\ninit(store)\nexport default store\n","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpTokenSend :address=\"address\" />\n\t\t\t<SpTransferList :address=\"address\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Index',\n\tcomputed: {\n\t\taddress() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Index.vue?vue&type=template&id=e30ba36a\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n      \t<!-- this line is used by starport scaffolding # 4 -->\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Types'\n}\n</script>\n\n","import { render } from \"./Types.vue?vue&type=template&id=789c7189\"\nimport script from \"./Types.vue?vue&type=script&lang=js\"\nexport * from \"./Types.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { createRouter, createWebHistory } from 'vue-router'\nimport Index from '@/views/Index.vue'\nimport Types from '@/views/Types.vue'\n\nconst routerHistory = createWebHistory()\nconst routes = [\n\t{\n\t\tpath: '/',\n\t\tcomponent: Index\n\t},\n\t{ path: '/types', component: Types }\n]\n\nconst router = createRouter({\n\thistory: routerHistory,\n\troutes\n})\n\nexport default router\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport store from './store'\nimport router from './router'\nimport vueLib from '@starport/vue'\n\nconst app = createApp(App)\napp.config.globalProperties._depsLoaded = true\napp.use(store).use(router).use(vueLib).mount('#app')\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=5695b462&lang=css\"","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { IdentifiedChannel, PacketState, } from \"../../../../ibc/core/channel/v1/channel\";\nexport const protobufPackage = \"ibc.core.channel.v1\";\nconst baseGenesisState = { nextChannelSequence: 0 };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.channels) {\n            IdentifiedChannel.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.acknowledgements) {\n            PacketState.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.commitments) {\n            PacketState.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.receipts) {\n            PacketState.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.sendSequences) {\n            PacketSequence.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.recvSequences) {\n            PacketSequence.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.ackSequences) {\n            PacketSequence.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.nextChannelSequence !== 0) {\n            writer.uint32(64).uint64(message.nextChannelSequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.channels.push(IdentifiedChannel.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.acknowledgements.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.commitments.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.receipts.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.sendSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.recvSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.ackSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.nextChannelSequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        if (object.channels !== undefined && object.channels !== null) {\n            for (const e of object.channels) {\n                message.channels.push(IdentifiedChannel.fromJSON(e));\n            }\n        }\n        if (object.acknowledgements !== undefined &&\n            object.acknowledgements !== null) {\n            for (const e of object.acknowledgements) {\n                message.acknowledgements.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.commitments !== undefined && object.commitments !== null) {\n            for (const e of object.commitments) {\n                message.commitments.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.receipts !== undefined && object.receipts !== null) {\n            for (const e of object.receipts) {\n                message.receipts.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.sendSequences !== undefined && object.sendSequences !== null) {\n            for (const e of object.sendSequences) {\n                message.sendSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.recvSequences !== undefined && object.recvSequences !== null) {\n            for (const e of object.recvSequences) {\n                message.recvSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.ackSequences !== undefined && object.ackSequences !== null) {\n            for (const e of object.ackSequences) {\n                message.ackSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.nextChannelSequence !== undefined &&\n            object.nextChannelSequence !== null) {\n            message.nextChannelSequence = Number(object.nextChannelSequence);\n        }\n        else {\n            message.nextChannelSequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.channels) {\n            obj.channels = message.channels.map((e) => e ? IdentifiedChannel.toJSON(e) : undefined);\n        }\n        else {\n            obj.channels = [];\n        }\n        if (message.acknowledgements) {\n            obj.acknowledgements = message.acknowledgements.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.acknowledgements = [];\n        }\n        if (message.commitments) {\n            obj.commitments = message.commitments.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.commitments = [];\n        }\n        if (message.receipts) {\n            obj.receipts = message.receipts.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.receipts = [];\n        }\n        if (message.sendSequences) {\n            obj.sendSequences = message.sendSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.sendSequences = [];\n        }\n        if (message.recvSequences) {\n            obj.recvSequences = message.recvSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.recvSequences = [];\n        }\n        if (message.ackSequences) {\n            obj.ackSequences = message.ackSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.ackSequences = [];\n        }\n        message.nextChannelSequence !== undefined &&\n            (obj.nextChannelSequence = message.nextChannelSequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        if (object.channels !== undefined && object.channels !== null) {\n            for (const e of object.channels) {\n                message.channels.push(IdentifiedChannel.fromPartial(e));\n            }\n        }\n        if (object.acknowledgements !== undefined &&\n            object.acknowledgements !== null) {\n            for (const e of object.acknowledgements) {\n                message.acknowledgements.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.commitments !== undefined && object.commitments !== null) {\n            for (const e of object.commitments) {\n                message.commitments.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.receipts !== undefined && object.receipts !== null) {\n            for (const e of object.receipts) {\n                message.receipts.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.sendSequences !== undefined && object.sendSequences !== null) {\n            for (const e of object.sendSequences) {\n                message.sendSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.recvSequences !== undefined && object.recvSequences !== null) {\n            for (const e of object.recvSequences) {\n                message.recvSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.ackSequences !== undefined && object.ackSequences !== null) {\n            for (const e of object.ackSequences) {\n                message.ackSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.nextChannelSequence !== undefined &&\n            object.nextChannelSequence !== null) {\n            message.nextChannelSequence = object.nextChannelSequence;\n        }\n        else {\n            message.nextChannelSequence = 0;\n        }\n        return message;\n    },\n};\nconst basePacketSequence = { portId: \"\", channelId: \"\", sequence: 0 };\nexport const PacketSequence = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacketSequence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacketSequence };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacketSequence };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined &&\n            (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseDominoOp = { key: \"\", input: \"\", output: \"\" };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== \"\") {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== \"\") {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n};\nconst baseProofOp = { type: \"\" };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Params, ValidatorSigningInfo, } from \"../../../cosmos/slashing/v1beta1/slashing\";\nexport const protobufPackage = \"cosmos.slashing.v1beta1\";\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.signingInfos) {\n            SigningInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.missedBlocks) {\n            ValidatorMissedBlocks.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signingInfos.push(SigningInfo.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.missedBlocks.push(ValidatorMissedBlocks.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromJSON(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.signingInfos) {\n            obj.signingInfos = message.signingInfos.map((e) => e ? SigningInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.signingInfos = [];\n        }\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => e ? ValidatorMissedBlocks.toJSON(e) : undefined);\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromPartial(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSigningInfo = { address: \"\" };\nexport const SigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.validatorSigningInfo !== undefined) {\n            ValidatorSigningInfo.encode(message.validatorSigningInfo, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.validatorSigningInfo = ValidatorSigningInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.validatorSigningInfo !== undefined &&\n            object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromJSON(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.validatorSigningInfo !== undefined &&\n            (obj.validatorSigningInfo = message.validatorSigningInfo\n                ? ValidatorSigningInfo.toJSON(message.validatorSigningInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.validatorSigningInfo !== undefined &&\n            object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromPartial(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorMissedBlocks = { address: \"\" };\nexport const ValidatorMissedBlocks = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.missedBlocks) {\n            MissedBlock.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.missedBlocks.push(MissedBlock.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => e ? MissedBlock.toJSON(e) : undefined);\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMissedBlock = { index: 0, missed: false };\nexport const MissedBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).int64(message.index);\n        }\n        if (message.missed === true) {\n            writer.uint32(16).bool(message.missed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMissedBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.missed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = Boolean(object.missed);\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.missed !== undefined && (obj.missed = message.missed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = object.missed;\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { MerklePrefix } from \"../../../../ibc/core/commitment/v1/commitment\";\nexport const protobufPackage = \"ibc.core.connection.v1\";\n/**\n * State defines if a connection is in one of the following states:\n * INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nexport var State;\n(function (State) {\n    /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n    State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    /** STATE_INIT - A connection end has just started the opening handshake. */\n    State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n    /**\n     * STATE_TRYOPEN - A connection end has acknowledged the handshake step on the counterparty\n     * chain.\n     */\n    State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n    /** STATE_OPEN - A connection end has completed the handshake. */\n    State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n    State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State || (State = {}));\nexport function stateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"STATE_UNINITIALIZED_UNSPECIFIED\":\n            return State.STATE_UNINITIALIZED_UNSPECIFIED;\n        case 1:\n        case \"STATE_INIT\":\n            return State.STATE_INIT;\n        case 2:\n        case \"STATE_TRYOPEN\":\n            return State.STATE_TRYOPEN;\n        case 3:\n        case \"STATE_OPEN\":\n            return State.STATE_OPEN;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return State.UNRECOGNIZED;\n    }\n}\nexport function stateToJSON(object) {\n    switch (object) {\n        case State.STATE_UNINITIALIZED_UNSPECIFIED:\n            return \"STATE_UNINITIALIZED_UNSPECIFIED\";\n        case State.STATE_INIT:\n            return \"STATE_INIT\";\n        case State.STATE_TRYOPEN:\n            return \"STATE_TRYOPEN\";\n        case State.STATE_OPEN:\n            return \"STATE_OPEN\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseConnectionEnd = { clientId: \"\", state: 0, delayPeriod: 0 };\nexport const ConnectionEnd = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            Version.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(24).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.versions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.state = reader.int32();\n                    break;\n                case 4:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n};\nconst baseIdentifiedConnection = {\n    id: \"\",\n    clientId: \"\",\n    state: 0,\n    delayPeriod: 0,\n};\nexport const IdentifiedConnection = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== \"\") {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(18).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            Version.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(32).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(48).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.clientId = reader.string();\n                    break;\n                case 3:\n                    message.versions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.state = reader.int32();\n                    break;\n                case 5:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n};\nconst baseCounterparty = { clientId: \"\", connectionId: \"\" };\nexport const Counterparty = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.connectionId !== \"\") {\n            writer.uint32(18).string(message.connectionId);\n        }\n        if (message.prefix !== undefined) {\n            MerklePrefix.encode(message.prefix, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCounterparty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.connectionId = reader.string();\n                    break;\n                case 3:\n                    message.prefix = MerklePrefix.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCounterparty };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = MerklePrefix.fromJSON(object.prefix);\n        }\n        else {\n            message.prefix = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.prefix !== undefined &&\n            (obj.prefix = message.prefix\n                ? MerklePrefix.toJSON(message.prefix)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCounterparty };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = MerklePrefix.fromPartial(object.prefix);\n        }\n        else {\n            message.prefix = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientPaths = { paths: \"\" };\nexport const ClientPaths = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.paths) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseConnectionPaths = { clientId: \"\", paths: \"\" };\nexport const ConnectionPaths = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.paths) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVersion = { identifier: \"\", features: \"\" };\nexport const Version = {\n    encode(message, writer = Writer.create()) {\n        if (message.identifier !== \"\") {\n            writer.uint32(10).string(message.identifier);\n        }\n        for (const v of message.features) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVersion };\n        message.features = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identifier = reader.string();\n                    break;\n                case 2:\n                    message.features.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVersion };\n        message.features = [];\n        if (object.identifier !== undefined && object.identifier !== null) {\n            message.identifier = String(object.identifier);\n        }\n        else {\n            message.identifier = \"\";\n        }\n        if (object.features !== undefined && object.features !== null) {\n            for (const e of object.features) {\n                message.features.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identifier !== undefined && (obj.identifier = message.identifier);\n        if (message.features) {\n            obj.features = message.features.map((e) => e);\n        }\n        else {\n            obj.features = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVersion };\n        message.features = [];\n        if (object.identifier !== undefined && object.identifier !== null) {\n            message.identifier = object.identifier;\n        }\n        else {\n            message.identifier = \"\";\n        }\n        if (object.features !== undefined && object.features !== null) {\n            for (const e of object.features) {\n                message.features.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined &&\n            (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseDominoOp = { key: \"\", input: \"\", output: \"\" };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== \"\") {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== \"\") {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n};\nconst baseProofOp = { type: \"\" };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.version\";\nconst baseApp = { protocol: 0, software: \"\" };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== \"\") {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = \"\";\n        }\n        return message;\n    },\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"ethermint.evm.v1alpha1\";\nconst baseParams = {\n    evmDenom: \"\",\n    enableCreate: false,\n    enableCall: false,\n    extraEips: 0,\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.evmDenom !== \"\") {\n            writer.uint32(10).string(message.evmDenom);\n        }\n        if (message.enableCreate === true) {\n            writer.uint32(16).bool(message.enableCreate);\n        }\n        if (message.enableCall === true) {\n            writer.uint32(24).bool(message.enableCall);\n        }\n        writer.uint32(34).fork();\n        for (const v of message.extraEips) {\n            writer.int64(v);\n        }\n        writer.ldelim();\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.extraEips = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.evmDenom = reader.string();\n                    break;\n                case 2:\n                    message.enableCreate = reader.bool();\n                    break;\n                case 3:\n                    message.enableCall = reader.bool();\n                    break;\n                case 4:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.extraEips.push(longToNumber(reader.int64()));\n                        }\n                    }\n                    else {\n                        message.extraEips.push(longToNumber(reader.int64()));\n                    }\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.extraEips = [];\n        if (object.evmDenom !== undefined && object.evmDenom !== null) {\n            message.evmDenom = String(object.evmDenom);\n        }\n        else {\n            message.evmDenom = \"\";\n        }\n        if (object.enableCreate !== undefined && object.enableCreate !== null) {\n            message.enableCreate = Boolean(object.enableCreate);\n        }\n        else {\n            message.enableCreate = false;\n        }\n        if (object.enableCall !== undefined && object.enableCall !== null) {\n            message.enableCall = Boolean(object.enableCall);\n        }\n        else {\n            message.enableCall = false;\n        }\n        if (object.extraEips !== undefined && object.extraEips !== null) {\n            for (const e of object.extraEips) {\n                message.extraEips.push(Number(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.evmDenom !== undefined && (obj.evmDenom = message.evmDenom);\n        message.enableCreate !== undefined &&\n            (obj.enableCreate = message.enableCreate);\n        message.enableCall !== undefined && (obj.enableCall = message.enableCall);\n        if (message.extraEips) {\n            obj.extraEips = message.extraEips.map((e) => e);\n        }\n        else {\n            obj.extraEips = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.extraEips = [];\n        if (object.evmDenom !== undefined && object.evmDenom !== null) {\n            message.evmDenom = object.evmDenom;\n        }\n        else {\n            message.evmDenom = \"\";\n        }\n        if (object.enableCreate !== undefined && object.enableCreate !== null) {\n            message.enableCreate = object.enableCreate;\n        }\n        else {\n            message.enableCreate = false;\n        }\n        if (object.enableCall !== undefined && object.enableCall !== null) {\n            message.enableCall = object.enableCall;\n        }\n        else {\n            message.enableCall = false;\n        }\n        if (object.extraEips !== undefined && object.extraEips !== null) {\n            for (const e of object.extraEips) {\n                message.extraEips.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseChainConfig = {\n    homesteadBlock: \"\",\n    daoForkBlock: \"\",\n    daoForkSupport: false,\n    eip150Block: \"\",\n    eip150Hash: \"\",\n    eip155Block: \"\",\n    eip158Block: \"\",\n    byzantiumBlock: \"\",\n    constantinopleBlock: \"\",\n    petersburgBlock: \"\",\n    istanbulBlock: \"\",\n    muirGlacierBlock: \"\",\n    yoloV2Block: \"\",\n    ewasmBlock: \"\",\n};\nexport const ChainConfig = {\n    encode(message, writer = Writer.create()) {\n        if (message.homesteadBlock !== \"\") {\n            writer.uint32(10).string(message.homesteadBlock);\n        }\n        if (message.daoForkBlock !== \"\") {\n            writer.uint32(18).string(message.daoForkBlock);\n        }\n        if (message.daoForkSupport === true) {\n            writer.uint32(24).bool(message.daoForkSupport);\n        }\n        if (message.eip150Block !== \"\") {\n            writer.uint32(34).string(message.eip150Block);\n        }\n        if (message.eip150Hash !== \"\") {\n            writer.uint32(42).string(message.eip150Hash);\n        }\n        if (message.eip155Block !== \"\") {\n            writer.uint32(50).string(message.eip155Block);\n        }\n        if (message.eip158Block !== \"\") {\n            writer.uint32(58).string(message.eip158Block);\n        }\n        if (message.byzantiumBlock !== \"\") {\n            writer.uint32(66).string(message.byzantiumBlock);\n        }\n        if (message.constantinopleBlock !== \"\") {\n            writer.uint32(74).string(message.constantinopleBlock);\n        }\n        if (message.petersburgBlock !== \"\") {\n            writer.uint32(82).string(message.petersburgBlock);\n        }\n        if (message.istanbulBlock !== \"\") {\n            writer.uint32(90).string(message.istanbulBlock);\n        }\n        if (message.muirGlacierBlock !== \"\") {\n            writer.uint32(98).string(message.muirGlacierBlock);\n        }\n        if (message.yoloV2Block !== \"\") {\n            writer.uint32(106).string(message.yoloV2Block);\n        }\n        if (message.ewasmBlock !== \"\") {\n            writer.uint32(114).string(message.ewasmBlock);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseChainConfig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.homesteadBlock = reader.string();\n                    break;\n                case 2:\n                    message.daoForkBlock = reader.string();\n                    break;\n                case 3:\n                    message.daoForkSupport = reader.bool();\n                    break;\n                case 4:\n                    message.eip150Block = reader.string();\n                    break;\n                case 5:\n                    message.eip150Hash = reader.string();\n                    break;\n                case 6:\n                    message.eip155Block = reader.string();\n                    break;\n                case 7:\n                    message.eip158Block = reader.string();\n                    break;\n                case 8:\n                    message.byzantiumBlock = reader.string();\n                    break;\n                case 9:\n                    message.constantinopleBlock = reader.string();\n                    break;\n                case 10:\n                    message.petersburgBlock = reader.string();\n                    break;\n                case 11:\n                    message.istanbulBlock = reader.string();\n                    break;\n                case 12:\n                    message.muirGlacierBlock = reader.string();\n                    break;\n                case 13:\n                    message.yoloV2Block = reader.string();\n                    break;\n                case 14:\n                    message.ewasmBlock = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseChainConfig };\n        if (object.homesteadBlock !== undefined && object.homesteadBlock !== null) {\n            message.homesteadBlock = String(object.homesteadBlock);\n        }\n        else {\n            message.homesteadBlock = \"\";\n        }\n        if (object.daoForkBlock !== undefined && object.daoForkBlock !== null) {\n            message.daoForkBlock = String(object.daoForkBlock);\n        }\n        else {\n            message.daoForkBlock = \"\";\n        }\n        if (object.daoForkSupport !== undefined && object.daoForkSupport !== null) {\n            message.daoForkSupport = Boolean(object.daoForkSupport);\n        }\n        else {\n            message.daoForkSupport = false;\n        }\n        if (object.eip150Block !== undefined && object.eip150Block !== null) {\n            message.eip150Block = String(object.eip150Block);\n        }\n        else {\n            message.eip150Block = \"\";\n        }\n        if (object.eip150Hash !== undefined && object.eip150Hash !== null) {\n            message.eip150Hash = String(object.eip150Hash);\n        }\n        else {\n            message.eip150Hash = \"\";\n        }\n        if (object.eip155Block !== undefined && object.eip155Block !== null) {\n            message.eip155Block = String(object.eip155Block);\n        }\n        else {\n            message.eip155Block = \"\";\n        }\n        if (object.eip158Block !== undefined && object.eip158Block !== null) {\n            message.eip158Block = String(object.eip158Block);\n        }\n        else {\n            message.eip158Block = \"\";\n        }\n        if (object.byzantiumBlock !== undefined && object.byzantiumBlock !== null) {\n            message.byzantiumBlock = String(object.byzantiumBlock);\n        }\n        else {\n            message.byzantiumBlock = \"\";\n        }\n        if (object.constantinopleBlock !== undefined &&\n            object.constantinopleBlock !== null) {\n            message.constantinopleBlock = String(object.constantinopleBlock);\n        }\n        else {\n            message.constantinopleBlock = \"\";\n        }\n        if (object.petersburgBlock !== undefined &&\n            object.petersburgBlock !== null) {\n            message.petersburgBlock = String(object.petersburgBlock);\n        }\n        else {\n            message.petersburgBlock = \"\";\n        }\n        if (object.istanbulBlock !== undefined && object.istanbulBlock !== null) {\n            message.istanbulBlock = String(object.istanbulBlock);\n        }\n        else {\n            message.istanbulBlock = \"\";\n        }\n        if (object.muirGlacierBlock !== undefined &&\n            object.muirGlacierBlock !== null) {\n            message.muirGlacierBlock = String(object.muirGlacierBlock);\n        }\n        else {\n            message.muirGlacierBlock = \"\";\n        }\n        if (object.yoloV2Block !== undefined && object.yoloV2Block !== null) {\n            message.yoloV2Block = String(object.yoloV2Block);\n        }\n        else {\n            message.yoloV2Block = \"\";\n        }\n        if (object.ewasmBlock !== undefined && object.ewasmBlock !== null) {\n            message.ewasmBlock = String(object.ewasmBlock);\n        }\n        else {\n            message.ewasmBlock = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.homesteadBlock !== undefined &&\n            (obj.homesteadBlock = message.homesteadBlock);\n        message.daoForkBlock !== undefined &&\n            (obj.daoForkBlock = message.daoForkBlock);\n        message.daoForkSupport !== undefined &&\n            (obj.daoForkSupport = message.daoForkSupport);\n        message.eip150Block !== undefined &&\n            (obj.eip150Block = message.eip150Block);\n        message.eip150Hash !== undefined && (obj.eip150Hash = message.eip150Hash);\n        message.eip155Block !== undefined &&\n            (obj.eip155Block = message.eip155Block);\n        message.eip158Block !== undefined &&\n            (obj.eip158Block = message.eip158Block);\n        message.byzantiumBlock !== undefined &&\n            (obj.byzantiumBlock = message.byzantiumBlock);\n        message.constantinopleBlock !== undefined &&\n            (obj.constantinopleBlock = message.constantinopleBlock);\n        message.petersburgBlock !== undefined &&\n            (obj.petersburgBlock = message.petersburgBlock);\n        message.istanbulBlock !== undefined &&\n            (obj.istanbulBlock = message.istanbulBlock);\n        message.muirGlacierBlock !== undefined &&\n            (obj.muirGlacierBlock = message.muirGlacierBlock);\n        message.yoloV2Block !== undefined &&\n            (obj.yoloV2Block = message.yoloV2Block);\n        message.ewasmBlock !== undefined && (obj.ewasmBlock = message.ewasmBlock);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseChainConfig };\n        if (object.homesteadBlock !== undefined && object.homesteadBlock !== null) {\n            message.homesteadBlock = object.homesteadBlock;\n        }\n        else {\n            message.homesteadBlock = \"\";\n        }\n        if (object.daoForkBlock !== undefined && object.daoForkBlock !== null) {\n            message.daoForkBlock = object.daoForkBlock;\n        }\n        else {\n            message.daoForkBlock = \"\";\n        }\n        if (object.daoForkSupport !== undefined && object.daoForkSupport !== null) {\n            message.daoForkSupport = object.daoForkSupport;\n        }\n        else {\n            message.daoForkSupport = false;\n        }\n        if (object.eip150Block !== undefined && object.eip150Block !== null) {\n            message.eip150Block = object.eip150Block;\n        }\n        else {\n            message.eip150Block = \"\";\n        }\n        if (object.eip150Hash !== undefined && object.eip150Hash !== null) {\n            message.eip150Hash = object.eip150Hash;\n        }\n        else {\n            message.eip150Hash = \"\";\n        }\n        if (object.eip155Block !== undefined && object.eip155Block !== null) {\n            message.eip155Block = object.eip155Block;\n        }\n        else {\n            message.eip155Block = \"\";\n        }\n        if (object.eip158Block !== undefined && object.eip158Block !== null) {\n            message.eip158Block = object.eip158Block;\n        }\n        else {\n            message.eip158Block = \"\";\n        }\n        if (object.byzantiumBlock !== undefined && object.byzantiumBlock !== null) {\n            message.byzantiumBlock = object.byzantiumBlock;\n        }\n        else {\n            message.byzantiumBlock = \"\";\n        }\n        if (object.constantinopleBlock !== undefined &&\n            object.constantinopleBlock !== null) {\n            message.constantinopleBlock = object.constantinopleBlock;\n        }\n        else {\n            message.constantinopleBlock = \"\";\n        }\n        if (object.petersburgBlock !== undefined &&\n            object.petersburgBlock !== null) {\n            message.petersburgBlock = object.petersburgBlock;\n        }\n        else {\n            message.petersburgBlock = \"\";\n        }\n        if (object.istanbulBlock !== undefined && object.istanbulBlock !== null) {\n            message.istanbulBlock = object.istanbulBlock;\n        }\n        else {\n            message.istanbulBlock = \"\";\n        }\n        if (object.muirGlacierBlock !== undefined &&\n            object.muirGlacierBlock !== null) {\n            message.muirGlacierBlock = object.muirGlacierBlock;\n        }\n        else {\n            message.muirGlacierBlock = \"\";\n        }\n        if (object.yoloV2Block !== undefined && object.yoloV2Block !== null) {\n            message.yoloV2Block = object.yoloV2Block;\n        }\n        else {\n            message.yoloV2Block = \"\";\n        }\n        if (object.ewasmBlock !== undefined && object.ewasmBlock !== null) {\n            message.ewasmBlock = object.ewasmBlock;\n        }\n        else {\n            message.ewasmBlock = \"\";\n        }\n        return message;\n    },\n};\nconst baseState = { key: \"\", value: \"\" };\nexport const State = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseState };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseState };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n};\nconst baseTransactionLogs = { hash: \"\" };\nexport const TransactionLogs = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== \"\") {\n            writer.uint32(10).string(message.hash);\n        }\n        for (const v of message.logs) {\n            Log.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTransactionLogs };\n        message.logs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.string();\n                    break;\n                case 2:\n                    message.logs.push(Log.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTransactionLogs };\n        message.logs = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = String(object.hash);\n        }\n        else {\n            message.hash = \"\";\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(Log.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = message.hash);\n        if (message.logs) {\n            obj.logs = message.logs.map((e) => (e ? Log.toJSON(e) : undefined));\n        }\n        else {\n            obj.logs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTransactionLogs };\n        message.logs = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = \"\";\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(Log.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseLog = {\n    address: \"\",\n    topics: \"\",\n    blockNumber: 0,\n    txHash: \"\",\n    txIndex: 0,\n    blockHash: \"\",\n    index: 0,\n    removed: false,\n};\nexport const Log = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.topics) {\n            writer.uint32(18).string(v);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        if (message.blockNumber !== 0) {\n            writer.uint32(32).uint64(message.blockNumber);\n        }\n        if (message.txHash !== \"\") {\n            writer.uint32(42).string(message.txHash);\n        }\n        if (message.txIndex !== 0) {\n            writer.uint32(48).uint64(message.txIndex);\n        }\n        if (message.blockHash !== \"\") {\n            writer.uint32(58).string(message.blockHash);\n        }\n        if (message.index !== 0) {\n            writer.uint32(64).uint64(message.index);\n        }\n        if (message.removed === true) {\n            writer.uint32(72).bool(message.removed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLog };\n        message.topics = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.topics.push(reader.string());\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                case 4:\n                    message.blockNumber = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.txHash = reader.string();\n                    break;\n                case 6:\n                    message.txIndex = longToNumber(reader.uint64());\n                    break;\n                case 7:\n                    message.blockHash = reader.string();\n                    break;\n                case 8:\n                    message.index = longToNumber(reader.uint64());\n                    break;\n                case 9:\n                    message.removed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLog };\n        message.topics = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.topics !== undefined && object.topics !== null) {\n            for (const e of object.topics) {\n                message.topics.push(String(e));\n            }\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.blockNumber !== undefined && object.blockNumber !== null) {\n            message.blockNumber = Number(object.blockNumber);\n        }\n        else {\n            message.blockNumber = 0;\n        }\n        if (object.txHash !== undefined && object.txHash !== null) {\n            message.txHash = String(object.txHash);\n        }\n        else {\n            message.txHash = \"\";\n        }\n        if (object.txIndex !== undefined && object.txIndex !== null) {\n            message.txIndex = Number(object.txIndex);\n        }\n        else {\n            message.txIndex = 0;\n        }\n        if (object.blockHash !== undefined && object.blockHash !== null) {\n            message.blockHash = String(object.blockHash);\n        }\n        else {\n            message.blockHash = \"\";\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.removed !== undefined && object.removed !== null) {\n            message.removed = Boolean(object.removed);\n        }\n        else {\n            message.removed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.topics) {\n            obj.topics = message.topics.map((e) => e);\n        }\n        else {\n            obj.topics = [];\n        }\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.blockNumber !== undefined &&\n            (obj.blockNumber = message.blockNumber);\n        message.txHash !== undefined && (obj.txHash = message.txHash);\n        message.txIndex !== undefined && (obj.txIndex = message.txIndex);\n        message.blockHash !== undefined && (obj.blockHash = message.blockHash);\n        message.index !== undefined && (obj.index = message.index);\n        message.removed !== undefined && (obj.removed = message.removed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLog };\n        message.topics = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.topics !== undefined && object.topics !== null) {\n            for (const e of object.topics) {\n                message.topics.push(e);\n            }\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.blockNumber !== undefined && object.blockNumber !== null) {\n            message.blockNumber = object.blockNumber;\n        }\n        else {\n            message.blockNumber = 0;\n        }\n        if (object.txHash !== undefined && object.txHash !== null) {\n            message.txHash = object.txHash;\n        }\n        else {\n            message.txHash = \"\";\n        }\n        if (object.txIndex !== undefined && object.txIndex !== null) {\n            message.txIndex = object.txIndex;\n        }\n        else {\n            message.txIndex = 0;\n        }\n        if (object.blockHash !== undefined && object.blockHash !== null) {\n            message.blockHash = object.blockHash;\n        }\n        else {\n            message.blockHash = \"\";\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.removed !== undefined && object.removed !== null) {\n            message.removed = object.removed;\n        }\n        else {\n            message.removed = false;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { DecCoin, Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.distribution.v1beta1\";\nconst baseParams = {\n    communityTax: \"\",\n    baseProposerReward: \"\",\n    bonusProposerReward: \"\",\n    withdrawAddrEnabled: false,\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.communityTax !== \"\") {\n            writer.uint32(10).string(message.communityTax);\n        }\n        if (message.baseProposerReward !== \"\") {\n            writer.uint32(18).string(message.baseProposerReward);\n        }\n        if (message.bonusProposerReward !== \"\") {\n            writer.uint32(26).string(message.bonusProposerReward);\n        }\n        if (message.withdrawAddrEnabled === true) {\n            writer.uint32(32).bool(message.withdrawAddrEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityTax = reader.string();\n                    break;\n                case 2:\n                    message.baseProposerReward = reader.string();\n                    break;\n                case 3:\n                    message.bonusProposerReward = reader.string();\n                    break;\n                case 4:\n                    message.withdrawAddrEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = String(object.communityTax);\n        }\n        else {\n            message.communityTax = \"\";\n        }\n        if (object.baseProposerReward !== undefined &&\n            object.baseProposerReward !== null) {\n            message.baseProposerReward = String(object.baseProposerReward);\n        }\n        else {\n            message.baseProposerReward = \"\";\n        }\n        if (object.bonusProposerReward !== undefined &&\n            object.bonusProposerReward !== null) {\n            message.bonusProposerReward = String(object.bonusProposerReward);\n        }\n        else {\n            message.bonusProposerReward = \"\";\n        }\n        if (object.withdrawAddrEnabled !== undefined &&\n            object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = Boolean(object.withdrawAddrEnabled);\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.communityTax !== undefined &&\n            (obj.communityTax = message.communityTax);\n        message.baseProposerReward !== undefined &&\n            (obj.baseProposerReward = message.baseProposerReward);\n        message.bonusProposerReward !== undefined &&\n            (obj.bonusProposerReward = message.bonusProposerReward);\n        message.withdrawAddrEnabled !== undefined &&\n            (obj.withdrawAddrEnabled = message.withdrawAddrEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = object.communityTax;\n        }\n        else {\n            message.communityTax = \"\";\n        }\n        if (object.baseProposerReward !== undefined &&\n            object.baseProposerReward !== null) {\n            message.baseProposerReward = object.baseProposerReward;\n        }\n        else {\n            message.baseProposerReward = \"\";\n        }\n        if (object.bonusProposerReward !== undefined &&\n            object.bonusProposerReward !== null) {\n            message.bonusProposerReward = object.bonusProposerReward;\n        }\n        else {\n            message.bonusProposerReward = \"\";\n        }\n        if (object.withdrawAddrEnabled !== undefined &&\n            object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = object.withdrawAddrEnabled;\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    },\n};\nconst baseValidatorHistoricalRewards = { referenceCount: 0 };\nexport const ValidatorHistoricalRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.cumulativeRewardRatio) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.referenceCount !== 0) {\n            writer.uint32(16).uint32(message.referenceCount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorHistoricalRewards,\n        };\n        message.cumulativeRewardRatio = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cumulativeRewardRatio.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.referenceCount = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorHistoricalRewards,\n        };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined &&\n            object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = Number(object.referenceCount);\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.cumulativeRewardRatio) {\n            obj.cumulativeRewardRatio = message.cumulativeRewardRatio.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.cumulativeRewardRatio = [];\n        }\n        message.referenceCount !== undefined &&\n            (obj.referenceCount = message.referenceCount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorHistoricalRewards,\n        };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined &&\n            object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = object.referenceCount;\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorCurrentRewards = { period: 0 };\nexport const ValidatorCurrentRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorCurrentRewards,\n        };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorCurrentRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.rewards = [];\n        }\n        message.period !== undefined && (obj.period = message.period);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorCurrentRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorAccumulatedCommission = {};\nexport const ValidatorAccumulatedCommission = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.commission) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorAccumulatedCommission,\n        };\n        message.commission = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commission.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommission,\n        };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.commission) {\n            obj.commission = message.commission.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.commission = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommission,\n        };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseValidatorOutstandingRewards = {};\nexport const ValidatorOutstandingRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorOutstandingRewards,\n        };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorOutstandingRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.rewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorOutstandingRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseValidatorSlashEvent = { validatorPeriod: 0, fraction: \"\" };\nexport const ValidatorSlashEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorPeriod !== 0) {\n            writer.uint32(8).uint64(message.validatorPeriod);\n        }\n        if (message.fraction !== \"\") {\n            writer.uint32(18).string(message.fraction);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvent };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.fraction = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined &&\n            object.validatorPeriod !== null) {\n            message.validatorPeriod = Number(object.validatorPeriod);\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = String(object.fraction);\n        }\n        else {\n            message.fraction = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorPeriod !== undefined &&\n            (obj.validatorPeriod = message.validatorPeriod);\n        message.fraction !== undefined && (obj.fraction = message.fraction);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined &&\n            object.validatorPeriod !== null) {\n            message.validatorPeriod = object.validatorPeriod;\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = object.fraction;\n        }\n        else {\n            message.fraction = \"\";\n        }\n        return message;\n    },\n};\nconst baseValidatorSlashEvents = {};\nexport const ValidatorSlashEvents = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEvent.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorSlashEvents.push(ValidatorSlashEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => e ? ValidatorSlashEvent.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseFeePool = {};\nexport const FeePool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.communityPool) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityPool.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.communityPool) {\n            obj.communityPool = message.communityPool.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.communityPool = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommunityPoolSpendProposal = {\n    title: \"\",\n    description: \"\",\n    recipient: \"\",\n};\nexport const CommunityPoolSpendProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== \"\") {\n            writer.uint32(26).string(message.recipient);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCommunityPoolSpendProposal,\n        };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposal,\n        };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposal,\n        };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDelegatorStartingInfo = {\n    previousPeriod: 0,\n    stake: \"\",\n    height: 0,\n};\nexport const DelegatorStartingInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.previousPeriod !== 0) {\n            writer.uint32(8).uint64(message.previousPeriod);\n        }\n        if (message.stake !== \"\") {\n            writer.uint32(18).string(message.stake);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).uint64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorStartingInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.previousPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.stake = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = Number(object.previousPeriod);\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = String(object.stake);\n        }\n        else {\n            message.stake = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.previousPeriod !== undefined &&\n            (obj.previousPeriod = message.previousPeriod);\n        message.stake !== undefined && (obj.stake = message.stake);\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = object.previousPeriod;\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = object.stake;\n        }\n        else {\n            message.stake = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n};\nconst baseDelegationDelegatorReward = { validatorAddress: \"\" };\nexport const DelegationDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.reward) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseDelegationDelegatorReward,\n        };\n        message.reward = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.reward.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseDelegationDelegatorReward,\n        };\n        message.reward = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.reward) {\n            obj.reward = message.reward.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.reward = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseDelegationDelegatorReward,\n        };\n        message.reward = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommunityPoolSpendProposalWithDeposit = {\n    title: \"\",\n    description: \"\",\n    recipient: \"\",\n    amount: \"\",\n    deposit: \"\",\n};\nexport const CommunityPoolSpendProposalWithDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== \"\") {\n            writer.uint32(26).string(message.recipient);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(34).string(message.amount);\n        }\n        if (message.deposit !== \"\") {\n            writer.uint32(42).string(message.deposit);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount = reader.string();\n                    break;\n                case 5:\n                    message.deposit = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit,\n        };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = String(object.deposit);\n        }\n        else {\n            message.deposit = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.deposit !== undefined && (obj.deposit = message.deposit);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit,\n        };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = object.deposit;\n        }\n        else {\n            message.deposit = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Duration } from \"../../../google/protobuf/duration\";\nexport const protobufPackage = \"cosmos.slashing.v1beta1\";\nconst baseValidatorSigningInfo = {\n    address: \"\",\n    startHeight: 0,\n    indexOffset: 0,\n    tombstoned: false,\n    missedBlocksCounter: 0,\n};\nexport const ValidatorSigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.startHeight !== 0) {\n            writer.uint32(16).int64(message.startHeight);\n        }\n        if (message.indexOffset !== 0) {\n            writer.uint32(24).int64(message.indexOffset);\n        }\n        if (message.jailedUntil !== undefined) {\n            Timestamp.encode(toTimestamp(message.jailedUntil), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.tombstoned === true) {\n            writer.uint32(40).bool(message.tombstoned);\n        }\n        if (message.missedBlocksCounter !== 0) {\n            writer.uint32(48).int64(message.missedBlocksCounter);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.startHeight = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.indexOffset = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.jailedUntil = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.tombstoned = reader.bool();\n                    break;\n                case 6:\n                    message.missedBlocksCounter = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = Number(object.startHeight);\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = Number(object.indexOffset);\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = fromJsonTimestamp(object.jailedUntil);\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = Boolean(object.tombstoned);\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined &&\n            object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = Number(object.missedBlocksCounter);\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.startHeight !== undefined &&\n            (obj.startHeight = message.startHeight);\n        message.indexOffset !== undefined &&\n            (obj.indexOffset = message.indexOffset);\n        message.jailedUntil !== undefined &&\n            (obj.jailedUntil =\n                message.jailedUntil !== undefined\n                    ? message.jailedUntil.toISOString()\n                    : null);\n        message.tombstoned !== undefined && (obj.tombstoned = message.tombstoned);\n        message.missedBlocksCounter !== undefined &&\n            (obj.missedBlocksCounter = message.missedBlocksCounter);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = object.startHeight;\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = object.indexOffset;\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = object.jailedUntil;\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = object.tombstoned;\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined &&\n            object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = object.missedBlocksCounter;\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { signedBlocksWindow: 0 };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedBlocksWindow !== 0) {\n            writer.uint32(8).int64(message.signedBlocksWindow);\n        }\n        if (message.minSignedPerWindow.length !== 0) {\n            writer.uint32(18).bytes(message.minSignedPerWindow);\n        }\n        if (message.downtimeJailDuration !== undefined) {\n            Duration.encode(message.downtimeJailDuration, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.slashFractionDoubleSign.length !== 0) {\n            writer.uint32(34).bytes(message.slashFractionDoubleSign);\n        }\n        if (message.slashFractionDowntime.length !== 0) {\n            writer.uint32(42).bytes(message.slashFractionDowntime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedBlocksWindow = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.minSignedPerWindow = reader.bytes();\n                    break;\n                case 3:\n                    message.downtimeJailDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.slashFractionDoubleSign = reader.bytes();\n                    break;\n                case 5:\n                    message.slashFractionDowntime = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined &&\n            object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = Number(object.signedBlocksWindow);\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined &&\n            object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = bytesFromBase64(object.minSignedPerWindow);\n        }\n        if (object.downtimeJailDuration !== undefined &&\n            object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromJSON(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined &&\n            object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = bytesFromBase64(object.slashFractionDoubleSign);\n        }\n        if (object.slashFractionDowntime !== undefined &&\n            object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = bytesFromBase64(object.slashFractionDowntime);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedBlocksWindow !== undefined &&\n            (obj.signedBlocksWindow = message.signedBlocksWindow);\n        message.minSignedPerWindow !== undefined &&\n            (obj.minSignedPerWindow = base64FromBytes(message.minSignedPerWindow !== undefined\n                ? message.minSignedPerWindow\n                : new Uint8Array()));\n        message.downtimeJailDuration !== undefined &&\n            (obj.downtimeJailDuration = message.downtimeJailDuration\n                ? Duration.toJSON(message.downtimeJailDuration)\n                : undefined);\n        message.slashFractionDoubleSign !== undefined &&\n            (obj.slashFractionDoubleSign = base64FromBytes(message.slashFractionDoubleSign !== undefined\n                ? message.slashFractionDoubleSign\n                : new Uint8Array()));\n        message.slashFractionDowntime !== undefined &&\n            (obj.slashFractionDowntime = base64FromBytes(message.slashFractionDowntime !== undefined\n                ? message.slashFractionDowntime\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined &&\n            object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = object.signedBlocksWindow;\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined &&\n            object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = object.minSignedPerWindow;\n        }\n        else {\n            message.minSignedPerWindow = new Uint8Array();\n        }\n        if (object.downtimeJailDuration !== undefined &&\n            object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromPartial(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined &&\n            object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = object.slashFractionDoubleSign;\n        }\n        else {\n            message.slashFractionDoubleSign = new Uint8Array();\n        }\n        if (object.slashFractionDowntime !== undefined &&\n            object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = object.slashFractionDowntime;\n        }\n        else {\n            message.slashFractionDowntime = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Any } from \"../../../google/protobuf/any\";\nexport const protobufPackage = \"cosmos.evidence.v1beta1\";\nconst baseMsgSubmitEvidence = { submitter: \"\" };\nexport const MsgSubmitEvidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.submitter !== \"\") {\n            writer.uint32(10).string(message.submitter);\n        }\n        if (message.evidence !== undefined) {\n            Any.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.submitter = reader.string();\n                    break;\n                case 2:\n                    message.evidence = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = String(object.submitter);\n        }\n        else {\n            message.submitter = \"\";\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.submitter !== undefined && (obj.submitter = message.submitter);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? Any.toJSON(message.evidence)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = object.submitter;\n        }\n        else {\n            message.submitter = \"\";\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgSubmitEvidenceResponse = {};\nexport const MsgSubmitEvidenceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitEvidenceResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgSubmitEvidenceResponse,\n        };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgSubmitEvidenceResponse,\n        };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitEvidence(request) {\n        const data = MsgSubmitEvidence.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.evidence.v1beta1.Msg\", \"SubmitEvidence\", data);\n        return promise.then((data) => MsgSubmitEvidenceResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { DecCoin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { ValidatorAccumulatedCommission, ValidatorHistoricalRewards, ValidatorCurrentRewards, DelegatorStartingInfo, ValidatorSlashEvent, Params, FeePool, } from \"../../../cosmos/distribution/v1beta1/distribution\";\nexport const protobufPackage = \"cosmos.distribution.v1beta1\";\nconst baseDelegatorWithdrawInfo = {\n    delegatorAddress: \"\",\n    withdrawAddress: \"\",\n};\nexport const DelegatorWithdrawInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== \"\") {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorWithdrawInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined &&\n            (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseValidatorOutstandingRewardsRecord = { validatorAddress: \"\" };\nexport const ValidatorOutstandingRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.outstandingRewards) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord,\n        };\n        message.outstandingRewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.outstandingRewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord,\n        };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord,\n        };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseValidatorAccumulatedCommissionRecord = {\n    validatorAddress: \"\",\n};\nexport const ValidatorAccumulatedCommissionRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.accumulated !== undefined) {\n            ValidatorAccumulatedCommission.encode(message.accumulated, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.accumulated = ValidatorAccumulatedCommission.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromJSON(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.accumulated !== undefined &&\n            (obj.accumulated = message.accumulated\n                ? ValidatorAccumulatedCommission.toJSON(message.accumulated)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromPartial(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorHistoricalRewardsRecord = {\n    validatorAddress: \"\",\n    period: 0,\n};\nexport const ValidatorHistoricalRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorHistoricalRewards.encode(message.rewards, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.rewards = ValidatorHistoricalRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.period !== undefined && (obj.period = message.period);\n        message.rewards !== undefined &&\n            (obj.rewards = message.rewards\n                ? ValidatorHistoricalRewards.toJSON(message.rewards)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorCurrentRewardsRecord = { validatorAddress: \"\" };\nexport const ValidatorCurrentRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorCurrentRewards.encode(message.rewards, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorCurrentRewardsRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.rewards = ValidatorCurrentRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorCurrentRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.rewards !== undefined &&\n            (obj.rewards = message.rewards\n                ? ValidatorCurrentRewards.toJSON(message.rewards)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorCurrentRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n};\nconst baseDelegatorStartingInfoRecord = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const DelegatorStartingInfoRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.startingInfo !== undefined) {\n            DelegatorStartingInfo.encode(message.startingInfo, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseDelegatorStartingInfoRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.startingInfo = DelegatorStartingInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseDelegatorStartingInfoRecord,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromJSON(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.startingInfo !== undefined &&\n            (obj.startingInfo = message.startingInfo\n                ? DelegatorStartingInfo.toJSON(message.startingInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseDelegatorStartingInfoRecord,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromPartial(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorSlashEventRecord = {\n    validatorAddress: \"\",\n    height: 0,\n    period: 0,\n};\nexport const ValidatorSlashEventRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).uint64(message.height);\n        }\n        if (message.period !== 0) {\n            writer.uint32(24).uint64(message.period);\n        }\n        if (message.validatorSlashEvent !== undefined) {\n            ValidatorSlashEvent.encode(message.validatorSlashEvent, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorSlashEventRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.validatorSlashEvent = ValidatorSlashEvent.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorSlashEventRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined &&\n            object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromJSON(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.height !== undefined && (obj.height = message.height);\n        message.period !== undefined && (obj.period = message.period);\n        message.validatorSlashEvent !== undefined &&\n            (obj.validatorSlashEvent = message.validatorSlashEvent\n                ? ValidatorSlashEvent.toJSON(message.validatorSlashEvent)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorSlashEventRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined &&\n            object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromPartial(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    },\n};\nconst baseGenesisState = { previousProposer: \"\" };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.feePool !== undefined) {\n            FeePool.encode(message.feePool, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatorWithdrawInfos) {\n            DelegatorWithdrawInfo.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.previousProposer !== \"\") {\n            writer.uint32(34).string(message.previousProposer);\n        }\n        for (const v of message.outstandingRewards) {\n            ValidatorOutstandingRewardsRecord.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.validatorAccumulatedCommissions) {\n            ValidatorAccumulatedCommissionRecord.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.validatorHistoricalRewards) {\n            ValidatorHistoricalRewardsRecord.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        for (const v of message.validatorCurrentRewards) {\n            ValidatorCurrentRewardsRecord.encode(v, writer.uint32(66).fork()).ldelim();\n        }\n        for (const v of message.delegatorStartingInfos) {\n            DelegatorStartingInfoRecord.encode(v, writer.uint32(74).fork()).ldelim();\n        }\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEventRecord.encode(v, writer.uint32(82).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.feePool = FeePool.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.previousProposer = reader.string();\n                    break;\n                case 5:\n                    message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.validatorSlashEvents.push(ValidatorSlashEventRecord.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromJSON(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined &&\n            object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromJSON(e));\n            }\n        }\n        if (object.previousProposer !== undefined &&\n            object.previousProposer !== null) {\n            message.previousProposer = String(object.previousProposer);\n        }\n        else {\n            message.previousProposer = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined &&\n            object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined &&\n            object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined &&\n            object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined &&\n            object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.feePool !== undefined &&\n            (obj.feePool = message.feePool\n                ? FeePool.toJSON(message.feePool)\n                : undefined);\n        if (message.delegatorWithdrawInfos) {\n            obj.delegatorWithdrawInfos = message.delegatorWithdrawInfos.map((e) => e ? DelegatorWithdrawInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatorWithdrawInfos = [];\n        }\n        message.previousProposer !== undefined &&\n            (obj.previousProposer = message.previousProposer);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => e ? ValidatorOutstandingRewardsRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        if (message.validatorAccumulatedCommissions) {\n            obj.validatorAccumulatedCommissions = message.validatorAccumulatedCommissions.map((e) => (e ? ValidatorAccumulatedCommissionRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorAccumulatedCommissions = [];\n        }\n        if (message.validatorHistoricalRewards) {\n            obj.validatorHistoricalRewards = message.validatorHistoricalRewards.map((e) => (e ? ValidatorHistoricalRewardsRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorHistoricalRewards = [];\n        }\n        if (message.validatorCurrentRewards) {\n            obj.validatorCurrentRewards = message.validatorCurrentRewards.map((e) => e ? ValidatorCurrentRewardsRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorCurrentRewards = [];\n        }\n        if (message.delegatorStartingInfos) {\n            obj.delegatorStartingInfos = message.delegatorStartingInfos.map((e) => e ? DelegatorStartingInfoRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatorStartingInfos = [];\n        }\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => e ? ValidatorSlashEventRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromPartial(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined &&\n            object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromPartial(e));\n            }\n        }\n        if (object.previousProposer !== undefined &&\n            object.previousProposer !== null) {\n            message.previousProposer = object.previousProposer;\n        }\n        else {\n            message.previousProposer = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined &&\n            object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined &&\n            object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined &&\n            object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined &&\n            object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.vesting.v1beta1\";\nconst baseMsgCreateVestingAccount = {\n    fromAddress: \"\",\n    toAddress: \"\",\n    endTime: 0,\n    delayed: false,\n};\nexport const MsgCreateVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== \"\") {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== \"\") {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(32).int64(message.endTime);\n        }\n        if (message.delayed === true) {\n            writer.uint32(40).bool(message.delayed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateVestingAccount,\n        };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.delayed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgCreateVestingAccount,\n        };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = Boolean(object.delayed);\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined &&\n            (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        message.delayed !== undefined && (obj.delayed = message.delayed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgCreateVestingAccount,\n        };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = object.delayed;\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    },\n};\nconst baseMsgCreateVestingAccountResponse = {};\nexport const MsgCreateVestingAccountResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateVestingAccountResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateVestingAccountResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateVestingAccountResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateVestingAccount(request) {\n        const data = MsgCreateVestingAccount.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.vesting.v1beta1.Msg\", \"CreateVestingAccount\", data);\n        return promise.then((data) => MsgCreateVestingAccountResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Channel, Packet } from \"../../../../ibc/core/channel/v1/channel\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.channel.v1\";\nconst baseMsgChannelOpenInit = { portId: \"\", signer: \"\" };\nexport const MsgChannelOpenInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channel !== undefined) {\n            Channel.encode(message.channel, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channel = Channel.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromJSON(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channel !== undefined &&\n            (obj.channel = message.channel\n                ? Channel.toJSON(message.channel)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromPartial(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenInitResponse = {};\nexport const MsgChannelOpenInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenInitResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenInitResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenInitResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelOpenTry = {\n    portId: \"\",\n    previousChannelId: \"\",\n    counterpartyVersion: \"\",\n    signer: \"\",\n};\nexport const MsgChannelOpenTry = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.previousChannelId !== \"\") {\n            writer.uint32(18).string(message.previousChannelId);\n        }\n        if (message.channel !== undefined) {\n            Channel.encode(message.channel, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterpartyVersion !== \"\") {\n            writer.uint32(34).string(message.counterpartyVersion);\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(42).bytes(message.proofInit);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(58).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenTry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.previousChannelId = reader.string();\n                    break;\n                case 3:\n                    message.channel = Channel.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterpartyVersion = reader.string();\n                    break;\n                case 5:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 6:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenTry };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.previousChannelId !== undefined &&\n            object.previousChannelId !== null) {\n            message.previousChannelId = String(object.previousChannelId);\n        }\n        else {\n            message.previousChannelId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromJSON(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = String(object.counterpartyVersion);\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.previousChannelId !== undefined &&\n            (obj.previousChannelId = message.previousChannelId);\n        message.channel !== undefined &&\n            (obj.channel = message.channel\n                ? Channel.toJSON(message.channel)\n                : undefined);\n        message.counterpartyVersion !== undefined &&\n            (obj.counterpartyVersion = message.counterpartyVersion);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenTry };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.previousChannelId !== undefined &&\n            object.previousChannelId !== null) {\n            message.previousChannelId = object.previousChannelId;\n        }\n        else {\n            message.previousChannelId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromPartial(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = object.counterpartyVersion;\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenTryResponse = {};\nexport const MsgChannelOpenTryResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenTryResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenTryResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenTryResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelOpenAck = {\n    portId: \"\",\n    channelId: \"\",\n    counterpartyChannelId: \"\",\n    counterpartyVersion: \"\",\n    signer: \"\",\n};\nexport const MsgChannelOpenAck = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.counterpartyChannelId !== \"\") {\n            writer.uint32(26).string(message.counterpartyChannelId);\n        }\n        if (message.counterpartyVersion !== \"\") {\n            writer.uint32(34).string(message.counterpartyVersion);\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(42).bytes(message.proofTry);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(58).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenAck };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.counterpartyChannelId = reader.string();\n                    break;\n                case 4:\n                    message.counterpartyVersion = reader.string();\n                    break;\n                case 5:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 6:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenAck };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.counterpartyChannelId !== undefined &&\n            object.counterpartyChannelId !== null) {\n            message.counterpartyChannelId = String(object.counterpartyChannelId);\n        }\n        else {\n            message.counterpartyChannelId = \"\";\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = String(object.counterpartyVersion);\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = bytesFromBase64(object.proofTry);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.counterpartyChannelId !== undefined &&\n            (obj.counterpartyChannelId = message.counterpartyChannelId);\n        message.counterpartyVersion !== undefined &&\n            (obj.counterpartyVersion = message.counterpartyVersion);\n        message.proofTry !== undefined &&\n            (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenAck };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.counterpartyChannelId !== undefined &&\n            object.counterpartyChannelId !== null) {\n            message.counterpartyChannelId = object.counterpartyChannelId;\n        }\n        else {\n            message.counterpartyChannelId = \"\";\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = object.counterpartyVersion;\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = object.proofTry;\n        }\n        else {\n            message.proofTry = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenAckResponse = {};\nexport const MsgChannelOpenAckResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenAckResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenAckResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenAckResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelOpenConfirm = {\n    portId: \"\",\n    channelId: \"\",\n    signer: \"\",\n};\nexport const MsgChannelOpenConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(26).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenConfirm };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = bytesFromBase64(object.proofAck);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = object.proofAck;\n        }\n        else {\n            message.proofAck = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenConfirmResponse = {};\nexport const MsgChannelOpenConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelCloseInit = {\n    portId: \"\",\n    channelId: \"\",\n    signer: \"\",\n};\nexport const MsgChannelCloseInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelCloseInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelCloseInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelCloseInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelCloseInitResponse = {};\nexport const MsgChannelCloseInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelCloseInitResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelCloseInitResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelCloseInitResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelCloseConfirm = {\n    portId: \"\",\n    channelId: \"\",\n    signer: \"\",\n};\nexport const MsgChannelCloseConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(26).bytes(message.proofInit);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelCloseConfirm };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelCloseConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelCloseConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelCloseConfirmResponse = {};\nexport const MsgChannelCloseConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgRecvPacket = { signer: \"\" };\nexport const MsgRecvPacket = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofCommitment.length !== 0) {\n            writer.uint32(18).bytes(message.proofCommitment);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRecvPacket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofCommitment = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRecvPacket };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofCommitment !== undefined &&\n            object.proofCommitment !== null) {\n            message.proofCommitment = bytesFromBase64(object.proofCommitment);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofCommitment !== undefined &&\n            (obj.proofCommitment = base64FromBytes(message.proofCommitment !== undefined\n                ? message.proofCommitment\n                : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRecvPacket };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofCommitment !== undefined &&\n            object.proofCommitment !== null) {\n            message.proofCommitment = object.proofCommitment;\n        }\n        else {\n            message.proofCommitment = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgRecvPacketResponse = {};\nexport const MsgRecvPacketResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRecvPacketResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgRecvPacketResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgRecvPacketResponse };\n        return message;\n    },\n};\nconst baseMsgTimeout = { nextSequenceRecv: 0, signer: \"\" };\nexport const MsgTimeout = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofUnreceived.length !== 0) {\n            writer.uint32(18).bytes(message.proofUnreceived);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.nextSequenceRecv !== 0) {\n            writer.uint32(32).uint64(message.nextSequenceRecv);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeout };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofUnreceived = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.nextSequenceRecv = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTimeout };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = bytesFromBase64(object.proofUnreceived);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = Number(object.nextSequenceRecv);\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofUnreceived !== undefined &&\n            (obj.proofUnreceived = base64FromBytes(message.proofUnreceived !== undefined\n                ? message.proofUnreceived\n                : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.nextSequenceRecv !== undefined &&\n            (obj.nextSequenceRecv = message.nextSequenceRecv);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTimeout };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = object.proofUnreceived;\n        }\n        else {\n            message.proofUnreceived = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = object.nextSequenceRecv;\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgTimeoutResponse = {};\nexport const MsgTimeoutResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeoutResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTimeoutResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTimeoutResponse };\n        return message;\n    },\n};\nconst baseMsgTimeoutOnClose = { nextSequenceRecv: 0, signer: \"\" };\nexport const MsgTimeoutOnClose = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofUnreceived.length !== 0) {\n            writer.uint32(18).bytes(message.proofUnreceived);\n        }\n        if (message.proofClose.length !== 0) {\n            writer.uint32(26).bytes(message.proofClose);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.nextSequenceRecv !== 0) {\n            writer.uint32(40).uint64(message.nextSequenceRecv);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(50).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeoutOnClose };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofUnreceived = reader.bytes();\n                    break;\n                case 3:\n                    message.proofClose = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.nextSequenceRecv = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTimeoutOnClose };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = bytesFromBase64(object.proofUnreceived);\n        }\n        if (object.proofClose !== undefined && object.proofClose !== null) {\n            message.proofClose = bytesFromBase64(object.proofClose);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = Number(object.nextSequenceRecv);\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofUnreceived !== undefined &&\n            (obj.proofUnreceived = base64FromBytes(message.proofUnreceived !== undefined\n                ? message.proofUnreceived\n                : new Uint8Array()));\n        message.proofClose !== undefined &&\n            (obj.proofClose = base64FromBytes(message.proofClose !== undefined ? message.proofClose : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.nextSequenceRecv !== undefined &&\n            (obj.nextSequenceRecv = message.nextSequenceRecv);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTimeoutOnClose };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = object.proofUnreceived;\n        }\n        else {\n            message.proofUnreceived = new Uint8Array();\n        }\n        if (object.proofClose !== undefined && object.proofClose !== null) {\n            message.proofClose = object.proofClose;\n        }\n        else {\n            message.proofClose = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = object.nextSequenceRecv;\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgTimeoutOnCloseResponse = {};\nexport const MsgTimeoutOnCloseResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgAcknowledgement = { signer: \"\" };\nexport const MsgAcknowledgement = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.acknowledgement.length !== 0) {\n            writer.uint32(18).bytes(message.acknowledgement);\n        }\n        if (message.proofAcked.length !== 0) {\n            writer.uint32(26).bytes(message.proofAcked);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgAcknowledgement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.acknowledgement = reader.bytes();\n                    break;\n                case 3:\n                    message.proofAcked = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgAcknowledgement };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.acknowledgement !== undefined &&\n            object.acknowledgement !== null) {\n            message.acknowledgement = bytesFromBase64(object.acknowledgement);\n        }\n        if (object.proofAcked !== undefined && object.proofAcked !== null) {\n            message.proofAcked = bytesFromBase64(object.proofAcked);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.acknowledgement !== undefined &&\n            (obj.acknowledgement = base64FromBytes(message.acknowledgement !== undefined\n                ? message.acknowledgement\n                : new Uint8Array()));\n        message.proofAcked !== undefined &&\n            (obj.proofAcked = base64FromBytes(message.proofAcked !== undefined ? message.proofAcked : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgAcknowledgement };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.acknowledgement !== undefined &&\n            object.acknowledgement !== null) {\n            message.acknowledgement = object.acknowledgement;\n        }\n        else {\n            message.acknowledgement = new Uint8Array();\n        }\n        if (object.proofAcked !== undefined && object.proofAcked !== null) {\n            message.proofAcked = object.proofAcked;\n        }\n        else {\n            message.proofAcked = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgAcknowledgementResponse = {};\nexport const MsgAcknowledgementResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgAcknowledgementResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgAcknowledgementResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgAcknowledgementResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ChannelOpenInit(request) {\n        const data = MsgChannelOpenInit.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenInit\", data);\n        return promise.then((data) => MsgChannelOpenInitResponse.decode(new Reader(data)));\n    }\n    ChannelOpenTry(request) {\n        const data = MsgChannelOpenTry.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenTry\", data);\n        return promise.then((data) => MsgChannelOpenTryResponse.decode(new Reader(data)));\n    }\n    ChannelOpenAck(request) {\n        const data = MsgChannelOpenAck.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenAck\", data);\n        return promise.then((data) => MsgChannelOpenAckResponse.decode(new Reader(data)));\n    }\n    ChannelOpenConfirm(request) {\n        const data = MsgChannelOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenConfirm\", data);\n        return promise.then((data) => MsgChannelOpenConfirmResponse.decode(new Reader(data)));\n    }\n    ChannelCloseInit(request) {\n        const data = MsgChannelCloseInit.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelCloseInit\", data);\n        return promise.then((data) => MsgChannelCloseInitResponse.decode(new Reader(data)));\n    }\n    ChannelCloseConfirm(request) {\n        const data = MsgChannelCloseConfirm.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelCloseConfirm\", data);\n        return promise.then((data) => MsgChannelCloseConfirmResponse.decode(new Reader(data)));\n    }\n    RecvPacket(request) {\n        const data = MsgRecvPacket.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"RecvPacket\", data);\n        return promise.then((data) => MsgRecvPacketResponse.decode(new Reader(data)));\n    }\n    Timeout(request) {\n        const data = MsgTimeout.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"Timeout\", data);\n        return promise.then((data) => MsgTimeoutResponse.decode(new Reader(data)));\n    }\n    TimeoutOnClose(request) {\n        const data = MsgTimeoutOnClose.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"TimeoutOnClose\", data);\n        return promise.then((data) => MsgTimeoutOnCloseResponse.decode(new Reader(data)));\n    }\n    Acknowledgement(request) {\n        const data = MsgAcknowledgement.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"Acknowledgement\", data);\n        return promise.then((data) => MsgAcknowledgementResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    clientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../google/protobuf/any\";\nexport const protobufPackage = \"cosmos.auth.v1beta1\";\nconst baseBaseAccount = { address: \"\", accountNumber: 0, sequence: 0 };\nexport const BaseAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            Any.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.accountNumber !== 0) {\n            writer.uint32(24).uint64(message.accountNumber);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(32).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.pubKey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.accountNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = Number(object.accountNumber);\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey ? Any.toJSON(message.pubKey) : undefined);\n        message.accountNumber !== undefined &&\n            (obj.accountNumber = message.accountNumber);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = object.accountNumber;\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n};\nconst baseModuleAccount = { name: \"\", permissions: \"\" };\nexport const ModuleAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.name !== \"\") {\n            writer.uint32(18).string(message.name);\n        }\n        for (const v of message.permissions) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.permissions.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = \"\";\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined &&\n            (obj.baseAccount = message.baseAccount\n                ? BaseAccount.toJSON(message.baseAccount)\n                : undefined);\n        message.name !== undefined && (obj.name = message.name);\n        if (message.permissions) {\n            obj.permissions = message.permissions.map((e) => e);\n        }\n        else {\n            obj.permissions = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = \"\";\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseParams = {\n    maxMemoCharacters: 0,\n    txSigLimit: 0,\n    txSizeCostPerByte: 0,\n    sigVerifyCostEd25519: 0,\n    sigVerifyCostSecp256k1: 0,\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxMemoCharacters !== 0) {\n            writer.uint32(8).uint64(message.maxMemoCharacters);\n        }\n        if (message.txSigLimit !== 0) {\n            writer.uint32(16).uint64(message.txSigLimit);\n        }\n        if (message.txSizeCostPerByte !== 0) {\n            writer.uint32(24).uint64(message.txSizeCostPerByte);\n        }\n        if (message.sigVerifyCostEd25519 !== 0) {\n            writer.uint32(32).uint64(message.sigVerifyCostEd25519);\n        }\n        if (message.sigVerifyCostSecp256k1 !== 0) {\n            writer.uint32(40).uint64(message.sigVerifyCostSecp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxMemoCharacters = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.txSigLimit = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.txSizeCostPerByte = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sigVerifyCostEd25519 = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.sigVerifyCostSecp256k1 = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined &&\n            object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = Number(object.maxMemoCharacters);\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = Number(object.txSigLimit);\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined &&\n            object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = Number(object.txSizeCostPerByte);\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined &&\n            object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = Number(object.sigVerifyCostEd25519);\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined &&\n            object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = Number(object.sigVerifyCostSecp256k1);\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxMemoCharacters !== undefined &&\n            (obj.maxMemoCharacters = message.maxMemoCharacters);\n        message.txSigLimit !== undefined && (obj.txSigLimit = message.txSigLimit);\n        message.txSizeCostPerByte !== undefined &&\n            (obj.txSizeCostPerByte = message.txSizeCostPerByte);\n        message.sigVerifyCostEd25519 !== undefined &&\n            (obj.sigVerifyCostEd25519 = message.sigVerifyCostEd25519);\n        message.sigVerifyCostSecp256k1 !== undefined &&\n            (obj.sigVerifyCostSecp256k1 = message.sigVerifyCostSecp256k1);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined &&\n            object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = object.maxMemoCharacters;\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = object.txSigLimit;\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined &&\n            object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = object.txSizeCostPerByte;\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined &&\n            object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = object.sigVerifyCostEd25519;\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined &&\n            object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = object.sigVerifyCostSecp256k1;\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Duration } from \"../../../google/protobuf/duration\";\nexport const protobufPackage = \"cosmos.gov.v1beta1\";\n/** VoteOption enumerates the valid vote options for a given governance proposal. */\nexport var VoteOption;\n(function (VoteOption) {\n    /** VOTE_OPTION_UNSPECIFIED - VOTE_OPTION_UNSPECIFIED defines a no-op vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = 0] = \"VOTE_OPTION_UNSPECIFIED\";\n    /** VOTE_OPTION_YES - VOTE_OPTION_YES defines a yes vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_YES\"] = 1] = \"VOTE_OPTION_YES\";\n    /** VOTE_OPTION_ABSTAIN - VOTE_OPTION_ABSTAIN defines an abstain vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_ABSTAIN\"] = 2] = \"VOTE_OPTION_ABSTAIN\";\n    /** VOTE_OPTION_NO - VOTE_OPTION_NO defines a no vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO\"] = 3] = \"VOTE_OPTION_NO\";\n    /** VOTE_OPTION_NO_WITH_VETO - VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = 4] = \"VOTE_OPTION_NO_WITH_VETO\";\n    VoteOption[VoteOption[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(VoteOption || (VoteOption = {}));\nexport function voteOptionFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"VOTE_OPTION_UNSPECIFIED\":\n            return VoteOption.VOTE_OPTION_UNSPECIFIED;\n        case 1:\n        case \"VOTE_OPTION_YES\":\n            return VoteOption.VOTE_OPTION_YES;\n        case 2:\n        case \"VOTE_OPTION_ABSTAIN\":\n            return VoteOption.VOTE_OPTION_ABSTAIN;\n        case 3:\n        case \"VOTE_OPTION_NO\":\n            return VoteOption.VOTE_OPTION_NO;\n        case 4:\n        case \"VOTE_OPTION_NO_WITH_VETO\":\n            return VoteOption.VOTE_OPTION_NO_WITH_VETO;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return VoteOption.UNRECOGNIZED;\n    }\n}\nexport function voteOptionToJSON(object) {\n    switch (object) {\n        case VoteOption.VOTE_OPTION_UNSPECIFIED:\n            return \"VOTE_OPTION_UNSPECIFIED\";\n        case VoteOption.VOTE_OPTION_YES:\n            return \"VOTE_OPTION_YES\";\n        case VoteOption.VOTE_OPTION_ABSTAIN:\n            return \"VOTE_OPTION_ABSTAIN\";\n        case VoteOption.VOTE_OPTION_NO:\n            return \"VOTE_OPTION_NO\";\n        case VoteOption.VOTE_OPTION_NO_WITH_VETO:\n            return \"VOTE_OPTION_NO_WITH_VETO\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** ProposalStatus enumerates the valid statuses of a proposal. */\nexport var ProposalStatus;\n(function (ProposalStatus) {\n    /** PROPOSAL_STATUS_UNSPECIFIED - PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status. */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = 0] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    /**\n     * PROPOSAL_STATUS_DEPOSIT_PERIOD - PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = 1] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_VOTING_PERIOD - PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = 2] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_PASSED - PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\n     * passed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = 3] = \"PROPOSAL_STATUS_PASSED\";\n    /**\n     * PROPOSAL_STATUS_REJECTED - PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\n     * been rejected.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = 4] = \"PROPOSAL_STATUS_REJECTED\";\n    /**\n     * PROPOSAL_STATUS_FAILED - PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\n     * failed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = 5] = \"PROPOSAL_STATUS_FAILED\";\n    ProposalStatus[ProposalStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ProposalStatus || (ProposalStatus = {}));\nexport function proposalStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"PROPOSAL_STATUS_UNSPECIFIED\":\n            return ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED;\n        case 1:\n        case \"PROPOSAL_STATUS_DEPOSIT_PERIOD\":\n            return ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD;\n        case 2:\n        case \"PROPOSAL_STATUS_VOTING_PERIOD\":\n            return ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD;\n        case 3:\n        case \"PROPOSAL_STATUS_PASSED\":\n            return ProposalStatus.PROPOSAL_STATUS_PASSED;\n        case 4:\n        case \"PROPOSAL_STATUS_REJECTED\":\n            return ProposalStatus.PROPOSAL_STATUS_REJECTED;\n        case 5:\n        case \"PROPOSAL_STATUS_FAILED\":\n            return ProposalStatus.PROPOSAL_STATUS_FAILED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ProposalStatus.UNRECOGNIZED;\n    }\n}\nexport function proposalStatusToJSON(object) {\n    switch (object) {\n        case ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED:\n            return \"PROPOSAL_STATUS_UNSPECIFIED\";\n        case ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD:\n            return \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n        case ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD:\n            return \"PROPOSAL_STATUS_VOTING_PERIOD\";\n        case ProposalStatus.PROPOSAL_STATUS_PASSED:\n            return \"PROPOSAL_STATUS_PASSED\";\n        case ProposalStatus.PROPOSAL_STATUS_REJECTED:\n            return \"PROPOSAL_STATUS_REJECTED\";\n        case ProposalStatus.PROPOSAL_STATUS_FAILED:\n            return \"PROPOSAL_STATUS_FAILED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseTextProposal = { title: \"\", description: \"\" };\nexport const TextProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTextProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        return message;\n    },\n};\nconst baseDeposit = { proposalId: 0, depositor: \"\" };\nexport const Deposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== \"\") {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseProposal = { proposalId: 0, status: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.status !== 0) {\n            writer.uint32(24).int32(message.status);\n        }\n        if (message.finalTallyResult !== undefined) {\n            TallyResult.encode(message.finalTallyResult, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.submitTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.submitTime), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.depositEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.depositEndTime), writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.totalDeposit) {\n            Coin.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.votingStartTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingStartTime), writer.uint32(66).fork()).ldelim();\n        }\n        if (message.votingEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingEndTime), writer.uint32(74).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.status = reader.int32();\n                    break;\n                case 4:\n                    message.finalTallyResult = TallyResult.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.submitTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.depositEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.totalDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.votingStartTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.votingEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = proposalStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined &&\n            object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromJSON(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = fromJsonTimestamp(object.submitTime);\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = fromJsonTimestamp(object.depositEndTime);\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.votingStartTime !== undefined &&\n            object.votingStartTime !== null) {\n            message.votingStartTime = fromJsonTimestamp(object.votingStartTime);\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = fromJsonTimestamp(object.votingEndTime);\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        message.status !== undefined &&\n            (obj.status = proposalStatusToJSON(message.status));\n        message.finalTallyResult !== undefined &&\n            (obj.finalTallyResult = message.finalTallyResult\n                ? TallyResult.toJSON(message.finalTallyResult)\n                : undefined);\n        message.submitTime !== undefined &&\n            (obj.submitTime =\n                message.submitTime !== undefined\n                    ? message.submitTime.toISOString()\n                    : null);\n        message.depositEndTime !== undefined &&\n            (obj.depositEndTime =\n                message.depositEndTime !== undefined\n                    ? message.depositEndTime.toISOString()\n                    : null);\n        if (message.totalDeposit) {\n            obj.totalDeposit = message.totalDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.totalDeposit = [];\n        }\n        message.votingStartTime !== undefined &&\n            (obj.votingStartTime =\n                message.votingStartTime !== undefined\n                    ? message.votingStartTime.toISOString()\n                    : null);\n        message.votingEndTime !== undefined &&\n            (obj.votingEndTime =\n                message.votingEndTime !== undefined\n                    ? message.votingEndTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined &&\n            object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromPartial(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = object.submitTime;\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = object.depositEndTime;\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.votingStartTime !== undefined &&\n            object.votingStartTime !== null) {\n            message.votingStartTime = object.votingStartTime;\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = object.votingEndTime;\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    },\n};\nconst baseTallyResult = {\n    yes: \"\",\n    abstain: \"\",\n    no: \"\",\n    noWithVeto: \"\",\n};\nexport const TallyResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.yes !== \"\") {\n            writer.uint32(10).string(message.yes);\n        }\n        if (message.abstain !== \"\") {\n            writer.uint32(18).string(message.abstain);\n        }\n        if (message.no !== \"\") {\n            writer.uint32(26).string(message.no);\n        }\n        if (message.noWithVeto !== \"\") {\n            writer.uint32(34).string(message.noWithVeto);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.yes = reader.string();\n                    break;\n                case 2:\n                    message.abstain = reader.string();\n                    break;\n                case 3:\n                    message.no = reader.string();\n                    break;\n                case 4:\n                    message.noWithVeto = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = String(object.yes);\n        }\n        else {\n            message.yes = \"\";\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = String(object.abstain);\n        }\n        else {\n            message.abstain = \"\";\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = String(object.no);\n        }\n        else {\n            message.no = \"\";\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = String(object.noWithVeto);\n        }\n        else {\n            message.noWithVeto = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.yes !== undefined && (obj.yes = message.yes);\n        message.abstain !== undefined && (obj.abstain = message.abstain);\n        message.no !== undefined && (obj.no = message.no);\n        message.noWithVeto !== undefined && (obj.noWithVeto = message.noWithVeto);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = object.yes;\n        }\n        else {\n            message.yes = \"\";\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = object.abstain;\n        }\n        else {\n            message.abstain = \"\";\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = object.no;\n        }\n        else {\n            message.no = \"\";\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = object.noWithVeto;\n        }\n        else {\n            message.noWithVeto = \"\";\n        }\n        return message;\n    },\n};\nconst baseVote = { proposalId: 0, voter: \"\", option: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== \"\") {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined &&\n            (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n};\nconst baseDepositParams = {};\nexport const DepositParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.minDeposit) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxDepositPeriod !== undefined) {\n            Duration.encode(message.maxDepositPeriod, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.minDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.maxDepositPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined &&\n            object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromJSON(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.minDeposit) {\n            obj.minDeposit = message.minDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.minDeposit = [];\n        }\n        message.maxDepositPeriod !== undefined &&\n            (obj.maxDepositPeriod = message.maxDepositPeriod\n                ? Duration.toJSON(message.maxDepositPeriod)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined &&\n            object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromPartial(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    },\n};\nconst baseVotingParams = {};\nexport const VotingParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.votingPeriod !== undefined) {\n            Duration.encode(message.votingPeriod, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVotingParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.votingPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromJSON(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.votingPeriod !== undefined &&\n            (obj.votingPeriod = message.votingPeriod\n                ? Duration.toJSON(message.votingPeriod)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromPartial(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    },\n};\nconst baseTallyParams = {};\nexport const TallyParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.quorum.length !== 0) {\n            writer.uint32(10).bytes(message.quorum);\n        }\n        if (message.threshold.length !== 0) {\n            writer.uint32(18).bytes(message.threshold);\n        }\n        if (message.vetoThreshold.length !== 0) {\n            writer.uint32(26).bytes(message.vetoThreshold);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.quorum = reader.bytes();\n                    break;\n                case 2:\n                    message.threshold = reader.bytes();\n                    break;\n                case 3:\n                    message.vetoThreshold = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = bytesFromBase64(object.quorum);\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = bytesFromBase64(object.threshold);\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = bytesFromBase64(object.vetoThreshold);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.quorum !== undefined &&\n            (obj.quorum = base64FromBytes(message.quorum !== undefined ? message.quorum : new Uint8Array()));\n        message.threshold !== undefined &&\n            (obj.threshold = base64FromBytes(message.threshold !== undefined ? message.threshold : new Uint8Array()));\n        message.vetoThreshold !== undefined &&\n            (obj.vetoThreshold = base64FromBytes(message.vetoThreshold !== undefined\n                ? message.vetoThreshold\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = object.quorum;\n        }\n        else {\n            message.quorum = new Uint8Array();\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = object.threshold;\n        }\n        else {\n            message.threshold = new Uint8Array();\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = object.vetoThreshold;\n        }\n        else {\n            message.vetoThreshold = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"ibc.applications.transfer.v1\";\nconst baseFungibleTokenPacketData = {\n    denom: \"\",\n    amount: 0,\n    sender: \"\",\n    receiver: \"\",\n};\nexport const FungibleTokenPacketData = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== 0) {\n            writer.uint32(16).uint64(message.amount);\n        }\n        if (message.sender !== \"\") {\n            writer.uint32(26).string(message.sender);\n        }\n        if (message.receiver !== \"\") {\n            writer.uint32(34).string(message.receiver);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseFungibleTokenPacketData,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                case 4:\n                    message.receiver = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseFungibleTokenPacketData,\n        };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Number(object.amount);\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseFungibleTokenPacketData,\n        };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = \"\";\n        }\n        return message;\n    },\n};\nconst baseDenomTrace = { path: \"\", baseDenom: \"\" };\nexport const DenomTrace = {\n    encode(message, writer = Writer.create()) {\n        if (message.path !== \"\") {\n            writer.uint32(10).string(message.path);\n        }\n        if (message.baseDenom !== \"\") {\n            writer.uint32(18).string(message.baseDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomTrace };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.path = reader.string();\n                    break;\n                case 2:\n                    message.baseDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = String(object.baseDenom);\n        }\n        else {\n            message.baseDenom = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.path !== undefined && (obj.path = message.path);\n        message.baseDenom !== undefined && (obj.baseDenom = message.baseDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = object.baseDenom;\n        }\n        else {\n            message.baseDenom = \"\";\n        }\n        return message;\n    },\n};\nconst baseParams = { sendEnabled: false, receiveEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.sendEnabled === true) {\n            writer.uint32(8).bool(message.sendEnabled);\n        }\n        if (message.receiveEnabled === true) {\n            writer.uint32(16).bool(message.receiveEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled = reader.bool();\n                    break;\n                case 2:\n                    message.receiveEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = Boolean(object.sendEnabled);\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = Boolean(object.receiveEnabled);\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sendEnabled !== undefined &&\n            (obj.sendEnabled = message.sendEnabled);\n        message.receiveEnabled !== undefined &&\n            (obj.receiveEnabled = message.receiveEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = object.sendEnabled;\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = object.receiveEnabled;\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { IdentifiedClientState, ClientConsensusStates, Params, } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseGenesisState = {\n    createLocalhost: false,\n    nextClientSequence: 0,\n};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.clients) {\n            IdentifiedClientState.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.clientsConsensus) {\n            ClientConsensusStates.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.clientsMetadata) {\n            IdentifiedGenesisMetadata.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.createLocalhost === true) {\n            writer.uint32(40).bool(message.createLocalhost);\n        }\n        if (message.nextClientSequence !== 0) {\n            writer.uint32(48).uint64(message.nextClientSequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clients.push(IdentifiedClientState.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.clientsConsensus.push(ClientConsensusStates.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.clientsMetadata.push(IdentifiedGenesisMetadata.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.createLocalhost = reader.bool();\n                    break;\n                case 6:\n                    message.nextClientSequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        if (object.clients !== undefined && object.clients !== null) {\n            for (const e of object.clients) {\n                message.clients.push(IdentifiedClientState.fromJSON(e));\n            }\n        }\n        if (object.clientsConsensus !== undefined &&\n            object.clientsConsensus !== null) {\n            for (const e of object.clientsConsensus) {\n                message.clientsConsensus.push(ClientConsensusStates.fromJSON(e));\n            }\n        }\n        if (object.clientsMetadata !== undefined &&\n            object.clientsMetadata !== null) {\n            for (const e of object.clientsMetadata) {\n                message.clientsMetadata.push(IdentifiedGenesisMetadata.fromJSON(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.createLocalhost !== undefined &&\n            object.createLocalhost !== null) {\n            message.createLocalhost = Boolean(object.createLocalhost);\n        }\n        else {\n            message.createLocalhost = false;\n        }\n        if (object.nextClientSequence !== undefined &&\n            object.nextClientSequence !== null) {\n            message.nextClientSequence = Number(object.nextClientSequence);\n        }\n        else {\n            message.nextClientSequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.clients) {\n            obj.clients = message.clients.map((e) => e ? IdentifiedClientState.toJSON(e) : undefined);\n        }\n        else {\n            obj.clients = [];\n        }\n        if (message.clientsConsensus) {\n            obj.clientsConsensus = message.clientsConsensus.map((e) => e ? ClientConsensusStates.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientsConsensus = [];\n        }\n        if (message.clientsMetadata) {\n            obj.clientsMetadata = message.clientsMetadata.map((e) => e ? IdentifiedGenesisMetadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientsMetadata = [];\n        }\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.createLocalhost !== undefined &&\n            (obj.createLocalhost = message.createLocalhost);\n        message.nextClientSequence !== undefined &&\n            (obj.nextClientSequence = message.nextClientSequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        if (object.clients !== undefined && object.clients !== null) {\n            for (const e of object.clients) {\n                message.clients.push(IdentifiedClientState.fromPartial(e));\n            }\n        }\n        if (object.clientsConsensus !== undefined &&\n            object.clientsConsensus !== null) {\n            for (const e of object.clientsConsensus) {\n                message.clientsConsensus.push(ClientConsensusStates.fromPartial(e));\n            }\n        }\n        if (object.clientsMetadata !== undefined &&\n            object.clientsMetadata !== null) {\n            for (const e of object.clientsMetadata) {\n                message.clientsMetadata.push(IdentifiedGenesisMetadata.fromPartial(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.createLocalhost !== undefined &&\n            object.createLocalhost !== null) {\n            message.createLocalhost = object.createLocalhost;\n        }\n        else {\n            message.createLocalhost = false;\n        }\n        if (object.nextClientSequence !== undefined &&\n            object.nextClientSequence !== null) {\n            message.nextClientSequence = object.nextClientSequence;\n        }\n        else {\n            message.nextClientSequence = 0;\n        }\n        return message;\n    },\n};\nconst baseGenesisMetadata = {};\nexport const GenesisMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisMetadata };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisMetadata };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisMetadata };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseIdentifiedGenesisMetadata = { clientId: \"\" };\nexport const IdentifiedGenesisMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.clientMetadata) {\n            GenesisMetadata.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseIdentifiedGenesisMetadata,\n        };\n        message.clientMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientMetadata.push(GenesisMetadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseIdentifiedGenesisMetadata,\n        };\n        message.clientMetadata = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientMetadata !== undefined && object.clientMetadata !== null) {\n            for (const e of object.clientMetadata) {\n                message.clientMetadata.push(GenesisMetadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.clientMetadata) {\n            obj.clientMetadata = message.clientMetadata.map((e) => e ? GenesisMetadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseIdentifiedGenesisMetadata,\n        };\n        message.clientMetadata = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientMetadata !== undefined && object.clientMetadata !== null) {\n            for (const e of object.clientMetadata) {\n                message.clientMetadata.push(GenesisMetadata.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Counterparty, Version, } from \"../../../../ibc/core/connection/v1/connection\";\nimport { Any } from \"../../../../google/protobuf/any\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.connection.v1\";\nconst baseMsgConnectionOpenInit = {\n    clientId: \"\",\n    delayPeriod: 0,\n    signer: \"\",\n};\nexport const MsgConnectionOpenInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(32).uint64(message.delayPeriod);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.version = Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenInit };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Version.toJSON(message.version)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenInit };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenInitResponse = {};\nexport const MsgConnectionOpenInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenInitResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenInitResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenInitResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgConnectionOpenTry = {\n    clientId: \"\",\n    previousConnectionId: \"\",\n    delayPeriod: 0,\n    signer: \"\",\n};\nexport const MsgConnectionOpenTry = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.previousConnectionId !== \"\") {\n            writer.uint32(18).string(message.previousConnectionId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        for (const v of message.counterpartyVersions) {\n            Version.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(66).bytes(message.proofInit);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(74).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(82).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            Height.encode(message.consensusHeight, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(98).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.previousConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.counterpartyVersions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 9:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 10:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 11:\n                    message.consensusHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.previousConnectionId !== undefined &&\n            object.previousConnectionId !== null) {\n            message.previousConnectionId = String(object.previousConnectionId);\n        }\n        else {\n            message.previousConnectionId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.counterpartyVersions !== undefined &&\n            object.counterpartyVersions !== null) {\n            for (const e of object.counterpartyVersions) {\n                message.counterpartyVersions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = bytesFromBase64(object.proofClient);\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = bytesFromBase64(object.proofConsensus);\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromJSON(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.previousConnectionId !== undefined &&\n            (obj.previousConnectionId = message.previousConnectionId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        if (message.counterpartyVersions) {\n            obj.counterpartyVersions = message.counterpartyVersions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.counterpartyVersions = [];\n        }\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = base64FromBytes(message.proofClient !== undefined\n                ? message.proofClient\n                : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined\n                ? message.proofConsensus\n                : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight\n                ? Height.toJSON(message.consensusHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.previousConnectionId !== undefined &&\n            object.previousConnectionId !== null) {\n            message.previousConnectionId = object.previousConnectionId;\n        }\n        else {\n            message.previousConnectionId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.counterpartyVersions !== undefined &&\n            object.counterpartyVersions !== null) {\n            for (const e of object.counterpartyVersions) {\n                message.counterpartyVersions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = object.proofClient;\n        }\n        else {\n            message.proofClient = new Uint8Array();\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = object.proofConsensus;\n        }\n        else {\n            message.proofConsensus = new Uint8Array();\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromPartial(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenTryResponse = {};\nexport const MsgConnectionOpenTryResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenTryResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenTryResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenTryResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgConnectionOpenAck = {\n    connectionId: \"\",\n    counterpartyConnectionId: \"\",\n    signer: \"\",\n};\nexport const MsgConnectionOpenAck = {\n    encode(message, writer = Writer.create()) {\n        if (message.connectionId !== \"\") {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.counterpartyConnectionId !== \"\") {\n            writer.uint32(18).string(message.counterpartyConnectionId);\n        }\n        if (message.version !== undefined) {\n            Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(50).bytes(message.proofTry);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(58).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(66).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            Height.encode(message.consensusHeight, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(82).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenAck };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.counterpartyConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.version = Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 7:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 8:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 9:\n                    message.consensusHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenAck };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.counterpartyConnectionId !== undefined &&\n            object.counterpartyConnectionId !== null) {\n            message.counterpartyConnectionId = String(object.counterpartyConnectionId);\n        }\n        else {\n            message.counterpartyConnectionId = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = bytesFromBase64(object.proofTry);\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = bytesFromBase64(object.proofClient);\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = bytesFromBase64(object.proofConsensus);\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromJSON(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.counterpartyConnectionId !== undefined &&\n            (obj.counterpartyConnectionId = message.counterpartyConnectionId);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Version.toJSON(message.version)\n                : undefined);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.proofTry !== undefined &&\n            (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = base64FromBytes(message.proofClient !== undefined\n                ? message.proofClient\n                : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined\n                ? message.proofConsensus\n                : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight\n                ? Height.toJSON(message.consensusHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenAck };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.counterpartyConnectionId !== undefined &&\n            object.counterpartyConnectionId !== null) {\n            message.counterpartyConnectionId = object.counterpartyConnectionId;\n        }\n        else {\n            message.counterpartyConnectionId = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = object.proofTry;\n        }\n        else {\n            message.proofTry = new Uint8Array();\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = object.proofClient;\n        }\n        else {\n            message.proofClient = new Uint8Array();\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = object.proofConsensus;\n        }\n        else {\n            message.proofConsensus = new Uint8Array();\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromPartial(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenAckResponse = {};\nexport const MsgConnectionOpenAckResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenAckResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenAckResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenAckResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgConnectionOpenConfirm = { connectionId: \"\", signer: \"\" };\nexport const MsgConnectionOpenConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.connectionId !== \"\") {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(18).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenConfirm,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgConnectionOpenConfirm,\n        };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = bytesFromBase64(object.proofAck);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgConnectionOpenConfirm,\n        };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = object.proofAck;\n        }\n        else {\n            message.proofAck = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenConfirmResponse = {};\nexport const MsgConnectionOpenConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ConnectionOpenInit(request) {\n        const data = MsgConnectionOpenInit.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenInit\", data);\n        return promise.then((data) => MsgConnectionOpenInitResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenTry(request) {\n        const data = MsgConnectionOpenTry.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenTry\", data);\n        return promise.then((data) => MsgConnectionOpenTryResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenAck(request) {\n        const data = MsgConnectionOpenAck.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenAck\", data);\n        return promise.then((data) => MsgConnectionOpenAckResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenConfirm(request) {\n        const data = MsgConnectionOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenConfirm\", data);\n        return promise.then((data) => MsgConnectionOpenConfirmResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.version\";\nconst baseApp = { protocol: 0, software: \"\" };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== \"\") {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = \"\";\n        }\n        return message;\n    },\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Params, Validator, Delegation, UnbondingDelegation, Redelegation, } from \"../../../cosmos/staking/v1beta1/staking\";\nexport const protobufPackage = \"cosmos.staking.v1beta1\";\nconst baseGenesisState = { exported: false };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.lastTotalPower.length !== 0) {\n            writer.uint32(18).bytes(message.lastTotalPower);\n        }\n        for (const v of message.lastValidatorPowers) {\n            LastValidatorPower.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.delegations) {\n            Delegation.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.unbondingDelegations) {\n            UnbondingDelegation.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.redelegations) {\n            Redelegation.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.exported === true) {\n            writer.uint32(64).bool(message.exported);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.lastTotalPower = reader.bytes();\n                    break;\n                case 3:\n                    message.lastValidatorPowers.push(LastValidatorPower.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.delegations.push(Delegation.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.unbondingDelegations.push(UnbondingDelegation.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.redelegations.push(Redelegation.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.exported = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = bytesFromBase64(object.lastTotalPower);\n        }\n        if (object.lastValidatorPowers !== undefined &&\n            object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromJSON(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromJSON(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined &&\n            object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromJSON(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromJSON(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = Boolean(object.exported);\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.lastTotalPower !== undefined &&\n            (obj.lastTotalPower = base64FromBytes(message.lastTotalPower !== undefined\n                ? message.lastTotalPower\n                : new Uint8Array()));\n        if (message.lastValidatorPowers) {\n            obj.lastValidatorPowers = message.lastValidatorPowers.map((e) => e ? LastValidatorPower.toJSON(e) : undefined);\n        }\n        else {\n            obj.lastValidatorPowers = [];\n        }\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        if (message.delegations) {\n            obj.delegations = message.delegations.map((e) => e ? Delegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegations = [];\n        }\n        if (message.unbondingDelegations) {\n            obj.unbondingDelegations = message.unbondingDelegations.map((e) => e ? UnbondingDelegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.unbondingDelegations = [];\n        }\n        if (message.redelegations) {\n            obj.redelegations = message.redelegations.map((e) => e ? Redelegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.redelegations = [];\n        }\n        message.exported !== undefined && (obj.exported = message.exported);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = object.lastTotalPower;\n        }\n        else {\n            message.lastTotalPower = new Uint8Array();\n        }\n        if (object.lastValidatorPowers !== undefined &&\n            object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromPartial(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromPartial(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined &&\n            object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromPartial(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromPartial(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = object.exported;\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    },\n};\nconst baseLastValidatorPower = { address: \"\", power: 0 };\nexport const LastValidatorPower = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastValidatorPower };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { CommitmentProof } from \"../../../../confio/proofs\";\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"ibc.core.commitment.v1\";\nconst baseMerkleRoot = {};\nexport const MerkleRoot = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerkleRoot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerkleRoot };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerkleRoot };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseMerklePrefix = {};\nexport const MerklePrefix = {\n    encode(message, writer = Writer.create()) {\n        if (message.keyPrefix.length !== 0) {\n            writer.uint32(10).bytes(message.keyPrefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerklePrefix };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPrefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerklePrefix };\n        if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n            message.keyPrefix = bytesFromBase64(object.keyPrefix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.keyPrefix !== undefined &&\n            (obj.keyPrefix = base64FromBytes(message.keyPrefix !== undefined ? message.keyPrefix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerklePrefix };\n        if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n            message.keyPrefix = object.keyPrefix;\n        }\n        else {\n            message.keyPrefix = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseMerklePath = { keyPath: \"\" };\nexport const MerklePath = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.keyPath) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPath.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        if (object.keyPath !== undefined && object.keyPath !== null) {\n            for (const e of object.keyPath) {\n                message.keyPath.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.keyPath) {\n            obj.keyPath = message.keyPath.map((e) => e);\n        }\n        else {\n            obj.keyPath = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        if (object.keyPath !== undefined && object.keyPath !== null) {\n            for (const e of object.keyPath) {\n                message.keyPath.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseMerkleProof = {};\nexport const MerkleProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.proofs) {\n            CommitmentProof.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proofs.push(CommitmentProof.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        if (object.proofs !== undefined && object.proofs !== null) {\n            for (const e of object.proofs) {\n                message.proofs.push(CommitmentProof.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.proofs) {\n            obj.proofs = message.proofs.map((e) => e ? CommitmentProof.toJSON(e) : undefined);\n        }\n        else {\n            obj.proofs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        if (object.proofs !== undefined && object.proofs !== null) {\n            for (const e of object.proofs) {\n                message.proofs.push(CommitmentProof.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"ics23\";\nexport var HashOp;\n(function (HashOp) {\n    /** NO_HASH - NO_HASH is the default if no data passed. Note this is an illegal argument some places. */\n    HashOp[HashOp[\"NO_HASH\"] = 0] = \"NO_HASH\";\n    HashOp[HashOp[\"SHA256\"] = 1] = \"SHA256\";\n    HashOp[HashOp[\"SHA512\"] = 2] = \"SHA512\";\n    HashOp[HashOp[\"KECCAK\"] = 3] = \"KECCAK\";\n    HashOp[HashOp[\"RIPEMD160\"] = 4] = \"RIPEMD160\";\n    /** BITCOIN - ripemd160(sha256(x)) */\n    HashOp[HashOp[\"BITCOIN\"] = 5] = \"BITCOIN\";\n    HashOp[HashOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(HashOp || (HashOp = {}));\nexport function hashOpFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"NO_HASH\":\n            return HashOp.NO_HASH;\n        case 1:\n        case \"SHA256\":\n            return HashOp.SHA256;\n        case 2:\n        case \"SHA512\":\n            return HashOp.SHA512;\n        case 3:\n        case \"KECCAK\":\n            return HashOp.KECCAK;\n        case 4:\n        case \"RIPEMD160\":\n            return HashOp.RIPEMD160;\n        case 5:\n        case \"BITCOIN\":\n            return HashOp.BITCOIN;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return HashOp.UNRECOGNIZED;\n    }\n}\nexport function hashOpToJSON(object) {\n    switch (object) {\n        case HashOp.NO_HASH:\n            return \"NO_HASH\";\n        case HashOp.SHA256:\n            return \"SHA256\";\n        case HashOp.SHA512:\n            return \"SHA512\";\n        case HashOp.KECCAK:\n            return \"KECCAK\";\n        case HashOp.RIPEMD160:\n            return \"RIPEMD160\";\n        case HashOp.BITCOIN:\n            return \"BITCOIN\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/**\n * LengthOp defines how to process the key and value of the LeafOp\n * to include length information. After encoding the length with the given\n * algorithm, the length will be prepended to the key and value bytes.\n * (Each one with it's own encoded length)\n */\nexport var LengthOp;\n(function (LengthOp) {\n    /** NO_PREFIX - NO_PREFIX don't include any length info */\n    LengthOp[LengthOp[\"NO_PREFIX\"] = 0] = \"NO_PREFIX\";\n    /** VAR_PROTO - VAR_PROTO uses protobuf (and go-amino) varint encoding of the length */\n    LengthOp[LengthOp[\"VAR_PROTO\"] = 1] = \"VAR_PROTO\";\n    /** VAR_RLP - VAR_RLP uses rlp int encoding of the length */\n    LengthOp[LengthOp[\"VAR_RLP\"] = 2] = \"VAR_RLP\";\n    /** FIXED32_BIG - FIXED32_BIG uses big-endian encoding of the length as a 32 bit integer */\n    LengthOp[LengthOp[\"FIXED32_BIG\"] = 3] = \"FIXED32_BIG\";\n    /** FIXED32_LITTLE - FIXED32_LITTLE uses little-endian encoding of the length as a 32 bit integer */\n    LengthOp[LengthOp[\"FIXED32_LITTLE\"] = 4] = \"FIXED32_LITTLE\";\n    /** FIXED64_BIG - FIXED64_BIG uses big-endian encoding of the length as a 64 bit integer */\n    LengthOp[LengthOp[\"FIXED64_BIG\"] = 5] = \"FIXED64_BIG\";\n    /** FIXED64_LITTLE - FIXED64_LITTLE uses little-endian encoding of the length as a 64 bit integer */\n    LengthOp[LengthOp[\"FIXED64_LITTLE\"] = 6] = \"FIXED64_LITTLE\";\n    /** REQUIRE_32_BYTES - REQUIRE_32_BYTES is like NONE, but will fail if the input is not exactly 32 bytes (sha256 output) */\n    LengthOp[LengthOp[\"REQUIRE_32_BYTES\"] = 7] = \"REQUIRE_32_BYTES\";\n    /** REQUIRE_64_BYTES - REQUIRE_64_BYTES is like NONE, but will fail if the input is not exactly 64 bytes (sha512 output) */\n    LengthOp[LengthOp[\"REQUIRE_64_BYTES\"] = 8] = \"REQUIRE_64_BYTES\";\n    LengthOp[LengthOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(LengthOp || (LengthOp = {}));\nexport function lengthOpFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"NO_PREFIX\":\n            return LengthOp.NO_PREFIX;\n        case 1:\n        case \"VAR_PROTO\":\n            return LengthOp.VAR_PROTO;\n        case 2:\n        case \"VAR_RLP\":\n            return LengthOp.VAR_RLP;\n        case 3:\n        case \"FIXED32_BIG\":\n            return LengthOp.FIXED32_BIG;\n        case 4:\n        case \"FIXED32_LITTLE\":\n            return LengthOp.FIXED32_LITTLE;\n        case 5:\n        case \"FIXED64_BIG\":\n            return LengthOp.FIXED64_BIG;\n        case 6:\n        case \"FIXED64_LITTLE\":\n            return LengthOp.FIXED64_LITTLE;\n        case 7:\n        case \"REQUIRE_32_BYTES\":\n            return LengthOp.REQUIRE_32_BYTES;\n        case 8:\n        case \"REQUIRE_64_BYTES\":\n            return LengthOp.REQUIRE_64_BYTES;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return LengthOp.UNRECOGNIZED;\n    }\n}\nexport function lengthOpToJSON(object) {\n    switch (object) {\n        case LengthOp.NO_PREFIX:\n            return \"NO_PREFIX\";\n        case LengthOp.VAR_PROTO:\n            return \"VAR_PROTO\";\n        case LengthOp.VAR_RLP:\n            return \"VAR_RLP\";\n        case LengthOp.FIXED32_BIG:\n            return \"FIXED32_BIG\";\n        case LengthOp.FIXED32_LITTLE:\n            return \"FIXED32_LITTLE\";\n        case LengthOp.FIXED64_BIG:\n            return \"FIXED64_BIG\";\n        case LengthOp.FIXED64_LITTLE:\n            return \"FIXED64_LITTLE\";\n        case LengthOp.REQUIRE_32_BYTES:\n            return \"REQUIRE_32_BYTES\";\n        case LengthOp.REQUIRE_64_BYTES:\n            return \"REQUIRE_64_BYTES\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseExistenceProof = {};\nexport const ExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.leaf !== undefined) {\n            LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.path) {\n            InnerOp.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.leaf = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.path.push(InnerOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromJSON(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(InnerOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.leaf !== undefined &&\n            (obj.leaf = message.leaf ? LeafOp.toJSON(message.leaf) : undefined);\n        if (message.path) {\n            obj.path = message.path.map((e) => (e ? InnerOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.path = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromPartial(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(InnerOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseNonExistenceProof = {};\nexport const NonExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.left !== undefined) {\n            ExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.right !== undefined) {\n            ExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseNonExistenceProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.left = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.right = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseNonExistenceProof };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = ExistenceProof.fromJSON(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = ExistenceProof.fromJSON(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.left !== undefined &&\n            (obj.left = message.left\n                ? ExistenceProof.toJSON(message.left)\n                : undefined);\n        message.right !== undefined &&\n            (obj.right = message.right\n                ? ExistenceProof.toJSON(message.right)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseNonExistenceProof };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = ExistenceProof.fromPartial(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = ExistenceProof.fromPartial(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n};\nconst baseCommitmentProof = {};\nexport const CommitmentProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.batch !== undefined) {\n            BatchProof.encode(message.batch, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.compressed !== undefined) {\n            CompressedBatchProof.encode(message.compressed, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitmentProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = NonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.batch = BatchProof.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.compressed = CompressedBatchProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitmentProof };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        if (object.batch !== undefined && object.batch !== null) {\n            message.batch = BatchProof.fromJSON(object.batch);\n        }\n        else {\n            message.batch = undefined;\n        }\n        if (object.compressed !== undefined && object.compressed !== null) {\n            message.compressed = CompressedBatchProof.fromJSON(object.compressed);\n        }\n        else {\n            message.compressed = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? ExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? NonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        message.batch !== undefined &&\n            (obj.batch = message.batch\n                ? BatchProof.toJSON(message.batch)\n                : undefined);\n        message.compressed !== undefined &&\n            (obj.compressed = message.compressed\n                ? CompressedBatchProof.toJSON(message.compressed)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitmentProof };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        if (object.batch !== undefined && object.batch !== null) {\n            message.batch = BatchProof.fromPartial(object.batch);\n        }\n        else {\n            message.batch = undefined;\n        }\n        if (object.compressed !== undefined && object.compressed !== null) {\n            message.compressed = CompressedBatchProof.fromPartial(object.compressed);\n        }\n        else {\n            message.compressed = undefined;\n        }\n        return message;\n    },\n};\nconst baseLeafOp = {\n    hash: 0,\n    prehashKey: 0,\n    prehashValue: 0,\n    length: 0,\n};\nexport const LeafOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== 0) {\n            writer.uint32(8).int32(message.hash);\n        }\n        if (message.prehashKey !== 0) {\n            writer.uint32(16).int32(message.prehashKey);\n        }\n        if (message.prehashValue !== 0) {\n            writer.uint32(24).int32(message.prehashValue);\n        }\n        if (message.length !== 0) {\n            writer.uint32(32).int32(message.length);\n        }\n        if (message.prefix.length !== 0) {\n            writer.uint32(42).bytes(message.prefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLeafOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.int32();\n                    break;\n                case 2:\n                    message.prehashKey = reader.int32();\n                    break;\n                case 3:\n                    message.prehashValue = reader.int32();\n                    break;\n                case 4:\n                    message.length = reader.int32();\n                    break;\n                case 5:\n                    message.prefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLeafOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prehashKey !== undefined && object.prehashKey !== null) {\n            message.prehashKey = hashOpFromJSON(object.prehashKey);\n        }\n        else {\n            message.prehashKey = 0;\n        }\n        if (object.prehashValue !== undefined && object.prehashValue !== null) {\n            message.prehashValue = hashOpFromJSON(object.prehashValue);\n        }\n        else {\n            message.prehashValue = 0;\n        }\n        if (object.length !== undefined && object.length !== null) {\n            message.length = lengthOpFromJSON(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = bytesFromBase64(object.prefix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        message.prehashKey !== undefined &&\n            (obj.prehashKey = hashOpToJSON(message.prehashKey));\n        message.prehashValue !== undefined &&\n            (obj.prehashValue = hashOpToJSON(message.prehashValue));\n        message.length !== undefined &&\n            (obj.length = lengthOpToJSON(message.length));\n        message.prefix !== undefined &&\n            (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLeafOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prehashKey !== undefined && object.prehashKey !== null) {\n            message.prehashKey = object.prehashKey;\n        }\n        else {\n            message.prehashKey = 0;\n        }\n        if (object.prehashValue !== undefined && object.prehashValue !== null) {\n            message.prehashValue = object.prehashValue;\n        }\n        else {\n            message.prehashValue = 0;\n        }\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = object.prefix;\n        }\n        else {\n            message.prefix = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseInnerOp = { hash: 0 };\nexport const InnerOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== 0) {\n            writer.uint32(8).int32(message.hash);\n        }\n        if (message.prefix.length !== 0) {\n            writer.uint32(18).bytes(message.prefix);\n        }\n        if (message.suffix.length !== 0) {\n            writer.uint32(26).bytes(message.suffix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInnerOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.int32();\n                    break;\n                case 2:\n                    message.prefix = reader.bytes();\n                    break;\n                case 3:\n                    message.suffix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInnerOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = bytesFromBase64(object.prefix);\n        }\n        if (object.suffix !== undefined && object.suffix !== null) {\n            message.suffix = bytesFromBase64(object.suffix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        message.prefix !== undefined &&\n            (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n        message.suffix !== undefined &&\n            (obj.suffix = base64FromBytes(message.suffix !== undefined ? message.suffix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInnerOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = object.prefix;\n        }\n        else {\n            message.prefix = new Uint8Array();\n        }\n        if (object.suffix !== undefined && object.suffix !== null) {\n            message.suffix = object.suffix;\n        }\n        else {\n            message.suffix = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProofSpec = { maxDepth: 0, minDepth: 0 };\nexport const ProofSpec = {\n    encode(message, writer = Writer.create()) {\n        if (message.leafSpec !== undefined) {\n            LeafOp.encode(message.leafSpec, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.innerSpec !== undefined) {\n            InnerSpec.encode(message.innerSpec, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.maxDepth !== 0) {\n            writer.uint32(24).int32(message.maxDepth);\n        }\n        if (message.minDepth !== 0) {\n            writer.uint32(32).int32(message.minDepth);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofSpec };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.leafSpec = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.innerSpec = InnerSpec.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.maxDepth = reader.int32();\n                    break;\n                case 4:\n                    message.minDepth = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofSpec };\n        if (object.leafSpec !== undefined && object.leafSpec !== null) {\n            message.leafSpec = LeafOp.fromJSON(object.leafSpec);\n        }\n        else {\n            message.leafSpec = undefined;\n        }\n        if (object.innerSpec !== undefined && object.innerSpec !== null) {\n            message.innerSpec = InnerSpec.fromJSON(object.innerSpec);\n        }\n        else {\n            message.innerSpec = undefined;\n        }\n        if (object.maxDepth !== undefined && object.maxDepth !== null) {\n            message.maxDepth = Number(object.maxDepth);\n        }\n        else {\n            message.maxDepth = 0;\n        }\n        if (object.minDepth !== undefined && object.minDepth !== null) {\n            message.minDepth = Number(object.minDepth);\n        }\n        else {\n            message.minDepth = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.leafSpec !== undefined &&\n            (obj.leafSpec = message.leafSpec\n                ? LeafOp.toJSON(message.leafSpec)\n                : undefined);\n        message.innerSpec !== undefined &&\n            (obj.innerSpec = message.innerSpec\n                ? InnerSpec.toJSON(message.innerSpec)\n                : undefined);\n        message.maxDepth !== undefined && (obj.maxDepth = message.maxDepth);\n        message.minDepth !== undefined && (obj.minDepth = message.minDepth);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofSpec };\n        if (object.leafSpec !== undefined && object.leafSpec !== null) {\n            message.leafSpec = LeafOp.fromPartial(object.leafSpec);\n        }\n        else {\n            message.leafSpec = undefined;\n        }\n        if (object.innerSpec !== undefined && object.innerSpec !== null) {\n            message.innerSpec = InnerSpec.fromPartial(object.innerSpec);\n        }\n        else {\n            message.innerSpec = undefined;\n        }\n        if (object.maxDepth !== undefined && object.maxDepth !== null) {\n            message.maxDepth = object.maxDepth;\n        }\n        else {\n            message.maxDepth = 0;\n        }\n        if (object.minDepth !== undefined && object.minDepth !== null) {\n            message.minDepth = object.minDepth;\n        }\n        else {\n            message.minDepth = 0;\n        }\n        return message;\n    },\n};\nconst baseInnerSpec = {\n    childOrder: 0,\n    childSize: 0,\n    minPrefixLength: 0,\n    maxPrefixLength: 0,\n    hash: 0,\n};\nexport const InnerSpec = {\n    encode(message, writer = Writer.create()) {\n        writer.uint32(10).fork();\n        for (const v of message.childOrder) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        if (message.childSize !== 0) {\n            writer.uint32(16).int32(message.childSize);\n        }\n        if (message.minPrefixLength !== 0) {\n            writer.uint32(24).int32(message.minPrefixLength);\n        }\n        if (message.maxPrefixLength !== 0) {\n            writer.uint32(32).int32(message.maxPrefixLength);\n        }\n        if (message.emptyChild.length !== 0) {\n            writer.uint32(42).bytes(message.emptyChild);\n        }\n        if (message.hash !== 0) {\n            writer.uint32(48).int32(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.childOrder.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.childOrder.push(reader.int32());\n                    }\n                    break;\n                case 2:\n                    message.childSize = reader.int32();\n                    break;\n                case 3:\n                    message.minPrefixLength = reader.int32();\n                    break;\n                case 4:\n                    message.maxPrefixLength = reader.int32();\n                    break;\n                case 5:\n                    message.emptyChild = reader.bytes();\n                    break;\n                case 6:\n                    message.hash = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        if (object.childOrder !== undefined && object.childOrder !== null) {\n            for (const e of object.childOrder) {\n                message.childOrder.push(Number(e));\n            }\n        }\n        if (object.childSize !== undefined && object.childSize !== null) {\n            message.childSize = Number(object.childSize);\n        }\n        else {\n            message.childSize = 0;\n        }\n        if (object.minPrefixLength !== undefined &&\n            object.minPrefixLength !== null) {\n            message.minPrefixLength = Number(object.minPrefixLength);\n        }\n        else {\n            message.minPrefixLength = 0;\n        }\n        if (object.maxPrefixLength !== undefined &&\n            object.maxPrefixLength !== null) {\n            message.maxPrefixLength = Number(object.maxPrefixLength);\n        }\n        else {\n            message.maxPrefixLength = 0;\n        }\n        if (object.emptyChild !== undefined && object.emptyChild !== null) {\n            message.emptyChild = bytesFromBase64(object.emptyChild);\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.childOrder) {\n            obj.childOrder = message.childOrder.map((e) => e);\n        }\n        else {\n            obj.childOrder = [];\n        }\n        message.childSize !== undefined && (obj.childSize = message.childSize);\n        message.minPrefixLength !== undefined &&\n            (obj.minPrefixLength = message.minPrefixLength);\n        message.maxPrefixLength !== undefined &&\n            (obj.maxPrefixLength = message.maxPrefixLength);\n        message.emptyChild !== undefined &&\n            (obj.emptyChild = base64FromBytes(message.emptyChild !== undefined ? message.emptyChild : new Uint8Array()));\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        if (object.childOrder !== undefined && object.childOrder !== null) {\n            for (const e of object.childOrder) {\n                message.childOrder.push(e);\n            }\n        }\n        if (object.childSize !== undefined && object.childSize !== null) {\n            message.childSize = object.childSize;\n        }\n        else {\n            message.childSize = 0;\n        }\n        if (object.minPrefixLength !== undefined &&\n            object.minPrefixLength !== null) {\n            message.minPrefixLength = object.minPrefixLength;\n        }\n        else {\n            message.minPrefixLength = 0;\n        }\n        if (object.maxPrefixLength !== undefined &&\n            object.maxPrefixLength !== null) {\n            message.maxPrefixLength = object.maxPrefixLength;\n        }\n        else {\n            message.maxPrefixLength = 0;\n        }\n        if (object.emptyChild !== undefined && object.emptyChild !== null) {\n            message.emptyChild = object.emptyChild;\n        }\n        else {\n            message.emptyChild = new Uint8Array();\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        return message;\n    },\n};\nconst baseBatchProof = {};\nexport const BatchProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.entries) {\n            BatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(BatchEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(BatchEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? BatchEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(BatchEntry.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseBatchEntry = {};\nexport const BatchEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBatchEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = NonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? ExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? NonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n};\nconst baseCompressedBatchProof = {};\nexport const CompressedBatchProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.entries) {\n            CompressedBatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.lookupInners) {\n            InnerOp.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(CompressedBatchEntry.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.lookupInners.push(InnerOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(CompressedBatchEntry.fromJSON(e));\n            }\n        }\n        if (object.lookupInners !== undefined && object.lookupInners !== null) {\n            for (const e of object.lookupInners) {\n                message.lookupInners.push(InnerOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? CompressedBatchEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        if (message.lookupInners) {\n            obj.lookupInners = message.lookupInners.map((e) => e ? InnerOp.toJSON(e) : undefined);\n        }\n        else {\n            obj.lookupInners = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(CompressedBatchEntry.fromPartial(e));\n            }\n        }\n        if (object.lookupInners !== undefined && object.lookupInners !== null) {\n            for (const e of object.lookupInners) {\n                message.lookupInners.push(InnerOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCompressedBatchEntry = {};\nexport const CompressedBatchEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            CompressedExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            CompressedNonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCompressedBatchEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = CompressedNonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCompressedBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = CompressedExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = CompressedNonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? CompressedExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? CompressedNonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCompressedBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = CompressedExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = CompressedNonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n};\nconst baseCompressedExistenceProof = { path: 0 };\nexport const CompressedExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.leaf !== undefined) {\n            LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n        }\n        writer.uint32(34).fork();\n        for (const v of message.path) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCompressedExistenceProof,\n        };\n        message.path = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.leaf = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.path.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.path.push(reader.int32());\n                    }\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCompressedExistenceProof,\n        };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromJSON(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(Number(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.leaf !== undefined &&\n            (obj.leaf = message.leaf ? LeafOp.toJSON(message.leaf) : undefined);\n        if (message.path) {\n            obj.path = message.path.map((e) => e);\n        }\n        else {\n            obj.path = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCompressedExistenceProof,\n        };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromPartial(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseCompressedNonExistenceProof = {};\nexport const CompressedNonExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.left !== undefined) {\n            CompressedExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.right !== undefined) {\n            CompressedExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCompressedNonExistenceProof,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.left = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.right = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCompressedNonExistenceProof,\n        };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = CompressedExistenceProof.fromJSON(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = CompressedExistenceProof.fromJSON(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.left !== undefined &&\n            (obj.left = message.left\n                ? CompressedExistenceProof.toJSON(message.left)\n                : undefined);\n        message.right !== undefined &&\n            (obj.right = message.right\n                ? CompressedExistenceProof.toJSON(message.right)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCompressedNonExistenceProof,\n        };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = CompressedExistenceProof.fromPartial(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = CompressedExistenceProof.fromPartial(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined &&\n            (obj.ed25519 =\n                message.ed25519 !== undefined\n                    ? base64FromBytes(message.ed25519)\n                    : undefined);\n        message.secp256k1 !== undefined &&\n            (obj.secp256k1 =\n                message.secp256k1 !== undefined\n                    ? base64FromBytes(message.secp256k1)\n                    : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nimport { Event } from \"../../../../tendermint/abci/types\";\nexport const protobufPackage = \"cosmos.base.abci.v1beta1\";\nconst baseTxResponse = {\n    height: 0,\n    txhash: \"\",\n    codespace: \"\",\n    code: 0,\n    data: \"\",\n    rawLog: \"\",\n    info: \"\",\n    gasWanted: 0,\n    gasUsed: 0,\n    timestamp: \"\",\n};\nexport const TxResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.txhash !== \"\") {\n            writer.uint32(18).string(message.txhash);\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(26).string(message.codespace);\n        }\n        if (message.code !== 0) {\n            writer.uint32(32).uint32(message.code);\n        }\n        if (message.data !== \"\") {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.rawLog !== \"\") {\n            writer.uint32(50).string(message.rawLog);\n        }\n        for (const v of message.logs) {\n            ABCIMessageLog.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.info !== \"\") {\n            writer.uint32(66).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(72).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(80).int64(message.gasUsed);\n        }\n        if (message.tx !== undefined) {\n            Any.encode(message.tx, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.timestamp !== \"\") {\n            writer.uint32(98).string(message.timestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.txhash = reader.string();\n                    break;\n                case 3:\n                    message.codespace = reader.string();\n                    break;\n                case 4:\n                    message.code = reader.uint32();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.rawLog = reader.string();\n                    break;\n                case 7:\n                    message.logs.push(ABCIMessageLog.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.info = reader.string();\n                    break;\n                case 9:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 10:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 11:\n                    message.tx = Any.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.timestamp = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.txhash !== undefined && object.txhash !== null) {\n            message.txhash = String(object.txhash);\n        }\n        else {\n            message.txhash = \"\";\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.rawLog !== undefined && object.rawLog !== null) {\n            message.rawLog = String(object.rawLog);\n        }\n        else {\n            message.rawLog = \"\";\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(ABCIMessageLog.fromJSON(e));\n            }\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = Any.fromJSON(object.tx);\n        }\n        else {\n            message.tx = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = String(object.timestamp);\n        }\n        else {\n            message.timestamp = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.txhash !== undefined && (obj.txhash = message.txhash);\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined && (obj.data = message.data);\n        message.rawLog !== undefined && (obj.rawLog = message.rawLog);\n        if (message.logs) {\n            obj.logs = message.logs.map((e) => e ? ABCIMessageLog.toJSON(e) : undefined);\n        }\n        else {\n            obj.logs = [];\n        }\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        message.tx !== undefined &&\n            (obj.tx = message.tx ? Any.toJSON(message.tx) : undefined);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.txhash !== undefined && object.txhash !== null) {\n            message.txhash = object.txhash;\n        }\n        else {\n            message.txhash = \"\";\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.rawLog !== undefined && object.rawLog !== null) {\n            message.rawLog = object.rawLog;\n        }\n        else {\n            message.rawLog = \"\";\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(ABCIMessageLog.fromPartial(e));\n            }\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = Any.fromPartial(object.tx);\n        }\n        else {\n            message.tx = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = \"\";\n        }\n        return message;\n    },\n};\nconst baseABCIMessageLog = { msgIndex: 0, log: \"\" };\nexport const ABCIMessageLog = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgIndex !== 0) {\n            writer.uint32(8).uint32(message.msgIndex);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(18).string(message.log);\n        }\n        for (const v of message.events) {\n            StringEvent.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msgIndex = reader.uint32();\n                    break;\n                case 2:\n                    message.log = reader.string();\n                    break;\n                case 3:\n                    message.events.push(StringEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        if (object.msgIndex !== undefined && object.msgIndex !== null) {\n            message.msgIndex = Number(object.msgIndex);\n        }\n        else {\n            message.msgIndex = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(StringEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgIndex !== undefined && (obj.msgIndex = message.msgIndex);\n        message.log !== undefined && (obj.log = message.log);\n        if (message.events) {\n            obj.events = message.events.map((e) => e ? StringEvent.toJSON(e) : undefined);\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        if (object.msgIndex !== undefined && object.msgIndex !== null) {\n            message.msgIndex = object.msgIndex;\n        }\n        else {\n            message.msgIndex = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(StringEvent.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseStringEvent = { type: \"\" };\nexport const StringEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        for (const v of message.attributes) {\n            Attribute.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.attributes.push(Attribute.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(Attribute.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        if (message.attributes) {\n            obj.attributes = message.attributes.map((e) => e ? Attribute.toJSON(e) : undefined);\n        }\n        else {\n            obj.attributes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(Attribute.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseAttribute = { key: \"\", value: \"\" };\nexport const Attribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n};\nconst baseGasInfo = { gasWanted: 0, gasUsed: 0 };\nexport const GasInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.gasWanted !== 0) {\n            writer.uint32(8).uint64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(16).uint64(message.gasUsed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGasInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gasWanted = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.gasUsed = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGasInfo };\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGasInfo };\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    },\n};\nconst baseResult = { log: \"\" };\nexport const Result = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(18).string(message.log);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResult };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                case 2:\n                    message.log = reader.string();\n                    break;\n                case 3:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResult };\n        message.events = [];\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResult };\n        message.events = [];\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSimulationResponse = {};\nexport const SimulationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.gasInfo !== undefined) {\n            GasInfo.encode(message.gasInfo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.result !== undefined) {\n            Result.encode(message.result, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimulationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gasInfo = GasInfo.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.result = Result.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimulationResponse };\n        if (object.gasInfo !== undefined && object.gasInfo !== null) {\n            message.gasInfo = GasInfo.fromJSON(object.gasInfo);\n        }\n        else {\n            message.gasInfo = undefined;\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = Result.fromJSON(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gasInfo !== undefined &&\n            (obj.gasInfo = message.gasInfo\n                ? GasInfo.toJSON(message.gasInfo)\n                : undefined);\n        message.result !== undefined &&\n            (obj.result = message.result ? Result.toJSON(message.result) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimulationResponse };\n        if (object.gasInfo !== undefined && object.gasInfo !== null) {\n            message.gasInfo = GasInfo.fromPartial(object.gasInfo);\n        }\n        else {\n            message.gasInfo = undefined;\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = Result.fromPartial(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgData = { msgType: \"\" };\nexport const MsgData = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgType !== \"\") {\n            writer.uint32(10).string(message.msgType);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgData };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msgType = reader.string();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgData };\n        if (object.msgType !== undefined && object.msgType !== null) {\n            message.msgType = String(object.msgType);\n        }\n        else {\n            message.msgType = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgType !== undefined && (obj.msgType = message.msgType);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgData };\n        if (object.msgType !== undefined && object.msgType !== null) {\n            message.msgType = object.msgType;\n        }\n        else {\n            message.msgType = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseTxMsgData = {};\nexport const TxMsgData = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.data) {\n            MsgData.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data.push(MsgData.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        if (object.data !== undefined && object.data !== null) {\n            for (const e of object.data) {\n                message.data.push(MsgData.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.data) {\n            obj.data = message.data.map((e) => (e ? MsgData.toJSON(e) : undefined));\n        }\n        else {\n            obj.data = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        if (object.data !== undefined && object.data !== null) {\n            for (const e of object.data) {\n                message.data.push(MsgData.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSearchTxsResult = {\n    totalCount: 0,\n    count: 0,\n    pageNumber: 0,\n    pageTotal: 0,\n    limit: 0,\n};\nexport const SearchTxsResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.totalCount !== 0) {\n            writer.uint32(8).uint64(message.totalCount);\n        }\n        if (message.count !== 0) {\n            writer.uint32(16).uint64(message.count);\n        }\n        if (message.pageNumber !== 0) {\n            writer.uint32(24).uint64(message.pageNumber);\n        }\n        if (message.pageTotal !== 0) {\n            writer.uint32(32).uint64(message.pageTotal);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(40).uint64(message.limit);\n        }\n        for (const v of message.txs) {\n            TxResponse.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.totalCount = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.count = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.pageNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.pageTotal = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.limit = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.txs.push(TxResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        if (object.totalCount !== undefined && object.totalCount !== null) {\n            message.totalCount = Number(object.totalCount);\n        }\n        else {\n            message.totalCount = 0;\n        }\n        if (object.count !== undefined && object.count !== null) {\n            message.count = Number(object.count);\n        }\n        else {\n            message.count = 0;\n        }\n        if (object.pageNumber !== undefined && object.pageNumber !== null) {\n            message.pageNumber = Number(object.pageNumber);\n        }\n        else {\n            message.pageNumber = 0;\n        }\n        if (object.pageTotal !== undefined && object.pageTotal !== null) {\n            message.pageTotal = Number(object.pageTotal);\n        }\n        else {\n            message.pageTotal = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = Number(object.limit);\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(TxResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.totalCount !== undefined && (obj.totalCount = message.totalCount);\n        message.count !== undefined && (obj.count = message.count);\n        message.pageNumber !== undefined && (obj.pageNumber = message.pageNumber);\n        message.pageTotal !== undefined && (obj.pageTotal = message.pageTotal);\n        message.limit !== undefined && (obj.limit = message.limit);\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => (e ? TxResponse.toJSON(e) : undefined));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        if (object.totalCount !== undefined && object.totalCount !== null) {\n            message.totalCount = object.totalCount;\n        }\n        else {\n            message.totalCount = 0;\n        }\n        if (object.count !== undefined && object.count !== null) {\n            message.count = object.count;\n        }\n        else {\n            message.count = 0;\n        }\n        if (object.pageNumber !== undefined && object.pageNumber !== null) {\n            message.pageNumber = object.pageNumber;\n        }\n        else {\n            message.pageNumber = 0;\n        }\n        if (object.pageTotal !== undefined && object.pageTotal !== null) {\n            message.pageTotal = object.pageTotal;\n        }\n        else {\n            message.pageTotal = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = object.limit;\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(TxResponse.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { PublicKey } from \"../../tendermint/crypto/keys\";\nexport const protobufPackage = \"tendermint.types\";\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined &&\n            (obj.proposer = message.proposer\n                ? Validator.toJSON(message.proposer)\n                : undefined);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined &&\n            (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Proof } from \"../../tendermint/crypto/proof\";\nimport { Consensus } from \"../../tendermint/version/types\";\nimport { ValidatorSet } from \"../../tendermint/types/validator\";\nexport const protobufPackage = \"tendermint.types\";\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"BLOCK_ID_FLAG_UNKNOWN\":\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case \"BLOCK_ID_FLAG_ABSENT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case \"BLOCK_ID_FLAG_COMMIT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case \"BLOCK_ID_FLAG_NIL\":\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return \"BLOCK_ID_FLAG_UNKNOWN\";\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return \"BLOCK_ID_FLAG_ABSENT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return \"BLOCK_ID_FLAG_COMMIT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return \"BLOCK_ID_FLAG_NIL\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"SIGNED_MSG_TYPE_UNKNOWN\":\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case \"SIGNED_MSG_TYPE_PREVOTE\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case \"SIGNED_MSG_TYPE_PRECOMMIT\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case \"SIGNED_MSG_TYPE_PROPOSAL\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return \"SIGNED_MSG_TYPE_UNKNOWN\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return \"SIGNED_MSG_TYPE_PREVOTE\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return \"SIGNED_MSG_TYPE_PRECOMMIT\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return \"SIGNED_MSG_TYPE_PROPOSAL\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined &&\n            (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined &&\n            (obj.partSetHeader = message.partSetHeader\n                ? PartSetHeader.toJSON(message.partSetHeader)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeader = { chainId: \"\", height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== \"\") {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Consensus.toJSON(message.version)\n                : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined &&\n            (obj.lastBlockId = message.lastBlockId\n                ? BlockID.toJSON(message.lastBlockId)\n                : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined\n                ? message.lastCommitHash\n                : new Uint8Array()));\n        message.dataHash !== undefined &&\n            (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined\n                ? message.validatorsHash\n                : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined\n                ? message.nextValidatorsHash\n                : new Uint8Array()));\n        message.consensusHash !== undefined &&\n            (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined\n                ? message.consensusHash\n                : new Uint8Array()));\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined\n                ? message.lastResultsHash\n                : new Uint8Array()));\n        message.evidenceHash !== undefined &&\n            (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined\n                ? message.evidenceHash\n                : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined\n                ? message.proposerAddress\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.validatorIndex !== undefined &&\n            (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? CommitSig.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined &&\n            (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined &&\n            (obj.signedHeader = message.signedHeader\n                ? SignedHeader.toJSON(message.signedHeader)\n                : undefined);\n        message.validatorSet !== undefined &&\n            (obj.validatorSet = message.validatorSet\n                ? ValidatorSet.toJSON(message.validatorSet)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined &&\n            (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    clientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Coin } from \"../../../../cosmos/base/v1beta1/coin\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.applications.transfer.v1\";\nconst baseMsgTransfer = {\n    sourcePort: \"\",\n    sourceChannel: \"\",\n    sender: \"\",\n    receiver: \"\",\n    timeoutTimestamp: 0,\n};\nexport const MsgTransfer = {\n    encode(message, writer = Writer.create()) {\n        if (message.sourcePort !== \"\") {\n            writer.uint32(10).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== \"\") {\n            writer.uint32(18).string(message.sourceChannel);\n        }\n        if (message.token !== undefined) {\n            Coin.encode(message.token, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.sender !== \"\") {\n            writer.uint32(34).string(message.sender);\n        }\n        if (message.receiver !== \"\") {\n            writer.uint32(42).string(message.receiver);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(56).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransfer };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sourcePort = reader.string();\n                    break;\n                case 2:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 3:\n                    message.token = Coin.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.sender = reader.string();\n                    break;\n                case 5:\n                    message.receiver = reader.string();\n                    break;\n                case 6:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromJSON(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = \"\";\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined &&\n            (obj.sourceChannel = message.sourceChannel);\n        message.token !== undefined &&\n            (obj.token = message.token ? Coin.toJSON(message.token) : undefined);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = message.timeoutHeight\n                ? Height.toJSON(message.timeoutHeight)\n                : undefined);\n        message.timeoutTimestamp !== undefined &&\n            (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromPartial(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = \"\";\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgTransferResponse = {};\nexport const MsgTransferResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Transfer(request) {\n        const data = MsgTransfer.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.applications.transfer.v1.Msg\", \"Transfer\", data);\n        return promise.then((data) => MsgTransferResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined &&\n            (obj.ed25519 =\n                message.ed25519 !== undefined\n                    ? base64FromBytes(message.ed25519)\n                    : undefined);\n        message.secp256k1 !== undefined &&\n            (obj.secp256k1 =\n                message.secp256k1 !== undefined\n                    ? base64FromBytes(message.secp256k1)\n                    : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { voteOptionFromJSON, voteOptionToJSON, } from \"../../../cosmos/gov/v1beta1/gov\";\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.gov.v1beta1\";\nconst baseMsgSubmitProposal = { proposer: \"\" };\nexport const MsgSubmitProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.initialDeposit) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.proposer !== \"\") {\n            writer.uint32(26).string(message.proposer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.initialDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.proposer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = String(object.proposer);\n        }\n        else {\n            message.proposer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        if (message.initialDeposit) {\n            obj.initialDeposit = message.initialDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.initialDeposit = [];\n        }\n        message.proposer !== undefined && (obj.proposer = message.proposer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = object.proposer;\n        }\n        else {\n            message.proposer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgSubmitProposalResponse = { proposalId: 0 };\nexport const MsgSubmitProposalResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitProposalResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgSubmitProposalResponse,\n        };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgSubmitProposalResponse,\n        };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgVote = { proposalId: 0, voter: \"\", option: 0 };\nexport const MsgVote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== \"\") {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined &&\n            (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgVoteResponse = {};\nexport const MsgVoteResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVoteResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    },\n};\nconst baseMsgDeposit = { proposalId: 0, depositor: \"\" };\nexport const MsgDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== \"\") {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMsgDepositResponse = {};\nexport const MsgDepositResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDepositResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitProposal(request) {\n        const data = MsgSubmitProposal.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Msg\", \"SubmitProposal\", data);\n        return promise.then((data) => MsgSubmitProposalResponse.decode(new Reader(data)));\n    }\n    Vote(request) {\n        const data = MsgVote.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Msg\", \"Vote\", data);\n        return promise.then((data) => MsgVoteResponse.decode(new Reader(data)));\n    }\n    Deposit(request) {\n        const data = MsgDeposit.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Msg\", \"Deposit\", data);\n        return promise.then((data) => MsgDepositResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n"],"sourceRoot":""}